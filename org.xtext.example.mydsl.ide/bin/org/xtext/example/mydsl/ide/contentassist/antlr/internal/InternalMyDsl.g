/*
 * generated by Xtext 2.9.2
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
		(rule__Model__GreetingsAssignment)*
		{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletranslation_unit
entryRuletranslation_unit
:
{ before(grammarAccess.getTranslation_unitRule()); }
	 ruletranslation_unit
{ after(grammarAccess.getTranslation_unitRule()); } 
	 EOF 
;

// Rule translation_unit
ruletranslation_unit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTranslation_unitAccess().getGroup()); }
		(rule__Translation_unit__Group__0)
		{ after(grammarAccess.getTranslation_unitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletranslation_unitR
entryRuletranslation_unitR
:
{ before(grammarAccess.getTranslation_unitRRule()); }
	 ruletranslation_unitR
{ after(grammarAccess.getTranslation_unitRRule()); } 
	 EOF 
;

// Rule translation_unitR
ruletranslation_unitR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTranslation_unitRAccess().getGroup()); }
		(rule__Translation_unitR__Group__0)
		{ after(grammarAccess.getTranslation_unitRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexternal_declaration
entryRuleexternal_declaration
:
{ before(grammarAccess.getExternal_declarationRule()); }
	 ruleexternal_declaration
{ after(grammarAccess.getExternal_declarationRule()); } 
	 EOF 
;

// Rule external_declaration
ruleexternal_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternal_declarationAccess().getAlternatives()); }
		(rule__External_declaration__Alternatives)
		{ after(grammarAccess.getExternal_declarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_definition
entryRulefunction_definition
:
{ before(grammarAccess.getFunction_definitionRule()); }
	 rulefunction_definition
{ after(grammarAccess.getFunction_definitionRule()); } 
	 EOF 
;

// Rule function_definition
rulefunction_definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getAlternatives()); }
		(rule__Function_definition__Alternatives)
		{ after(grammarAccess.getFunction_definitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclarator
entryRuledeclarator
:
{ before(grammarAccess.getDeclaratorRule()); }
	 ruledeclarator
{ after(grammarAccess.getDeclaratorRule()); } 
	 EOF 
;

// Rule declarator
ruledeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaratorAccess().getAlternatives()); }
		(rule__Declarator__Alternatives)
		{ after(grammarAccess.getDeclaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_qualifier_list
entryRuletype_qualifier_list
:
{ before(grammarAccess.getType_qualifier_listRule()); }
	 ruletype_qualifier_list
{ after(grammarAccess.getType_qualifier_listRule()); } 
	 EOF 
;

// Rule type_qualifier_list
ruletype_qualifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_qualifier_listAccess().getGroup()); }
		(rule__Type_qualifier_list__Group__0)
		{ after(grammarAccess.getType_qualifier_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_qualifier
entryRuletype_qualifier
:
{ before(grammarAccess.getType_qualifierRule()); }
	 ruletype_qualifier
{ after(grammarAccess.getType_qualifierRule()); } 
	 EOF 
;

// Rule type_qualifier
ruletype_qualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_qualifierAccess().getAlternatives()); }
		(rule__Type_qualifier__Alternatives)
		{ after(grammarAccess.getType_qualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_qualifier_listR
entryRuletype_qualifier_listR
:
{ before(grammarAccess.getType_qualifier_listRRule()); }
	 ruletype_qualifier_listR
{ after(grammarAccess.getType_qualifier_listRRule()); } 
	 EOF 
;

// Rule type_qualifier_listR
ruletype_qualifier_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_qualifier_listRAccess().getGroup()); }
		(rule__Type_qualifier_listR__Group__0)
		{ after(grammarAccess.getType_qualifier_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledirect_declarator
entryRuledirect_declarator
:
{ before(grammarAccess.getDirect_declaratorRule()); }
	 ruledirect_declarator
{ after(grammarAccess.getDirect_declaratorRule()); } 
	 EOF 
;

// Rule direct_declarator
ruledirect_declarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirect_declaratorAccess().getAlternatives()); }
		(rule__Direct_declarator__Alternatives)
		{ after(grammarAccess.getDirect_declaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledirect_declaratorR
entryRuledirect_declaratorR
:
{ before(grammarAccess.getDirect_declaratorRRule()); }
	 ruledirect_declaratorR
{ after(grammarAccess.getDirect_declaratorRRule()); } 
	 EOF 
;

// Rule direct_declaratorR
ruledirect_declaratorR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getAlternatives()); }
		(rule__Direct_declaratorR__Alternatives)
		{ after(grammarAccess.getDirect_declaratorRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_type_list
entryRuleparameter_type_list
:
{ before(grammarAccess.getParameter_type_listRule()); }
	 ruleparameter_type_list
{ after(grammarAccess.getParameter_type_listRule()); } 
	 EOF 
;

// Rule parameter_type_list
ruleparameter_type_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_type_listAccess().getAlternatives()); }
		(rule__Parameter_type_list__Alternatives)
		{ after(grammarAccess.getParameter_type_listAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier_list
entryRuleidentifier_list
:
{ before(grammarAccess.getIdentifier_listRule()); }
	 ruleidentifier_list
{ after(grammarAccess.getIdentifier_listRule()); } 
	 EOF 
;

// Rule identifier_list
ruleidentifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getGroup()); }
		(rule__Identifier_list__Group__0)
		{ after(grammarAccess.getIdentifier_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier_listR
entryRuleidentifier_listR
:
{ before(grammarAccess.getIdentifier_listRRule()); }
	 ruleidentifier_listR
{ after(grammarAccess.getIdentifier_listRRule()); } 
	 EOF 
;

// Rule identifier_listR
ruleidentifier_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifier_listRAccess().getGroup()); }
		(rule__Identifier_listR__Group__0)
		{ after(grammarAccess.getIdentifier_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_list
entryRuleparameter_list
:
{ before(grammarAccess.getParameter_listRule()); }
	 ruleparameter_list
{ after(grammarAccess.getParameter_listRule()); } 
	 EOF 
;

// Rule parameter_list
ruleparameter_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_listAccess().getGroup()); }
		(rule__Parameter_list__Group__0)
		{ after(grammarAccess.getParameter_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_listR
entryRuleparameter_listR
:
{ before(grammarAccess.getParameter_listRRule()); }
	 ruleparameter_listR
{ after(grammarAccess.getParameter_listRRule()); } 
	 EOF 
;

// Rule parameter_listR
ruleparameter_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_listRAccess().getGroup()); }
		(rule__Parameter_listR__Group__0)
		{ after(grammarAccess.getParameter_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_declaration
entryRuleparameter_declaration
:
{ before(grammarAccess.getParameter_declarationRule()); }
	 ruleparameter_declaration
{ after(grammarAccess.getParameter_declarationRule()); } 
	 EOF 
;

// Rule parameter_declaration
ruleparameter_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_declarationAccess().getAlternatives()); }
		(rule__Parameter_declaration__Alternatives)
		{ after(grammarAccess.getParameter_declarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleabstract_declarator
entryRuleabstract_declarator
:
{ before(grammarAccess.getAbstract_declaratorRule()); }
	 ruleabstract_declarator
{ after(grammarAccess.getAbstract_declaratorRule()); } 
	 EOF 
;

// Rule abstract_declarator
ruleabstract_declarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstract_declaratorAccess().getPointerParserRuleCall()); }
		rulepointer
		{ after(grammarAccess.getAbstract_declaratorAccess().getPointerParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclaration_list
entryRuledeclaration_list
:
{ before(grammarAccess.getDeclaration_listRule()); }
	 ruledeclaration_list
{ after(grammarAccess.getDeclaration_listRule()); } 
	 EOF 
;

// Rule declaration_list
ruledeclaration_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaration_listAccess().getGroup()); }
		(rule__Declaration_list__Group__0)
		{ after(grammarAccess.getDeclaration_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclaration_listR
entryRuledeclaration_listR
:
{ before(grammarAccess.getDeclaration_listRRule()); }
	 ruledeclaration_listR
{ after(grammarAccess.getDeclaration_listRRule()); } 
	 EOF 
;

// Rule declaration_listR
ruledeclaration_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaration_listRAccess().getGroup()); }
		(rule__Declaration_listR__Group__0)
		{ after(grammarAccess.getDeclaration_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecompound_statement
entryRulecompound_statement
:
{ before(grammarAccess.getCompound_statementRule()); }
	 rulecompound_statement
{ after(grammarAccess.getCompound_statementRule()); } 
	 EOF 
;

// Rule compound_statement
rulecompound_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompound_statementAccess().getAlternatives()); }
		(rule__Compound_statement__Alternatives)
		{ after(grammarAccess.getCompound_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblock_item_list
entryRuleblock_item_list
:
{ before(grammarAccess.getBlock_item_listRule()); }
	 ruleblock_item_list
{ after(grammarAccess.getBlock_item_listRule()); } 
	 EOF 
;

// Rule block_item_list
ruleblock_item_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlock_item_listAccess().getGroup()); }
		(rule__Block_item_list__Group__0)
		{ after(grammarAccess.getBlock_item_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblock_item_listR
entryRuleblock_item_listR
:
{ before(grammarAccess.getBlock_item_listRRule()); }
	 ruleblock_item_listR
{ after(grammarAccess.getBlock_item_listRRule()); } 
	 EOF 
;

// Rule block_item_listR
ruleblock_item_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlock_item_listRAccess().getGroup()); }
		(rule__Block_item_listR__Group__0)
		{ after(grammarAccess.getBlock_item_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblock_item
entryRuleblock_item
:
{ before(grammarAccess.getBlock_itemRule()); }
	 ruleblock_item
{ after(grammarAccess.getBlock_itemRule()); } 
	 EOF 
;

// Rule block_item
ruleblock_item 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlock_itemAccess().getAlternatives()); }
		(rule__Block_item__Alternatives)
		{ after(grammarAccess.getBlock_itemAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulejump_statement
entryRulejump_statement
:
{ before(grammarAccess.getJump_statementRule()); }
	 rulejump_statement
{ after(grammarAccess.getJump_statementRule()); } 
	 EOF 
;

// Rule jump_statement
rulejump_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJump_statementAccess().getAlternatives()); }
		(rule__Jump_statement__Alternatives)
		{ after(grammarAccess.getJump_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelabeled_statement
entryRulelabeled_statement
:
{ before(grammarAccess.getLabeled_statementRule()); }
	 rulelabeled_statement
{ after(grammarAccess.getLabeled_statementRule()); } 
	 EOF 
;

// Rule labeled_statement
rulelabeled_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabeled_statementAccess().getAlternatives()); }
		(rule__Labeled_statement__Alternatives)
		{ after(grammarAccess.getLabeled_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleiteration_statement
entryRuleiteration_statement
:
{ before(grammarAccess.getIteration_statementRule()); }
	 ruleiteration_statement
{ after(grammarAccess.getIteration_statementRule()); } 
	 EOF 
;

// Rule iteration_statement
ruleiteration_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIteration_statementAccess().getAlternatives()); }
		(rule__Iteration_statement__Alternatives)
		{ after(grammarAccess.getIteration_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclaration
entryRuledeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruledeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule declaration
ruledeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinit_declarator_list
entryRuleinit_declarator_list
:
{ before(grammarAccess.getInit_declarator_listRule()); }
	 ruleinit_declarator_list
{ after(grammarAccess.getInit_declarator_listRule()); } 
	 EOF 
;

// Rule init_declarator_list
ruleinit_declarator_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInit_declarator_listAccess().getGroup()); }
		(rule__Init_declarator_list__Group__0)
		{ after(grammarAccess.getInit_declarator_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinit_declarator
entryRuleinit_declarator
:
{ before(grammarAccess.getInit_declaratorRule()); }
	 ruleinit_declarator
{ after(grammarAccess.getInit_declaratorRule()); } 
	 EOF 
;

// Rule init_declarator
ruleinit_declarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInit_declaratorAccess().getAlternatives()); }
		(rule__Init_declarator__Alternatives)
		{ after(grammarAccess.getInit_declaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinit_declarator_listR
entryRuleinit_declarator_listR
:
{ before(grammarAccess.getInit_declarator_listRRule()); }
	 ruleinit_declarator_listR
{ after(grammarAccess.getInit_declarator_listRRule()); } 
	 EOF 
;

// Rule init_declarator_listR
ruleinit_declarator_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInit_declarator_listRAccess().getGroup()); }
		(rule__Init_declarator_listR__Group__0)
		{ after(grammarAccess.getInit_declarator_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclaration_specifiers
entryRuledeclaration_specifiers
:
{ before(grammarAccess.getDeclaration_specifiersRule()); }
	 ruledeclaration_specifiers
{ after(grammarAccess.getDeclaration_specifiersRule()); } 
	 EOF 
;

// Rule declaration_specifiers
ruledeclaration_specifiers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getAlternatives()); }
		(rule__Declaration_specifiers__Alternatives)
		{ after(grammarAccess.getDeclaration_specifiersAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleselection_statement
entryRuleselection_statement
:
{ before(grammarAccess.getSelection_statementRule()); }
	 ruleselection_statement
{ after(grammarAccess.getSelection_statementRule()); } 
	 EOF 
;

// Rule selection_statement
ruleselection_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelection_statementAccess().getAlternatives()); }
		(rule__Selection_statement__Alternatives)
		{ after(grammarAccess.getSelection_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression_statement
entryRuleexpression_statement
:
{ before(grammarAccess.getExpression_statementRule()); }
	 ruleexpression_statement
{ after(grammarAccess.getExpression_statementRule()); } 
	 EOF 
;

// Rule expression_statement
ruleexpression_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression_statementAccess().getAlternatives()); }
		(rule__Expression_statement__Alternatives)
		{ after(grammarAccess.getExpression_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpressionR
entryRuleexpressionR
:
{ before(grammarAccess.getExpressionRRule()); }
	 ruleexpressionR
{ after(grammarAccess.getExpressionRRule()); } 
	 EOF 
;

// Rule expressionR
ruleexpressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionRAccess().getGroup()); }
		(rule__ExpressionR__Group__0)
		{ after(grammarAccess.getExpressionRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconditional_expression
entryRuleconditional_expression
:
{ before(grammarAccess.getConditional_expressionRule()); }
	 ruleconditional_expression
{ after(grammarAccess.getConditional_expressionRule()); } 
	 EOF 
;

// Rule conditional_expression
ruleconditional_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditional_expressionAccess().getAlternatives()); }
		(rule__Conditional_expression__Alternatives)
		{ after(grammarAccess.getConditional_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogical_or_expression
entryRulelogical_or_expression
:
{ before(grammarAccess.getLogical_or_expressionRule()); }
	 rulelogical_or_expression
{ after(grammarAccess.getLogical_or_expressionRule()); } 
	 EOF 
;

// Rule logical_or_expression
rulelogical_or_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogical_or_expressionAccess().getGroup()); }
		(rule__Logical_or_expression__Group__0)
		{ after(grammarAccess.getLogical_or_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogical_or_expressionR
entryRulelogical_or_expressionR
:
{ before(grammarAccess.getLogical_or_expressionRRule()); }
	 rulelogical_or_expressionR
{ after(grammarAccess.getLogical_or_expressionRRule()); } 
	 EOF 
;

// Rule logical_or_expressionR
rulelogical_or_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogical_or_expressionRAccess().getGroup()); }
		(rule__Logical_or_expressionR__Group__0)
		{ after(grammarAccess.getLogical_or_expressionRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogical_and_expression
entryRulelogical_and_expression
:
{ before(grammarAccess.getLogical_and_expressionRule()); }
	 rulelogical_and_expression
{ after(grammarAccess.getLogical_and_expressionRule()); } 
	 EOF 
;

// Rule logical_and_expression
rulelogical_and_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogical_and_expressionAccess().getGroup()); }
		(rule__Logical_and_expression__Group__0)
		{ after(grammarAccess.getLogical_and_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogical_and_expressionR
entryRulelogical_and_expressionR
:
{ before(grammarAccess.getLogical_and_expressionRRule()); }
	 rulelogical_and_expressionR
{ after(grammarAccess.getLogical_and_expressionRRule()); } 
	 EOF 
;

// Rule logical_and_expressionR
rulelogical_and_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogical_and_expressionRAccess().getGroup()); }
		(rule__Logical_and_expressionR__Group__0)
		{ after(grammarAccess.getLogical_and_expressionRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinclusive_or_expression
entryRuleinclusive_or_expression
:
{ before(grammarAccess.getInclusive_or_expressionRule()); }
	 ruleinclusive_or_expression
{ after(grammarAccess.getInclusive_or_expressionRule()); } 
	 EOF 
;

// Rule inclusive_or_expression
ruleinclusive_or_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInclusive_or_expressionAccess().getGroup()); }
		(rule__Inclusive_or_expression__Group__0)
		{ after(grammarAccess.getInclusive_or_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinclusive_or_expressionR
entryRuleinclusive_or_expressionR
:
{ before(grammarAccess.getInclusive_or_expressionRRule()); }
	 ruleinclusive_or_expressionR
{ after(grammarAccess.getInclusive_or_expressionRRule()); } 
	 EOF 
;

// Rule inclusive_or_expressionR
ruleinclusive_or_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInclusive_or_expressionRAccess().getGroup()); }
		(rule__Inclusive_or_expressionR__Group__0)
		{ after(grammarAccess.getInclusive_or_expressionRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexclusive_or_expression
entryRuleexclusive_or_expression
:
{ before(grammarAccess.getExclusive_or_expressionRule()); }
	 ruleexclusive_or_expression
{ after(grammarAccess.getExclusive_or_expressionRule()); } 
	 EOF 
;

// Rule exclusive_or_expression
ruleexclusive_or_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusive_or_expressionAccess().getGroup()); }
		(rule__Exclusive_or_expression__Group__0)
		{ after(grammarAccess.getExclusive_or_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexclusive_or_expressionR
entryRuleexclusive_or_expressionR
:
{ before(grammarAccess.getExclusive_or_expressionRRule()); }
	 ruleexclusive_or_expressionR
{ after(grammarAccess.getExclusive_or_expressionRRule()); } 
	 EOF 
;

// Rule exclusive_or_expressionR
ruleexclusive_or_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusive_or_expressionRAccess().getGroup()); }
		(rule__Exclusive_or_expressionR__Group__0)
		{ after(grammarAccess.getExclusive_or_expressionRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleand_expressionR
entryRuleand_expressionR
:
{ before(grammarAccess.getAnd_expressionRRule()); }
	 ruleand_expressionR
{ after(grammarAccess.getAnd_expressionRRule()); } 
	 EOF 
;

// Rule and_expressionR
ruleand_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_expressionRAccess().getGroup()); }
		(rule__And_expressionR__Group__0)
		{ after(grammarAccess.getAnd_expressionRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleand_expression
entryRuleand_expression
:
{ before(grammarAccess.getAnd_expressionRule()); }
	 ruleand_expression
{ after(grammarAccess.getAnd_expressionRule()); } 
	 EOF 
;

// Rule and_expression
ruleand_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_expressionAccess().getGroup()); }
		(rule__And_expression__Group__0)
		{ after(grammarAccess.getAnd_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleequality_expression
entryRuleequality_expression
:
{ before(grammarAccess.getEquality_expressionRule()); }
	 ruleequality_expression
{ after(grammarAccess.getEquality_expressionRule()); } 
	 EOF 
;

// Rule equality_expression
ruleequality_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquality_expressionAccess().getGroup()); }
		(rule__Equality_expression__Group__0)
		{ after(grammarAccess.getEquality_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleequality_expressionR
entryRuleequality_expressionR
:
{ before(grammarAccess.getEquality_expressionRRule()); }
	 ruleequality_expressionR
{ after(grammarAccess.getEquality_expressionRRule()); } 
	 EOF 
;

// Rule equality_expressionR
ruleequality_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquality_expressionRAccess().getAlternatives()); }
		(rule__Equality_expressionR__Alternatives)
		{ after(grammarAccess.getEquality_expressionRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerelational_expression
entryRulerelational_expression
:
{ before(grammarAccess.getRelational_expressionRule()); }
	 rulerelational_expression
{ after(grammarAccess.getRelational_expressionRule()); } 
	 EOF 
;

// Rule relational_expression
rulerelational_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelational_expressionAccess().getGroup()); }
		(rule__Relational_expression__Group__0)
		{ after(grammarAccess.getRelational_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerelational_expressionR
entryRulerelational_expressionR
:
{ before(grammarAccess.getRelational_expressionRRule()); }
	 rulerelational_expressionR
{ after(grammarAccess.getRelational_expressionRRule()); } 
	 EOF 
;

// Rule relational_expressionR
rulerelational_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getAlternatives()); }
		(rule__Relational_expressionR__Alternatives)
		{ after(grammarAccess.getRelational_expressionRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleshift_expression
entryRuleshift_expression
:
{ before(grammarAccess.getShift_expressionRule()); }
	 ruleshift_expression
{ after(grammarAccess.getShift_expressionRule()); } 
	 EOF 
;

// Rule shift_expression
ruleshift_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShift_expressionAccess().getGroup()); }
		(rule__Shift_expression__Group__0)
		{ after(grammarAccess.getShift_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleshift_expressionR
entryRuleshift_expressionR
:
{ before(grammarAccess.getShift_expressionRRule()); }
	 ruleshift_expressionR
{ after(grammarAccess.getShift_expressionRRule()); } 
	 EOF 
;

// Rule shift_expressionR
ruleshift_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShift_expressionRAccess().getAlternatives()); }
		(rule__Shift_expressionR__Alternatives)
		{ after(grammarAccess.getShift_expressionRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleadditive_expression
entryRuleadditive_expression
:
{ before(grammarAccess.getAdditive_expressionRule()); }
	 ruleadditive_expression
{ after(grammarAccess.getAdditive_expressionRule()); } 
	 EOF 
;

// Rule additive_expression
ruleadditive_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditive_expressionAccess().getGroup()); }
		(rule__Additive_expression__Group__0)
		{ after(grammarAccess.getAdditive_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleadditive_expressionR
entryRuleadditive_expressionR
:
{ before(grammarAccess.getAdditive_expressionRRule()); }
	 ruleadditive_expressionR
{ after(grammarAccess.getAdditive_expressionRRule()); } 
	 EOF 
;

// Rule additive_expressionR
ruleadditive_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditive_expressionRAccess().getAlternatives()); }
		(rule__Additive_expressionR__Alternatives)
		{ after(grammarAccess.getAdditive_expressionRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemultiplicative_expressionR
entryRulemultiplicative_expressionR
:
{ before(grammarAccess.getMultiplicative_expressionRRule()); }
	 rulemultiplicative_expressionR
{ after(grammarAccess.getMultiplicative_expressionRRule()); } 
	 EOF 
;

// Rule multiplicative_expressionR
rulemultiplicative_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getAlternatives()); }
		(rule__Multiplicative_expressionR__Alternatives)
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemultiplicative_expression
entryRulemultiplicative_expression
:
{ before(grammarAccess.getMultiplicative_expressionRule()); }
	 rulemultiplicative_expression
{ after(grammarAccess.getMultiplicative_expressionRule()); } 
	 EOF 
;

// Rule multiplicative_expression
rulemultiplicative_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicative_expressionAccess().getGroup()); }
		(rule__Multiplicative_expression__Group__0)
		{ after(grammarAccess.getMultiplicative_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignment_expression
entryRuleassignment_expression
:
{ before(grammarAccess.getAssignment_expressionRule()); }
	 ruleassignment_expression
{ after(grammarAccess.getAssignment_expressionRule()); } 
	 EOF 
;

// Rule assignment_expression
ruleassignment_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignment_expressionAccess().getAlternatives()); }
		(rule__Assignment_expression__Alternatives)
		{ after(grammarAccess.getAssignment_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecast_expression
entryRulecast_expression
:
{ before(grammarAccess.getCast_expressionRule()); }
	 rulecast_expression
{ after(grammarAccess.getCast_expressionRule()); } 
	 EOF 
;

// Rule cast_expression
rulecast_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCast_expressionAccess().getAlternatives()); }
		(rule__Cast_expression__Alternatives)
		{ after(grammarAccess.getCast_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunary_expression
entryRuleunary_expression
:
{ before(grammarAccess.getUnary_expressionRule()); }
	 ruleunary_expression
{ after(grammarAccess.getUnary_expressionRule()); } 
	 EOF 
;

// Rule unary_expression
ruleunary_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnary_expressionAccess().getAlternatives()); }
		(rule__Unary_expression__Alternatives)
		{ after(grammarAccess.getUnary_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepostfix_expression
entryRulepostfix_expression
:
{ before(grammarAccess.getPostfix_expressionRule()); }
	 rulepostfix_expression
{ after(grammarAccess.getPostfix_expressionRule()); } 
	 EOF 
;

// Rule postfix_expression
rulepostfix_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getAlternatives()); }
		(rule__Postfix_expression__Alternatives)
		{ after(grammarAccess.getPostfix_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinitializer
entryRuleinitializer
:
{ before(grammarAccess.getInitializerRule()); }
	 ruleinitializer
{ after(grammarAccess.getInitializerRule()); } 
	 EOF 
;

// Rule initializer
ruleinitializer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializerAccess().getAlternatives()); }
		(rule__Initializer__Alternatives)
		{ after(grammarAccess.getInitializerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinitializer_list
entryRuleinitializer_list
:
{ before(grammarAccess.getInitializer_listRule()); }
	 ruleinitializer_list
{ after(grammarAccess.getInitializer_listRule()); } 
	 EOF 
;

// Rule initializer_list
ruleinitializer_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializer_listAccess().getAlternatives()); }
		(rule__Initializer_list__Alternatives)
		{ after(grammarAccess.getInitializer_listAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinitializer_listR
entryRuleinitializer_listR
:
{ before(grammarAccess.getInitializer_listRRule()); }
	 ruleinitializer_listR
{ after(grammarAccess.getInitializer_listRRule()); } 
	 EOF 
;

// Rule initializer_listR
ruleinitializer_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializer_listRAccess().getAlternatives()); }
		(rule__Initializer_listR__Alternatives)
		{ after(grammarAccess.getInitializer_listRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledesignation
entryRuledesignation
:
{ before(grammarAccess.getDesignationRule()); }
	 ruledesignation
{ after(grammarAccess.getDesignationRule()); } 
	 EOF 
;

// Rule designation
ruledesignation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDesignationAccess().getGroup()); }
		(rule__Designation__Group__0)
		{ after(grammarAccess.getDesignationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledesignator_list
entryRuledesignator_list
:
{ before(grammarAccess.getDesignator_listRule()); }
	 ruledesignator_list
{ after(grammarAccess.getDesignator_listRule()); } 
	 EOF 
;

// Rule designator_list
ruledesignator_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDesignator_listAccess().getGroup()); }
		(rule__Designator_list__Group__0)
		{ after(grammarAccess.getDesignator_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledesignator_listR
entryRuledesignator_listR
:
{ before(grammarAccess.getDesignator_listRRule()); }
	 ruledesignator_listR
{ after(grammarAccess.getDesignator_listRRule()); } 
	 EOF 
;

// Rule designator_listR
ruledesignator_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDesignator_listRAccess().getGroup()); }
		(rule__Designator_listR__Group__0)
		{ after(grammarAccess.getDesignator_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledesignator
entryRuledesignator
:
{ before(grammarAccess.getDesignatorRule()); }
	 ruledesignator
{ after(grammarAccess.getDesignatorRule()); } 
	 EOF 
;

// Rule designator
ruledesignator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDesignatorAccess().getAlternatives()); }
		(rule__Designator__Alternatives)
		{ after(grammarAccess.getDesignatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant_expression
entryRuleconstant_expression
:
{ before(grammarAccess.getConstant_expressionRule()); }
	 ruleconstant_expression
{ after(grammarAccess.getConstant_expressionRule()); } 
	 EOF 
;

// Rule constant_expression
ruleconstant_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_expressionAccess().getConditional_expressionParserRuleCall()); }
		ruleconditional_expression
		{ after(grammarAccess.getConstant_expressionAccess().getConditional_expressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_name
entryRuletype_name
:
{ before(grammarAccess.getType_nameRule()); }
	 ruletype_name
{ after(grammarAccess.getType_nameRule()); } 
	 EOF 
;

// Rule type_name
ruletype_name 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_nameAccess().getAlternatives()); }
		(rule__Type_name__Alternatives)
		{ after(grammarAccess.getType_nameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulespecifier_qualifier_list
entryRulespecifier_qualifier_list
:
{ before(grammarAccess.getSpecifier_qualifier_listRule()); }
	 rulespecifier_qualifier_list
{ after(grammarAccess.getSpecifier_qualifier_listRule()); } 
	 EOF 
;

// Rule specifier_qualifier_list
rulespecifier_qualifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getAlternatives()); }
		(rule__Specifier_qualifier_list__Alternatives)
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declarator_list
entryRulestruct_declarator_list
:
{ before(grammarAccess.getStruct_declarator_listRule()); }
	 rulestruct_declarator_list
{ after(grammarAccess.getStruct_declarator_listRule()); } 
	 EOF 
;

// Rule struct_declarator_list
rulestruct_declarator_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_declarator_listAccess().getGroup()); }
		(rule__Struct_declarator_list__Group__0)
		{ after(grammarAccess.getStruct_declarator_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declaration_list
entryRulestruct_declaration_list
:
{ before(grammarAccess.getStruct_declaration_listRule()); }
	 rulestruct_declaration_list
{ after(grammarAccess.getStruct_declaration_listRule()); } 
	 EOF 
;

// Rule struct_declaration_list
rulestruct_declaration_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_declaration_listAccess().getGroup()); }
		(rule__Struct_declaration_list__Group__0)
		{ after(grammarAccess.getStruct_declaration_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declaration_listR
entryRulestruct_declaration_listR
:
{ before(grammarAccess.getStruct_declaration_listRRule()); }
	 rulestruct_declaration_listR
{ after(grammarAccess.getStruct_declaration_listRRule()); } 
	 EOF 
;

// Rule struct_declaration_listR
rulestruct_declaration_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_declaration_listRAccess().getGroup()); }
		(rule__Struct_declaration_listR__Group__0)
		{ after(grammarAccess.getStruct_declaration_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declaration
entryRulestruct_declaration
:
{ before(grammarAccess.getStruct_declarationRule()); }
	 rulestruct_declaration
{ after(grammarAccess.getStruct_declarationRule()); } 
	 EOF 
;

// Rule struct_declaration
rulestruct_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_declarationAccess().getAlternatives()); }
		(rule__Struct_declaration__Alternatives)
		{ after(grammarAccess.getStruct_declarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declarator_listR
entryRulestruct_declarator_listR
:
{ before(grammarAccess.getStruct_declarator_listRRule()); }
	 rulestruct_declarator_listR
{ after(grammarAccess.getStruct_declarator_listRRule()); } 
	 EOF 
;

// Rule struct_declarator_listR
rulestruct_declarator_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_declarator_listRAccess().getGroup()); }
		(rule__Struct_declarator_listR__Group__0)
		{ after(grammarAccess.getStruct_declarator_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declarator
entryRulestruct_declarator
:
{ before(grammarAccess.getStruct_declaratorRule()); }
	 rulestruct_declarator
{ after(grammarAccess.getStruct_declaratorRule()); } 
	 EOF 
;

// Rule struct_declarator
rulestruct_declarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getAlternatives()); }
		(rule__Struct_declarator__Alternatives)
		{ after(grammarAccess.getStruct_declaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatic_assert_declaration
entryRulestatic_assert_declaration
:
{ before(grammarAccess.getStatic_assert_declarationRule()); }
	 rulestatic_assert_declaration
{ after(grammarAccess.getStatic_assert_declarationRule()); } 
	 EOF 
;

// Rule static_assert_declaration
rulestatic_assert_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatic_assert_declarationAccess().getGroup()); }
		(rule__Static_assert_declaration__Group__0)
		{ after(grammarAccess.getStatic_assert_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_or_union_specifier
entryRulestruct_or_union_specifier
:
{ before(grammarAccess.getStruct_or_union_specifierRule()); }
	 rulestruct_or_union_specifier
{ after(grammarAccess.getStruct_or_union_specifierRule()); } 
	 EOF 
;

// Rule struct_or_union_specifier
rulestruct_or_union_specifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getAlternatives()); }
		(rule__Struct_or_union_specifier__Alternatives)
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleatomic_type_specifier
entryRuleatomic_type_specifier
:
{ before(grammarAccess.getAtomic_type_specifierRule()); }
	 ruleatomic_type_specifier
{ after(grammarAccess.getAtomic_type_specifierRule()); } 
	 EOF 
;

// Rule atomic_type_specifier
ruleatomic_type_specifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomic_type_specifierAccess().getGroup()); }
		(rule__Atomic_type_specifier__Group__0)
		{ after(grammarAccess.getAtomic_type_specifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepostfix_expressionR
entryRulepostfix_expressionR
:
{ before(grammarAccess.getPostfix_expressionRRule()); }
	 rulepostfix_expressionR
{ after(grammarAccess.getPostfix_expressionRRule()); } 
	 EOF 
;

// Rule postfix_expressionR
rulepostfix_expressionR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getAlternatives()); }
		(rule__Postfix_expressionR__Alternatives)
		{ after(grammarAccess.getPostfix_expressionRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleargument_expression_list
entryRuleargument_expression_list
:
{ before(grammarAccess.getArgument_expression_listRule()); }
	 ruleargument_expression_list
{ after(grammarAccess.getArgument_expression_listRule()); } 
	 EOF 
;

// Rule argument_expression_list
ruleargument_expression_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgument_expression_listAccess().getGroup()); }
		(rule__Argument_expression_list__Group__0)
		{ after(grammarAccess.getArgument_expression_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleargument_expression_listR
entryRuleargument_expression_listR
:
{ before(grammarAccess.getArgument_expression_listRRule()); }
	 ruleargument_expression_listR
{ after(grammarAccess.getArgument_expression_listRRule()); } 
	 EOF 
;

// Rule argument_expression_listR
ruleargument_expression_listR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgument_expression_listRAccess().getGroup()); }
		(rule__Argument_expression_listR__Group__0)
		{ after(grammarAccess.getArgument_expression_listRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimary_expression
entryRuleprimary_expression
:
{ before(grammarAccess.getPrimary_expressionRule()); }
	 ruleprimary_expression
{ after(grammarAccess.getPrimary_expressionRule()); } 
	 EOF 
;

// Rule primary_expression
ruleprimary_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getAlternatives()); }
		(rule__Primary_expression__Alternatives)
		{ after(grammarAccess.getPrimary_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepointer
entryRulepointer
:
{ before(grammarAccess.getPointerRule()); }
	 rulepointer
{ after(grammarAccess.getPointerRule()); } 
	 EOF 
;

// Rule pointer
rulepointer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerAccess().getAlternatives()); }
		(rule__Pointer__Alternatives)
		{ after(grammarAccess.getPointerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant
entryRuleconstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleconstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule constant
ruleconstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOUBLE_NUMBER
entryRuleDOUBLE_NUMBER
:
{ before(grammarAccess.getDOUBLE_NUMBERRule()); }
	 ruleDOUBLE_NUMBER
{ after(grammarAccess.getDOUBLE_NUMBERRule()); } 
	 EOF 
;

// Rule DOUBLE_NUMBER
ruleDOUBLE_NUMBER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLE_NUMBERAccess().getGroup()); }
		(rule__DOUBLE_NUMBER__Group__0)
		{ after(grammarAccess.getDOUBLE_NUMBERAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIDENTIFIER
entryRuleIDENTIFIER
:
{ before(grammarAccess.getIDENTIFIERRule()); }
	 ruleIDENTIFIER
{ after(grammarAccess.getIDENTIFIERRule()); } 
	 EOF 
;

// Rule IDENTIFIER
ruleIDENTIFIER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIDENTIFIERAccess().getNameAssignment()); }
		(rule__IDENTIFIER__NameAssignment)
		{ after(grammarAccess.getIDENTIFIERAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_or_union
entryRulestruct_or_union
:
{ before(grammarAccess.getStruct_or_unionRule()); }
	 rulestruct_or_union
{ after(grammarAccess.getStruct_or_unionRule()); } 
	 EOF 
;

// Rule struct_or_union
rulestruct_or_union 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_or_unionAccess().getAlternatives()); }
		(rule__Struct_or_union__Alternatives)
		{ after(grammarAccess.getStruct_or_unionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunary_operator
entryRuleunary_operator
:
{ before(grammarAccess.getUnary_operatorRule()); }
	 ruleunary_operator
{ after(grammarAccess.getUnary_operatorRule()); } 
	 EOF 
;

// Rule unary_operator
ruleunary_operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
		(rule__Unary_operator__Alternatives)
		{ after(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_specifier
entryRuletype_specifier
:
{ before(grammarAccess.getType_specifierRule()); }
	 ruletype_specifier
{ after(grammarAccess.getType_specifierRule()); } 
	 EOF 
;

// Rule type_specifier
ruletype_specifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_specifierAccess().getAlternatives()); }
		(rule__Type_specifier__Alternatives)
		{ after(grammarAccess.getType_specifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestorage_class_specifier
entryRulestorage_class_specifier
:
{ before(grammarAccess.getStorage_class_specifierRule()); }
	 rulestorage_class_specifier
{ after(grammarAccess.getStorage_class_specifierRule()); } 
	 EOF 
;

// Rule storage_class_specifier
rulestorage_class_specifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getAlternatives()); }
		(rule__Storage_class_specifier__Alternatives)
		{ after(grammarAccess.getStorage_class_specifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignment_operator
entryRuleassignment_operator
:
{ before(grammarAccess.getAssignment_operatorRule()); }
	 ruleassignment_operator
{ after(grammarAccess.getAssignment_operatorRule()); } 
	 EOF 
;

// Rule assignment_operator
ruleassignment_operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getAlternatives()); }
		(rule__Assignment_operator__Alternatives)
		{ after(grammarAccess.getAssignment_operatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External_declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternal_declarationAccess().getFunction_definitionParserRuleCall_0()); }
		rulefunction_definition
		{ after(grammarAccess.getExternal_declarationAccess().getFunction_definitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExternal_declarationAccess().getDeclarationParserRuleCall_1()); }
		ruledeclaration
		{ after(grammarAccess.getExternal_declarationAccess().getDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getGroup_0()); }
		(rule__Function_definition__Group_0__0)
		{ after(grammarAccess.getFunction_definitionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunction_definitionAccess().getGroup_1()); }
		(rule__Function_definition__Group_1__0)
		{ after(grammarAccess.getFunction_definitionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getGroup_0()); }
		(rule__Declarator__Group_0__0)
		{ after(grammarAccess.getDeclaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaratorAccess().getDirect_declaratorParserRuleCall_1()); }
		ruledirect_declarator
		{ after(grammarAccess.getDeclaratorAccess().getDirect_declaratorParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_qualifierAccess().getCONSTKeyword_0()); }
		'CONST'
		{ after(grammarAccess.getType_qualifierAccess().getCONSTKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_qualifierAccess().getRESTRICTKeyword_1()); }
		'RESTRICT'
		{ after(grammarAccess.getType_qualifierAccess().getRESTRICTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getType_qualifierAccess().getVOLATILEKeyword_2()); }
		'VOLATILE'
		{ after(grammarAccess.getType_qualifierAccess().getVOLATILEKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getType_qualifierAccess().getATOMICKeyword_3()); }
		'ATOMIC'
		{ after(grammarAccess.getType_qualifierAccess().getATOMICKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorAccess().getGroup_0()); }
		(rule__Direct_declarator__Group_0__0)
		{ after(grammarAccess.getDirect_declaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorAccess().getGroup_1()); }
		(rule__Direct_declarator__Group_1__0)
		{ after(grammarAccess.getDirect_declaratorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_0()); }
		(rule__Direct_declaratorR__Group_0__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_1()); }
		(rule__Direct_declaratorR__Group_1__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_2()); }
		(rule__Direct_declaratorR__Group_2__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_3()); }
		(rule__Direct_declaratorR__Group_3__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_4()); }
		(rule__Direct_declaratorR__Group_4__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_5()); }
		(rule__Direct_declaratorR__Group_5__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_6()); }
		(rule__Direct_declaratorR__Group_6__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_7()); }
		(rule__Direct_declaratorR__Group_7__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_8()); }
		(rule__Direct_declaratorR__Group_8__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_9()); }
		(rule__Direct_declaratorR__Group_9__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_9()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_10()); }
		(rule__Direct_declaratorR__Group_10__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_10()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getGroup_11()); }
		(rule__Direct_declaratorR__Group_11__0)
		{ after(grammarAccess.getDirect_declaratorRAccess().getGroup_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_type_listAccess().getGroup_0()); }
		(rule__Parameter_type_list__Group_0__0)
		{ after(grammarAccess.getParameter_type_listAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameter_type_listAccess().getParameter_listParserRuleCall_1()); }
		ruleparameter_list
		{ after(grammarAccess.getParameter_type_listAccess().getParameter_listParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_declarationAccess().getGroup_0()); }
		(rule__Parameter_declaration__Group_0__0)
		{ after(grammarAccess.getParameter_declarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameter_declarationAccess().getGroup_1()); }
		(rule__Parameter_declaration__Group_1__0)
		{ after(grammarAccess.getParameter_declarationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersParserRuleCall_2()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompound_statementAccess().getGroup_0()); }
		(rule__Compound_statement__Group_0__0)
		{ after(grammarAccess.getCompound_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompound_statementAccess().getGroup_1()); }
		(rule__Compound_statement__Group_1__0)
		{ after(grammarAccess.getCompound_statementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlock_itemAccess().getDeclarationParserRuleCall_0()); }
		ruledeclaration
		{ after(grammarAccess.getBlock_itemAccess().getDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlock_itemAccess().getStatementParserRuleCall_1()); }
		rulestatement
		{ after(grammarAccess.getBlock_itemAccess().getStatementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabeled_statementParserRuleCall_0()); }
		rulelabeled_statement
		{ after(grammarAccess.getStatementAccess().getLabeled_statementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCompound_statementParserRuleCall_1()); }
		rulecompound_statement
		{ after(grammarAccess.getStatementAccess().getCompound_statementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getExpression_statementParserRuleCall_2()); }
		ruleexpression_statement
		{ after(grammarAccess.getStatementAccess().getExpression_statementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelection_statementParserRuleCall_3()); }
		ruleselection_statement
		{ after(grammarAccess.getStatementAccess().getSelection_statementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIteration_statementParserRuleCall_4()); }
		ruleiteration_statement
		{ after(grammarAccess.getStatementAccess().getIteration_statementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getJump_statementParserRuleCall_5()); }
		rulejump_statement
		{ after(grammarAccess.getStatementAccess().getJump_statementParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_0()); }
		(rule__Jump_statement__Group_0__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_1()); }
		(rule__Jump_statement__Group_1__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_2()); }
		(rule__Jump_statement__Group_2__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_3()); }
		(rule__Jump_statement__Group_3__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_4()); }
		(rule__Jump_statement__Group_4__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeled_statementAccess().getGroup_0()); }
		(rule__Labeled_statement__Group_0__0)
		{ after(grammarAccess.getLabeled_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLabeled_statementAccess().getGroup_1()); }
		(rule__Labeled_statement__Group_1__0)
		{ after(grammarAccess.getLabeled_statementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLabeled_statementAccess().getGroup_2()); }
		(rule__Labeled_statement__Group_2__0)
		{ after(grammarAccess.getLabeled_statementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_0()); }
		(rule__Iteration_statement__Group_0__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_1()); }
		(rule__Iteration_statement__Group_1__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_2()); }
		(rule__Iteration_statement__Group_2__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_3()); }
		(rule__Iteration_statement__Group_3__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_4()); }
		(rule__Iteration_statement__Group_4__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_5()); }
		(rule__Iteration_statement__Group_5__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup_0()); }
		(rule__Declaration__Group_0__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getStatic_assert_declarationParserRuleCall_1()); }
		rulestatic_assert_declaration
		{ after(grammarAccess.getDeclarationAccess().getStatic_assert_declarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInit_declaratorAccess().getGroup_0()); }
		(rule__Init_declarator__Group_0__0)
		{ after(grammarAccess.getInit_declaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getInit_declaratorAccess().getDeclaratorParserRuleCall_1()); }
		ruledeclarator
		{ after(grammarAccess.getInit_declaratorAccess().getDeclaratorParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getGroup_0()); }
		(rule__Declaration_specifiers__Group_0__0)
		{ after(grammarAccess.getDeclaration_specifiersAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierParserRuleCall_1()); }
		rulestorage_class_specifier
		{ after(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getGroup_2()); }
		(rule__Declaration_specifiers__Group_2__0)
		{ after(grammarAccess.getDeclaration_specifiersAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getType_specifierParserRuleCall_3()); }
		ruletype_specifier
		{ after(grammarAccess.getDeclaration_specifiersAccess().getType_specifierParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getGroup_4()); }
		(rule__Declaration_specifiers__Group_4__0)
		{ after(grammarAccess.getDeclaration_specifiersAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierParserRuleCall_5()); }
		ruletype_qualifier
		{ after(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_statementAccess().getGroup_0()); }
		(rule__Selection_statement__Group_0__0)
		{ after(grammarAccess.getSelection_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelection_statementAccess().getGroup_1()); }
		(rule__Selection_statement__Group_1__0)
		{ after(grammarAccess.getSelection_statementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelection_statementAccess().getGroup_2()); }
		(rule__Selection_statement__Group_2__0)
		{ after(grammarAccess.getSelection_statementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression_statementAccess().getDOT_COMMATerminalRuleCall_0()); }
		RULE_DOT_COMMA
		{ after(grammarAccess.getExpression_statementAccess().getDOT_COMMATerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpression_statementAccess().getGroup_1()); }
		(rule__Expression_statement__Group_1__0)
		{ after(grammarAccess.getExpression_statementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionParserRuleCall_0()); }
		rulelogical_or_expression
		{ after(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditional_expressionAccess().getGroup_1()); }
		(rule__Conditional_expression__Group_1__0)
		{ after(grammarAccess.getConditional_expressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquality_expressionRAccess().getGroup_0()); }
		(rule__Equality_expressionR__Group_0__0)
		{ after(grammarAccess.getEquality_expressionRAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEquality_expressionRAccess().getGroup_1()); }
		(rule__Equality_expressionR__Group_1__0)
		{ after(grammarAccess.getEquality_expressionRAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getGroup_0()); }
		(rule__Relational_expressionR__Group_0__0)
		{ after(grammarAccess.getRelational_expressionRAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getGroup_1()); }
		(rule__Relational_expressionR__Group_1__0)
		{ after(grammarAccess.getRelational_expressionRAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getGroup_2()); }
		(rule__Relational_expressionR__Group_2__0)
		{ after(grammarAccess.getRelational_expressionRAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getGroup_3()); }
		(rule__Relational_expressionR__Group_3__0)
		{ after(grammarAccess.getRelational_expressionRAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShift_expressionRAccess().getGroup_0()); }
		(rule__Shift_expressionR__Group_0__0)
		{ after(grammarAccess.getShift_expressionRAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getShift_expressionRAccess().getGroup_1()); }
		(rule__Shift_expressionR__Group_1__0)
		{ after(grammarAccess.getShift_expressionRAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_expressionRAccess().getGroup_0()); }
		(rule__Additive_expressionR__Group_0__0)
		{ after(grammarAccess.getAdditive_expressionRAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditive_expressionRAccess().getGroup_1()); }
		(rule__Additive_expressionR__Group_1__0)
		{ after(grammarAccess.getAdditive_expressionRAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getGroup_0()); }
		(rule__Multiplicative_expressionR__Group_0__0)
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getGroup_1()); }
		(rule__Multiplicative_expressionR__Group_1__0)
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getGroup_2()); }
		(rule__Multiplicative_expressionR__Group_2__0)
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_expressionAccess().getConditional_expressionParserRuleCall_0()); }
		ruleconditional_expression
		{ after(grammarAccess.getAssignment_expressionAccess().getConditional_expressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_expressionAccess().getGroup_1()); }
		(rule__Assignment_expression__Group_1__0)
		{ after(grammarAccess.getAssignment_expressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCast_expressionAccess().getUnary_expressionParserRuleCall_0()); }
		ruleunary_expression
		{ after(grammarAccess.getCast_expressionAccess().getUnary_expressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCast_expressionAccess().getGroup_1()); }
		(rule__Cast_expression__Group_1__0)
		{ after(grammarAccess.getCast_expressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_expressionAccess().getPostfix_expressionParserRuleCall_0()); }
		rulepostfix_expression
		{ after(grammarAccess.getUnary_expressionAccess().getPostfix_expressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_expressionAccess().getGroup_1()); }
		(rule__Unary_expression__Group_1__0)
		{ after(grammarAccess.getUnary_expressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_expressionAccess().getGroup_2()); }
		(rule__Unary_expression__Group_2__0)
		{ after(grammarAccess.getUnary_expressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_expressionAccess().getGroup_3()); }
		(rule__Unary_expression__Group_3__0)
		{ after(grammarAccess.getUnary_expressionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getGroup_0()); }
		(rule__Postfix_expression__Group_0__0)
		{ after(grammarAccess.getPostfix_expressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getGroup_1()); }
		(rule__Postfix_expression__Group_1__0)
		{ after(grammarAccess.getPostfix_expressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getGroup_2()); }
		(rule__Postfix_expression__Group_2__0)
		{ after(grammarAccess.getPostfix_expressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializerAccess().getGroup_0()); }
		(rule__Initializer__Group_0__0)
		{ after(grammarAccess.getInitializerAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitializerAccess().getGroup_1()); }
		(rule__Initializer__Group_1__0)
		{ after(grammarAccess.getInitializerAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getInitializerAccess().getAssignment_expressionParserRuleCall_2()); }
		ruleassignment_expression
		{ after(grammarAccess.getInitializerAccess().getAssignment_expressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listAccess().getGroup_0()); }
		(rule__Initializer_list__Group_0__0)
		{ after(grammarAccess.getInitializer_listAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitializer_listAccess().getGroup_1()); }
		(rule__Initializer_list__Group_1__0)
		{ after(grammarAccess.getInitializer_listAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listRAccess().getGroup_0()); }
		(rule__Initializer_listR__Group_0__0)
		{ after(grammarAccess.getInitializer_listRAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitializer_listRAccess().getGroup_1()); }
		(rule__Initializer_listR__Group_1__0)
		{ after(grammarAccess.getInitializer_listRAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDesignatorAccess().getGroup_0()); }
		(rule__Designator__Group_0__0)
		{ after(grammarAccess.getDesignatorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDesignatorAccess().getGroup_1()); }
		(rule__Designator__Group_1__0)
		{ after(grammarAccess.getDesignatorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_nameAccess().getGroup_0()); }
		(rule__Type_name__Group_0__0)
		{ after(grammarAccess.getType_nameAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listParserRuleCall_1()); }
		rulespecifier_qualifier_list
		{ after(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getGroup_0()); }
		(rule__Specifier_qualifier_list__Group_0__0)
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierParserRuleCall_1()); }
		ruletype_qualifier
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declarationAccess().getGroup_0()); }
		(rule__Struct_declaration__Group_0__0)
		{ after(grammarAccess.getStruct_declarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_declarationAccess().getGroup_1()); }
		(rule__Struct_declaration__Group_1__0)
		{ after(grammarAccess.getStruct_declarationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_declarationAccess().getStatic_assert_declarationParserRuleCall_2()); }
		rulestatic_assert_declaration
		{ after(grammarAccess.getStruct_declarationAccess().getStatic_assert_declarationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getGroup_0()); }
		(rule__Struct_declarator__Group_0__0)
		{ after(grammarAccess.getStruct_declaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getGroup_1()); }
		(rule__Struct_declarator__Group_1__0)
		{ after(grammarAccess.getStruct_declaratorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getDeclaratorParserRuleCall_2()); }
		ruledeclarator
		{ after(grammarAccess.getStruct_declaratorAccess().getDeclaratorParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getGroup_0()); }
		(rule__Struct_or_union_specifier__Group_0__0)
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getGroup_1()); }
		(rule__Struct_or_union_specifier__Group_1__0)
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getGroup_2()); }
		(rule__Struct_or_union_specifier__Group_2__0)
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getGroup_0()); }
		(rule__Postfix_expressionR__Group_0__0)
		{ after(grammarAccess.getPostfix_expressionRAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getGroup_1()); }
		(rule__Postfix_expressionR__Group_1__0)
		{ after(grammarAccess.getPostfix_expressionRAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getGroup_2()); }
		(rule__Postfix_expressionR__Group_2__0)
		{ after(grammarAccess.getPostfix_expressionRAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getGroup_3()); }
		(rule__Postfix_expressionR__Group_3__0)
		{ after(grammarAccess.getPostfix_expressionRAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getGroup_4()); }
		(rule__Postfix_expressionR__Group_4__0)
		{ after(grammarAccess.getPostfix_expressionRAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getGroup_5()); }
		(rule__Postfix_expressionR__Group_5__0)
		{ after(grammarAccess.getPostfix_expressionRAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getGroup_6()); }
		(rule__Postfix_expressionR__Group_6__0)
		{ after(grammarAccess.getPostfix_expressionRAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getIDENTIFIERParserRuleCall_0()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getPrimary_expressionAccess().getIDENTIFIERParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getConstantParserRuleCall_1()); }
		ruleconstant
		{ after(grammarAccess.getPrimary_expressionAccess().getConstantParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getGroup_2()); }
		(rule__Primary_expression__Group_2__0)
		{ after(grammarAccess.getPrimary_expressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getGroup_3()); }
		(rule__Primary_expression__Group_3__0)
		{ after(grammarAccess.getPrimary_expressionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerAccess().getGroup_0()); }
		(rule__Pointer__Group_0__0)
		{ after(grammarAccess.getPointerAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPointerAccess().getGroup_1()); }
		(rule__Pointer__Group_1__0)
		{ after(grammarAccess.getPointerAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPointerAccess().getGroup_2()); }
		(rule__Pointer__Group_2__0)
		{ after(grammarAccess.getPointerAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_3()); }
		'*'
		{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getINTEGER_NUMBERTerminalRuleCall_0()); }
		RULE_INTEGER_NUMBER
		{ after(grammarAccess.getConstantAccess().getINTEGER_NUMBERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getDOUBLE_NUMBERParserRuleCall_1()); }
		ruleDOUBLE_NUMBER
		{ after(grammarAccess.getConstantAccess().getDOUBLE_NUMBERParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_or_unionAccess().getSTRUCTKeyword_0()); }
		'STRUCT'
		{ after(grammarAccess.getStruct_or_unionAccess().getSTRUCTKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_or_unionAccess().getUNIONKeyword_1()); }
		'UNION'
		{ after(grammarAccess.getStruct_or_unionAccess().getUNIONKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_operatorAccess().getAmpersandKeyword_0()); }
		'&'
		{ after(grammarAccess.getUnary_operatorAccess().getAmpersandKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getAsteriskKeyword_1()); }
		'*'
		{ after(grammarAccess.getUnary_operatorAccess().getAsteriskKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getPLUSTerminalRuleCall_2()); }
		RULE_PLUS
		{ after(grammarAccess.getUnary_operatorAccess().getPLUSTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getMINUSTerminalRuleCall_3()); }
		RULE_MINUS
		{ after(grammarAccess.getUnary_operatorAccess().getMINUSTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getTildeKeyword_4()); }
		'~'
		{ after(grammarAccess.getUnary_operatorAccess().getTildeKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getExclamationMarkKeyword_5()); }
		'!'
		{ after(grammarAccess.getUnary_operatorAccess().getExclamationMarkKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_specifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_specifierAccess().getVoidKeyword_0()); }
		'void'
		{ after(grammarAccess.getType_specifierAccess().getVoidKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getCharKeyword_1()); }
		'char'
		{ after(grammarAccess.getType_specifierAccess().getCharKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getShortKeyword_2()); }
		'short'
		{ after(grammarAccess.getType_specifierAccess().getShortKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getIntKeyword_3()); }
		'int'
		{ after(grammarAccess.getType_specifierAccess().getIntKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getLongKeyword_4()); }
		'long'
		{ after(grammarAccess.getType_specifierAccess().getLongKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getFloatKeyword_5()); }
		'float'
		{ after(grammarAccess.getType_specifierAccess().getFloatKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getDoubleKeyword_6()); }
		'double'
		{ after(grammarAccess.getType_specifierAccess().getDoubleKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getSIGNEDKeyword_7()); }
		'SIGNED'
		{ after(grammarAccess.getType_specifierAccess().getSIGNEDKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getUNSIGNEDKeyword_8()); }
		'UNSIGNED'
		{ after(grammarAccess.getType_specifierAccess().getUNSIGNEDKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getBOOLKeyword_9()); }
		'BOOL'
		{ after(grammarAccess.getType_specifierAccess().getBOOLKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getCOMPLEXKeyword_10()); }
		'COMPLEX'
		{ after(grammarAccess.getType_specifierAccess().getCOMPLEXKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getIMAGINARYKeyword_11()); }
		'IMAGINARY'
		{ after(grammarAccess.getType_specifierAccess().getIMAGINARYKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getStruct_or_union_specifierParserRuleCall_12()); }
		rulestruct_or_union_specifier
		{ after(grammarAccess.getType_specifierAccess().getStruct_or_union_specifierParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getAtomic_type_specifierParserRuleCall_13()); }
		ruleatomic_type_specifier
		{ after(grammarAccess.getType_specifierAccess().getAtomic_type_specifierParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getTYPEDEF_NAMEKeyword_14()); }
		'TYPEDEF_NAME'
		{ after(grammarAccess.getType_specifierAccess().getTYPEDEF_NAMEKeyword_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage_class_specifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getTYPEDEFKeyword_0()); }
		'TYPEDEF'
		{ after(grammarAccess.getStorage_class_specifierAccess().getTYPEDEFKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getEXTERNKeyword_1()); }
		'EXTERN'
		{ after(grammarAccess.getStorage_class_specifierAccess().getEXTERNKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getSTATICKeyword_2()); }
		'STATIC'
		{ after(grammarAccess.getStorage_class_specifierAccess().getSTATICKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getTHREAD_LOCALKeyword_3()); }
		'THREAD_LOCAL'
		{ after(grammarAccess.getStorage_class_specifierAccess().getTHREAD_LOCALKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getAUTOKeyword_4()); }
		'AUTO'
		{ after(grammarAccess.getStorage_class_specifierAccess().getAUTOKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getREGISTERKeyword_5()); }
		'REGISTER'
		{ after(grammarAccess.getStorage_class_specifierAccess().getREGISTERKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getAssignment_operatorAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getAsteriskEqualsSignKeyword_1()); }
		'*='
		{ after(grammarAccess.getAssignment_operatorAccess().getAsteriskEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getSolidusEqualsSignKeyword_2()); }
		'/='
		{ after(grammarAccess.getAssignment_operatorAccess().getSolidusEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getPercentSignEqualsSignKeyword_3()); }
		'%='
		{ after(grammarAccess.getAssignment_operatorAccess().getPercentSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getPlusSignEqualsSignKeyword_4()); }
		'+='
		{ after(grammarAccess.getAssignment_operatorAccess().getPlusSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getHyphenMinusEqualsSignKeyword_5()); }
		'-='
		{ after(grammarAccess.getAssignment_operatorAccess().getHyphenMinusEqualsSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6()); }
		'<<='
		{ after(grammarAccess.getAssignment_operatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_7()); }
		'>>='
		{ after(grammarAccess.getAssignment_operatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getAmpersandEqualsSignKeyword_8()); }
		'&='
		{ after(grammarAccess.getAssignment_operatorAccess().getAmpersandEqualsSignKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getCircumflexAccentEqualsSignKeyword_9()); }
		'^='
		{ after(grammarAccess.getAssignment_operatorAccess().getCircumflexAccentEqualsSignKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getVerticalLineEqualsSignKeyword_10()); }
		'|='
		{ after(grammarAccess.getAssignment_operatorAccess().getVerticalLineEqualsSignKeyword_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Translation_unit__Group__0__Impl
	rule__Translation_unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTranslation_unitAccess().getExternal_declarationAssignment_0()); }
	(rule__Translation_unit__External_declarationAssignment_0)
	{ after(grammarAccess.getTranslation_unitAccess().getExternal_declarationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Translation_unit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTranslation_unitAccess().getTranslation_unitRAssignment_1()); }
	(rule__Translation_unit__Translation_unitRAssignment_1)?
	{ after(grammarAccess.getTranslation_unitAccess().getTranslation_unitRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Translation_unitR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Translation_unitR__Group__0__Impl
	rule__Translation_unitR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unitR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTranslation_unitRAccess().getExternal_declarationAssignment_0()); }
	(rule__Translation_unitR__External_declarationAssignment_0)
	{ after(grammarAccess.getTranslation_unitRAccess().getExternal_declarationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unitR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Translation_unitR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unitR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTranslation_unitRAccess().getRecAssignment_1()); }
	(rule__Translation_unitR__RecAssignment_1)*
	{ after(grammarAccess.getTranslation_unitRAccess().getRecAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_definition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_0__0__Impl
	rule__Function_definition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersAssignment_0_0()); }
	(rule__Function_definition__Declaration_specifiersAssignment_0_0)
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_0__1__Impl
	rule__Function_definition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaratorAssignment_0_1()); }
	(rule__Function_definition__DeclaratorAssignment_0_1)
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaratorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_0__2__Impl
	rule__Function_definition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_listAssignment_0_2()); }
	(rule__Function_definition__Declaration_listAssignment_0_2)
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_listAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getCompound_statementAssignment_0_3()); }
	(rule__Function_definition__Compound_statementAssignment_0_3)
	{ after(grammarAccess.getFunction_definitionAccess().getCompound_statementAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_definition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_1__0__Impl
	rule__Function_definition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersAssignment_1_0()); }
	(rule__Function_definition__Declaration_specifiersAssignment_1_0)
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_1__1__Impl
	rule__Function_definition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaratorAssignment_1_1()); }
	(rule__Function_definition__DeclaratorAssignment_1_1)
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaratorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getCompound_statementAssignment_1_2()); }
	(rule__Function_definition__Compound_statementAssignment_1_2)
	{ after(grammarAccess.getFunction_definitionAccess().getCompound_statementAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_0__0__Impl
	rule__Declarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getPointerAssignment_0_0()); }
	(rule__Declarator__PointerAssignment_0_0)
	{ after(grammarAccess.getDeclaratorAccess().getPointerAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getDdAssignment_0_1()); }
	(rule__Declarator__DdAssignment_0_1)
	{ after(grammarAccess.getDeclaratorAccess().getDdAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_qualifier_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_qualifier_list__Group__0__Impl
	rule__Type_qualifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_qualifier_listAccess().getType_qualifierAssignment_0()); }
	(rule__Type_qualifier_list__Type_qualifierAssignment_0)
	{ after(grammarAccess.getType_qualifier_listAccess().getType_qualifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_qualifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_qualifier_listAccess().getType_qualifier_listRAssignment_1()); }
	(rule__Type_qualifier_list__Type_qualifier_listRAssignment_1)?
	{ after(grammarAccess.getType_qualifier_listAccess().getType_qualifier_listRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_qualifier_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_qualifier_listR__Group__0__Impl
	rule__Type_qualifier_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_qualifier_listRAccess().getType_qualifierAssignment_0()); }
	(rule__Type_qualifier_listR__Type_qualifierAssignment_0)
	{ after(grammarAccess.getType_qualifier_listRAccess().getType_qualifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_qualifier_listR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_qualifier_listRAccess().getRecAssignment_1()); }
	(rule__Type_qualifier_listR__RecAssignment_1)*
	{ after(grammarAccess.getType_qualifier_listRAccess().getRecAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_0__0__Impl
	rule__Direct_declarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getIDENTIFIERParserRuleCall_0_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getDirect_declaratorAccess().getIDENTIFIERParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getDrAssignment_0_1()); }
	(rule__Direct_declarator__DrAssignment_0_1)?
	{ after(grammarAccess.getDirect_declaratorAccess().getDrAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_1__0__Impl
	rule__Direct_declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getLEFT_PARENTESETerminalRuleCall_1_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getDirect_declaratorAccess().getLEFT_PARENTESETerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_1__1__Impl
	rule__Direct_declarator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getDeclaratorAssignment_1_1()); }
	(rule__Direct_declarator__DeclaratorAssignment_1_1)
	{ after(grammarAccess.getDirect_declaratorAccess().getDeclaratorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_1__2__Impl
	rule__Direct_declarator__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getRIGHT_PARENTESETerminalRuleCall_1_2()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getDirect_declaratorAccess().getRIGHT_PARENTESETerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getDirect_declaratorRAssignment_1_3()); }
	(rule__Direct_declarator__Direct_declaratorRAssignment_1_3)?
	{ after(grammarAccess.getDirect_declaratorAccess().getDirect_declaratorRAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_0__0__Impl
	rule__Direct_declaratorR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_0_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_0__1__Impl
	rule__Direct_declaratorR__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_0_1()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_0_2()); }
	(rule__Direct_declaratorR__RecAssignment_0_2)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_1__0__Impl
	rule__Direct_declaratorR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_1_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_1__1__Impl
	rule__Direct_declaratorR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getAsteriskKeyword_1_1()); }
	'*'
	{ after(grammarAccess.getDirect_declaratorRAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_1__2__Impl
	rule__Direct_declaratorR__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_1_2()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_1_3()); }
	(rule__Direct_declaratorR__RecAssignment_1_3)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_2__0__Impl
	rule__Direct_declaratorR__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_2_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_2__1__Impl
	rule__Direct_declaratorR__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().get_Static_assertKeyword_2_1()); }
	'_Static_assert'
	{ after(grammarAccess.getDirect_declaratorRAccess().get_Static_assertKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_2__2__Impl
	rule__Direct_declaratorR__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_2_2()); }
	(rule__Direct_declaratorR__Type_qualifier_listAssignment_2_2)
	{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_2__3__Impl
	rule__Direct_declaratorR__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_2_3()); }
	(rule__Direct_declaratorR__Assignment_expressionAssignment_2_3)
	{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_2__4__Impl
	rule__Direct_declaratorR__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_2_4()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_2_5()); }
	(rule__Direct_declaratorR__RecAssignment_2_5)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_3__0__Impl
	rule__Direct_declaratorR__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_3_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_3__1__Impl
	rule__Direct_declaratorR__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().get_Static_assertKeyword_3_1()); }
	'_Static_assert'
	{ after(grammarAccess.getDirect_declaratorRAccess().get_Static_assertKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_3__2__Impl
	rule__Direct_declaratorR__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_3_2()); }
	(rule__Direct_declaratorR__Assignment_expressionAssignment_3_2)
	{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_3__3__Impl
	rule__Direct_declaratorR__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_3_3()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_3_4()); }
	(rule__Direct_declaratorR__RecAssignment_3_4)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_4__0__Impl
	rule__Direct_declaratorR__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_4_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_4__1__Impl
	rule__Direct_declaratorR__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_4_1()); }
	(rule__Direct_declaratorR__Type_qualifier_listAssignment_4_1)
	{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_4__2__Impl
	rule__Direct_declaratorR__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getAsteriskKeyword_4_2()); }
	'*'
	{ after(grammarAccess.getDirect_declaratorRAccess().getAsteriskKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_4__3__Impl
	rule__Direct_declaratorR__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_4_3()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_4_4()); }
	(rule__Direct_declaratorR__RecAssignment_4_4)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_5__0__Impl
	rule__Direct_declaratorR__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_5_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_5__1__Impl
	rule__Direct_declaratorR__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_5_1()); }
	(rule__Direct_declaratorR__Type_qualifier_listAssignment_5_1)
	{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_5__2__Impl
	rule__Direct_declaratorR__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().get_Static_assertKeyword_5_2()); }
	'_Static_assert'
	{ after(grammarAccess.getDirect_declaratorRAccess().get_Static_assertKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_5__3__Impl
	rule__Direct_declaratorR__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_5_3()); }
	(rule__Direct_declaratorR__Assignment_expressionAssignment_5_3)
	{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_5__4__Impl
	rule__Direct_declaratorR__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_5_4()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_5_5()); }
	(rule__Direct_declaratorR__RecAssignment_5_5)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_6__0__Impl
	rule__Direct_declaratorR__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_6_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_6__1__Impl
	rule__Direct_declaratorR__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_6_1()); }
	(rule__Direct_declaratorR__Type_qualifier_listAssignment_6_1)
	{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_6__2__Impl
	rule__Direct_declaratorR__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_6_2()); }
	(rule__Direct_declaratorR__Assignment_expressionAssignment_6_2)
	{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_6__3__Impl
	rule__Direct_declaratorR__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_6_3()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_6_4()); }
	(rule__Direct_declaratorR__RecAssignment_6_4)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_7__0__Impl
	rule__Direct_declaratorR__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_7_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_7__1__Impl
	rule__Direct_declaratorR__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_7_1()); }
	(rule__Direct_declaratorR__Type_qualifier_listAssignment_7_1)
	{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_7__2__Impl
	rule__Direct_declaratorR__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_7_2()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_7_3()); }
	(rule__Direct_declaratorR__RecAssignment_7_3)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_8__0__Impl
	rule__Direct_declaratorR__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_8_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_COCHETETerminalRuleCall_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_8__1__Impl
	rule__Direct_declaratorR__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_8_1()); }
	(rule__Direct_declaratorR__Assignment_expressionAssignment_8_1)
	{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_8__2__Impl
	rule__Direct_declaratorR__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_8_2()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_COCHETETerminalRuleCall_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_8_3()); }
	(rule__Direct_declaratorR__RecAssignment_8_3)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_9__0__Impl
	rule__Direct_declaratorR__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_PARENTESETerminalRuleCall_9_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_PARENTESETerminalRuleCall_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_9__1__Impl
	rule__Direct_declaratorR__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getParameter_type_listAssignment_9_1()); }
	(rule__Direct_declaratorR__Parameter_type_listAssignment_9_1)
	{ after(grammarAccess.getDirect_declaratorRAccess().getParameter_type_listAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_9__2__Impl
	rule__Direct_declaratorR__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_PARENTESETerminalRuleCall_9_2()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_PARENTESETerminalRuleCall_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_9_3()); }
	(rule__Direct_declaratorR__RecAssignment_9_3)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_10__0__Impl
	rule__Direct_declaratorR__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_PARENTESETerminalRuleCall_10_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_PARENTESETerminalRuleCall_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_10__1__Impl
	rule__Direct_declaratorR__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_PARENTESETerminalRuleCall_10_1()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_PARENTESETerminalRuleCall_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_10_2()); }
	(rule__Direct_declaratorR__RecAssignment_10_2)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorR__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_11__0__Impl
	rule__Direct_declaratorR__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getLEFT_PARENTESETerminalRuleCall_11_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getDirect_declaratorRAccess().getLEFT_PARENTESETerminalRuleCall_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_11__1__Impl
	rule__Direct_declaratorR__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getIdentifier_listAssignment_11_1()); }
	(rule__Direct_declaratorR__Identifier_listAssignment_11_1)
	{ after(grammarAccess.getDirect_declaratorRAccess().getIdentifier_listAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_11__2__Impl
	rule__Direct_declaratorR__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRIGHT_PARENTESETerminalRuleCall_11_2()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getDirect_declaratorRAccess().getRIGHT_PARENTESETerminalRuleCall_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_11__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorR__Group_11__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Group_11__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_11_3()); }
	(rule__Direct_declaratorR__RecAssignment_11_3)*
	{ after(grammarAccess.getDirect_declaratorRAccess().getRecAssignment_11_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_type_list__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_type_list__Group_0__0__Impl
	rule__Parameter_type_list__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_type_listAccess().getParameter_listParserRuleCall_0_0()); }
	ruleparameter_list
	{ after(grammarAccess.getParameter_type_listAccess().getParameter_listParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_type_list__Group_0__1__Impl
	rule__Parameter_type_list__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_type_listAccess().getCOMMATerminalRuleCall_0_1()); }
	RULE_COMMA
	{ after(grammarAccess.getParameter_type_listAccess().getCOMMATerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_type_list__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_type_listAccess().getFullStopFullStopFullStopKeyword_0_2()); }
	'...'
	{ after(grammarAccess.getParameter_type_listAccess().getFullStopFullStopFullStopKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__0__Impl
	rule__Identifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getIDENTIFIERParserRuleCall_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getIdentifier_listAccess().getIDENTIFIERParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getIlAssignment_1()); }
	(rule__Identifier_list__IlAssignment_1)?
	{ after(grammarAccess.getIdentifier_listAccess().getIlAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_listR__Group__0__Impl
	rule__Identifier_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listRAccess().getCOMMATerminalRuleCall_0()); }
	RULE_COMMA
	{ after(grammarAccess.getIdentifier_listRAccess().getCOMMATerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_listR__Group__1__Impl
	rule__Identifier_listR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listRAccess().getIDENTIFIERParserRuleCall_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getIdentifier_listRAccess().getIDENTIFIERParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_listR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_listR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_listR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listRAccess().getRecAssignment_2()); }
	(rule__Identifier_listR__RecAssignment_2)*
	{ after(grammarAccess.getIdentifier_listRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__0__Impl
	rule__Parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getParameter_declarationAssignment_0()); }
	(rule__Parameter_list__Parameter_declarationAssignment_0)
	{ after(grammarAccess.getParameter_listAccess().getParameter_declarationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getParameter_listRAssignment_1()); }
	(rule__Parameter_list__Parameter_listRAssignment_1)?
	{ after(grammarAccess.getParameter_listAccess().getParameter_listRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_listR__Group__0__Impl
	rule__Parameter_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listRAccess().getCOMMATerminalRuleCall_0()); }
	RULE_COMMA
	{ after(grammarAccess.getParameter_listRAccess().getCOMMATerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_listR__Group__1__Impl
	rule__Parameter_listR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listRAccess().getParameter_declarationAssignment_1()); }
	(rule__Parameter_listR__Parameter_declarationAssignment_1)
	{ after(grammarAccess.getParameter_listRAccess().getParameter_declarationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_listR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_listR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_listR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listRAccess().getRecAssignment_2()); }
	(rule__Parameter_listR__RecAssignment_2)*
	{ after(grammarAccess.getParameter_listRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_declaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_declaration__Group_0__0__Impl
	rule__Parameter_declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiers2Assignment_0_0()); }
	(rule__Parameter_declaration__Declaration_specifiers2Assignment_0_0)
	{ after(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiers2Assignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_declaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declarationAccess().getDeclarator1Assignment_0_1()); }
	(rule__Parameter_declaration__Declarator1Assignment_0_1)
	{ after(grammarAccess.getParameter_declarationAccess().getDeclarator1Assignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_declaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_declaration__Group_1__0__Impl
	rule__Parameter_declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiers1Assignment_1_0()); }
	(rule__Parameter_declaration__Declaration_specifiers1Assignment_1_0)
	{ after(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiers1Assignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_declaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorAssignment_1_1()); }
	(rule__Parameter_declaration__Abstract_declaratorAssignment_1_1)
	{ after(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_list__Group__0__Impl
	rule__Declaration_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_listAccess().getDeclarationAssignment_0()); }
	(rule__Declaration_list__DeclarationAssignment_0)
	{ after(grammarAccess.getDeclaration_listAccess().getDeclarationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_listAccess().getDeclaration_listRAssignment_1()); }
	(rule__Declaration_list__Declaration_listRAssignment_1)?
	{ after(grammarAccess.getDeclaration_listAccess().getDeclaration_listRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_listR__Group__0__Impl
	rule__Declaration_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_listRAccess().getDeclarationAssignment_0()); }
	(rule__Declaration_listR__DeclarationAssignment_0)
	{ after(grammarAccess.getDeclaration_listRAccess().getDeclarationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_listR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_listRAccess().getRecAssignment_1()); }
	(rule__Declaration_listR__RecAssignment_1)*
	{ after(grammarAccess.getDeclaration_listRAccess().getRecAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_0__0__Impl
	rule__Compound_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getLEFT_CHAVESTerminalRuleCall_0_0()); }
	RULE_LEFT_CHAVES
	{ after(grammarAccess.getCompound_statementAccess().getLEFT_CHAVESTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getRIGHT_CHAVESTerminalRuleCall_0_1()); }
	RULE_RIGHT_CHAVES
	{ after(grammarAccess.getCompound_statementAccess().getRIGHT_CHAVESTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_1__0__Impl
	rule__Compound_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getLEFT_CHAVESTerminalRuleCall_1_0()); }
	RULE_LEFT_CHAVES
	{ after(grammarAccess.getCompound_statementAccess().getLEFT_CHAVESTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_1__1__Impl
	rule__Compound_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getBlock_item_listParserRuleCall_1_1()); }
	ruleblock_item_list
	{ after(grammarAccess.getCompound_statementAccess().getBlock_item_listParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getRIGHT_CHAVESTerminalRuleCall_1_2()); }
	RULE_RIGHT_CHAVES
	{ after(grammarAccess.getCompound_statementAccess().getRIGHT_CHAVESTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block_item_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block_item_list__Group__0__Impl
	rule__Block_item_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock_item_listAccess().getBlock_itemAssignment_0()); }
	(rule__Block_item_list__Block_itemAssignment_0)
	{ after(grammarAccess.getBlock_item_listAccess().getBlock_itemAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block_item_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock_item_listAccess().getBlock_item_listRAssignment_1()); }
	(rule__Block_item_list__Block_item_listRAssignment_1)?
	{ after(grammarAccess.getBlock_item_listAccess().getBlock_item_listRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block_item_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block_item_listR__Group__0__Impl
	rule__Block_item_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock_item_listRAccess().getBlock_itemAssignment_0()); }
	(rule__Block_item_listR__Block_itemAssignment_0)
	{ after(grammarAccess.getBlock_item_listRAccess().getBlock_itemAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block_item_listR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock_item_listRAccess().getRecAssignment_1()); }
	(rule__Block_item_listR__RecAssignment_1)*
	{ after(grammarAccess.getBlock_item_listRAccess().getRecAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_0__0__Impl
	rule__Jump_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getGOTOKeyword_0_0()); }
	'GOTO'
	{ after(grammarAccess.getJump_statementAccess().getGOTOKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_0__1__Impl
	rule__Jump_statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getIDENTIFIERParserRuleCall_0_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getJump_statementAccess().getIDENTIFIERParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_0_2()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_1__0__Impl
	rule__Jump_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getCONTINUEKeyword_1_0()); }
	'CONTINUE'
	{ after(grammarAccess.getJump_statementAccess().getCONTINUEKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_1_1()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_2__0__Impl
	rule__Jump_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getBREAKKeyword_2_0()); }
	'BREAK'
	{ after(grammarAccess.getJump_statementAccess().getBREAKKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_2_1()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_3__0__Impl
	rule__Jump_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getReturnKeyword_3_0()); }
	'return'
	{ after(grammarAccess.getJump_statementAccess().getReturnKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_3_1()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_4__0__Impl
	rule__Jump_statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getReturnKeyword_4_0()); }
	'return'
	{ after(grammarAccess.getJump_statementAccess().getReturnKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_4__1__Impl
	rule__Jump_statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getExpressionParserRuleCall_4_1()); }
	ruleexpression
	{ after(grammarAccess.getJump_statementAccess().getExpressionParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_4_2()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getJump_statementAccess().getDOT_COMMATerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Labeled_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_0__0__Impl
	rule__Labeled_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getIDENTIFIERParserRuleCall_0_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getLabeled_statementAccess().getIDENTIFIERParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_0__1__Impl
	rule__Labeled_statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getDOTSTerminalRuleCall_0_1()); }
	RULE_DOTS
	{ after(grammarAccess.getLabeled_statementAccess().getDOTSTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getAAssignment_0_2()); }
	(rule__Labeled_statement__AAssignment_0_2)
	{ after(grammarAccess.getLabeled_statementAccess().getAAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Labeled_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_1__0__Impl
	rule__Labeled_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getCASEKeyword_1_0()); }
	'CASE'
	{ after(grammarAccess.getLabeled_statementAccess().getCASEKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_1__1__Impl
	rule__Labeled_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getConstant_expressionAssignment_1_1()); }
	(rule__Labeled_statement__Constant_expressionAssignment_1_1)
	{ after(grammarAccess.getLabeled_statementAccess().getConstant_expressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_1__2__Impl
	rule__Labeled_statement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getDOTSTerminalRuleCall_1_2()); }
	RULE_DOTS
	{ after(grammarAccess.getLabeled_statementAccess().getDOTSTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getStatementAssignment_1_3()); }
	(rule__Labeled_statement__StatementAssignment_1_3)
	{ after(grammarAccess.getLabeled_statementAccess().getStatementAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Labeled_statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_2__0__Impl
	rule__Labeled_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getDEFAULTKeyword_2_0()); }
	'DEFAULT'
	{ after(grammarAccess.getLabeled_statementAccess().getDEFAULTKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_2__1__Impl
	rule__Labeled_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getDOTSTerminalRuleCall_2_1()); }
	RULE_DOTS
	{ after(grammarAccess.getLabeled_statementAccess().getDOTSTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getBAssignment_2_2()); }
	(rule__Labeled_statement__BAssignment_2_2)
	{ after(grammarAccess.getLabeled_statementAccess().getBAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__0__Impl
	rule__Iteration_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getWhileKeyword_0_0()); }
	'while'
	{ after(grammarAccess.getIteration_statementAccess().getWhileKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__1__Impl
	rule__Iteration_statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_0_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__2__Impl
	rule__Iteration_statement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpressionAssignment_0_2()); }
	(rule__Iteration_statement__ExpressionAssignment_0_2)
	{ after(grammarAccess.getIteration_statementAccess().getExpressionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__3__Impl
	rule__Iteration_statement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_0_3()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementAssignment_0_4()); }
	(rule__Iteration_statement__StatementAssignment_0_4)
	{ after(grammarAccess.getIteration_statementAccess().getStatementAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__0__Impl
	rule__Iteration_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getDoKeyword_1_0()); }
	'do'
	{ after(grammarAccess.getIteration_statementAccess().getDoKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__1__Impl
	rule__Iteration_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementAssignment_1_1()); }
	(rule__Iteration_statement__StatementAssignment_1_1)
	{ after(grammarAccess.getIteration_statementAccess().getStatementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__2__Impl
	rule__Iteration_statement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getWhileKeyword_1_2()); }
	'while'
	{ after(grammarAccess.getIteration_statementAccess().getWhileKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__3__Impl
	rule__Iteration_statement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_1_3()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__4__Impl
	rule__Iteration_statement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpressionAssignment_1_4()); }
	(rule__Iteration_statement__ExpressionAssignment_1_4)
	{ after(grammarAccess.getIteration_statementAccess().getExpressionAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__5__Impl
	rule__Iteration_statement__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_1_5()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getDOT_COMMATerminalRuleCall_1_6()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getIteration_statementAccess().getDOT_COMMATerminalRuleCall_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__0__Impl
	rule__Iteration_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getForKeyword_2_0()); }
	'for'
	{ after(grammarAccess.getIteration_statementAccess().getForKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__1__Impl
	rule__Iteration_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_2_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__2__Impl
	rule__Iteration_statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_2_2()); }
	(rule__Iteration_statement__Expression_statementAssignment_2_2)
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__3__Impl
	rule__Iteration_statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_2_3()); }
	(rule__Iteration_statement__Expression_statementAssignment_2_3)
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__4__Impl
	rule__Iteration_statement__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_2_4()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementAssignment_2_5()); }
	(rule__Iteration_statement__StatementAssignment_2_5)
	{ after(grammarAccess.getIteration_statementAccess().getStatementAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__0__Impl
	rule__Iteration_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getForKeyword_3_0()); }
	'for'
	{ after(grammarAccess.getIteration_statementAccess().getForKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__1__Impl
	rule__Iteration_statement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_3_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__2__Impl
	rule__Iteration_statement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_3_2()); }
	(rule__Iteration_statement__Expression_statementAssignment_3_2)
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__3__Impl
	rule__Iteration_statement__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_3_3()); }
	(rule__Iteration_statement__Expression_statementAssignment_3_3)
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__4__Impl
	rule__Iteration_statement__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpressionAssignment_3_4()); }
	(rule__Iteration_statement__ExpressionAssignment_3_4)
	{ after(grammarAccess.getIteration_statementAccess().getExpressionAssignment_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__5__Impl
	rule__Iteration_statement__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_3_5()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementAssignment_3_6()); }
	(rule__Iteration_statement__StatementAssignment_3_6)
	{ after(grammarAccess.getIteration_statementAccess().getStatementAssignment_3_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_4__0__Impl
	rule__Iteration_statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getForKeyword_4_0()); }
	'for'
	{ after(grammarAccess.getIteration_statementAccess().getForKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_4__1__Impl
	rule__Iteration_statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_4_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_4__2__Impl
	rule__Iteration_statement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getDeclarationAssignment_4_2()); }
	(rule__Iteration_statement__DeclarationAssignment_4_2)
	{ after(grammarAccess.getIteration_statementAccess().getDeclarationAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_4__3__Impl
	rule__Iteration_statement__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_4_3()); }
	(rule__Iteration_statement__Expression_statementAssignment_4_3)
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_4__4__Impl
	rule__Iteration_statement__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_4_4()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementAssignment_4_5()); }
	(rule__Iteration_statement__StatementAssignment_4_5)
	{ after(grammarAccess.getIteration_statementAccess().getStatementAssignment_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_5__0__Impl
	rule__Iteration_statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getForKeyword_5_0()); }
	'for'
	{ after(grammarAccess.getIteration_statementAccess().getForKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_5__1__Impl
	rule__Iteration_statement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_5_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getLEFT_PARENTESETerminalRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_5__2__Impl
	rule__Iteration_statement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getDeclarationAssignment_5_2()); }
	(rule__Iteration_statement__DeclarationAssignment_5_2)
	{ after(grammarAccess.getIteration_statementAccess().getDeclarationAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_5__3__Impl
	rule__Iteration_statement__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_5_3()); }
	(rule__Iteration_statement__Expression_statementAssignment_5_3)
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_5__4__Impl
	rule__Iteration_statement__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpressionAssignment_5_4()); }
	(rule__Iteration_statement__ExpressionAssignment_5_4)
	{ after(grammarAccess.getIteration_statementAccess().getExpressionAssignment_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_5__5__Impl
	rule__Iteration_statement__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_5_5()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getIteration_statementAccess().getRIGHT_PARENTESETerminalRuleCall_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_5__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_5__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementAssignment_5_6()); }
	(rule__Iteration_statement__StatementAssignment_5_6)
	{ after(grammarAccess.getIteration_statementAccess().getStatementAssignment_5_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_0__0__Impl
	rule__Declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getDeclaration_specifiersAssignment_0_0()); }
	(rule__Declaration__Declaration_specifiersAssignment_0_0)
	{ after(grammarAccess.getDeclarationAccess().getDeclaration_specifiersAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_0__1__Impl
	rule__Declaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getInit_declarator_listAssignment_0_1()); }
	(rule__Declaration__Init_declarator_listAssignment_0_1)
	{ after(grammarAccess.getDeclarationAccess().getInit_declarator_listAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getDOT_COMMATerminalRuleCall_0_2()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getDeclarationAccess().getDOT_COMMATerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init_declarator_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator_list__Group__0__Impl
	rule__Init_declarator_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declarator_listAccess().getInit_declaratorAssignment_0()); }
	(rule__Init_declarator_list__Init_declaratorAssignment_0)
	{ after(grammarAccess.getInit_declarator_listAccess().getInit_declaratorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declarator_listAccess().getInit_declarator_listRAssignment_1()); }
	(rule__Init_declarator_list__Init_declarator_listRAssignment_1)?
	{ after(grammarAccess.getInit_declarator_listAccess().getInit_declarator_listRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init_declarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator__Group_0__0__Impl
	rule__Init_declarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declaratorAccess().getDeclaratorAssignment_0_0()); }
	(rule__Init_declarator__DeclaratorAssignment_0_0)
	{ after(grammarAccess.getInit_declaratorAccess().getDeclaratorAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator__Group_0__1__Impl
	rule__Init_declarator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declaratorAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getInit_declaratorAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declaratorAccess().getInitializerAssignment_0_2()); }
	(rule__Init_declarator__InitializerAssignment_0_2)
	{ after(grammarAccess.getInit_declaratorAccess().getInitializerAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init_declarator_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator_listR__Group__0__Impl
	rule__Init_declarator_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declarator_listRAccess().getCOMMATerminalRuleCall_0()); }
	RULE_COMMA
	{ after(grammarAccess.getInit_declarator_listRAccess().getCOMMATerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator_listR__Group__1__Impl
	rule__Init_declarator_listR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declarator_listRAccess().getInit_declaratorAssignment_1()); }
	(rule__Init_declarator_listR__Init_declaratorAssignment_1)
	{ after(grammarAccess.getInit_declarator_listRAccess().getInit_declaratorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_listR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator_listR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_listR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declarator_listRAccess().getRecAssignment_2()); }
	(rule__Init_declarator_listR__RecAssignment_2)*
	{ after(grammarAccess.getInit_declarator_listRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_specifiers__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_0__0__Impl
	rule__Declaration_specifiers__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierAssignment_0_0()); }
	(rule__Declaration_specifiers__Storage_class_specifierAssignment_0_0)
	{ after(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getR1Assignment_0_1()); }
	(rule__Declaration_specifiers__R1Assignment_0_1)*
	{ after(grammarAccess.getDeclaration_specifiersAccess().getR1Assignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_specifiers__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_2__0__Impl
	rule__Declaration_specifiers__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getType_specifierParserRuleCall_2_0()); }
	ruletype_specifier
	{ after(grammarAccess.getDeclaration_specifiersAccess().getType_specifierParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getDsAssignment_2_1()); }
	(rule__Declaration_specifiers__DsAssignment_2_1)
	{ after(grammarAccess.getDeclaration_specifiersAccess().getDsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_specifiers__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_4__0__Impl
	rule__Declaration_specifiers__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierAssignment_4_0()); }
	(rule__Declaration_specifiers__Type_qualifierAssignment_4_0)
	{ after(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getR2Assignment_4_1()); }
	(rule__Declaration_specifiers__R2Assignment_4_1)*
	{ after(grammarAccess.getDeclaration_specifiersAccess().getR2Assignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selection_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__0__Impl
	rule__Selection_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getIfKeyword_0_0()); }
	'if'
	{ after(grammarAccess.getSelection_statementAccess().getIfKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__1__Impl
	rule__Selection_statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getLEFT_PARENTESETerminalRuleCall_0_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getSelection_statementAccess().getLEFT_PARENTESETerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__2__Impl
	rule__Selection_statement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getExpressionAssignment_0_2()); }
	(rule__Selection_statement__ExpressionAssignment_0_2)
	{ after(grammarAccess.getSelection_statementAccess().getExpressionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__3__Impl
	rule__Selection_statement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getRIGHT_PARENTESETerminalRuleCall_0_3()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getSelection_statementAccess().getRIGHT_PARENTESETerminalRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__4__Impl
	rule__Selection_statement__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getStatementAssignment_0_4()); }
	(rule__Selection_statement__StatementAssignment_0_4)
	{ after(grammarAccess.getSelection_statementAccess().getStatementAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__5__Impl
	rule__Selection_statement__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getElseKeyword_0_5()); }
	'else'
	{ after(grammarAccess.getSelection_statementAccess().getElseKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getStatementAssignment_0_6()); }
	(rule__Selection_statement__StatementAssignment_0_6)
	{ after(grammarAccess.getSelection_statementAccess().getStatementAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selection_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__0__Impl
	rule__Selection_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getIfKeyword_1_0()); }
	'if'
	{ after(grammarAccess.getSelection_statementAccess().getIfKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__1__Impl
	rule__Selection_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getLEFT_PARENTESETerminalRuleCall_1_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getSelection_statementAccess().getLEFT_PARENTESETerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__2__Impl
	rule__Selection_statement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getExpressionAssignment_1_2()); }
	(rule__Selection_statement__ExpressionAssignment_1_2)
	{ after(grammarAccess.getSelection_statementAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__3__Impl
	rule__Selection_statement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getRIGHT_PARENTESETerminalRuleCall_1_3()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getSelection_statementAccess().getRIGHT_PARENTESETerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getStatementAssignment_1_4()); }
	(rule__Selection_statement__StatementAssignment_1_4)
	{ after(grammarAccess.getSelection_statementAccess().getStatementAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selection_statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__0__Impl
	rule__Selection_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getSWITCHKeyword_2_0()); }
	'SWITCH'
	{ after(grammarAccess.getSelection_statementAccess().getSWITCHKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__1__Impl
	rule__Selection_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getLEFT_PARENTESETerminalRuleCall_2_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getSelection_statementAccess().getLEFT_PARENTESETerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__2__Impl
	rule__Selection_statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getExpressionAssignment_2_2()); }
	(rule__Selection_statement__ExpressionAssignment_2_2)
	{ after(grammarAccess.getSelection_statementAccess().getExpressionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__3__Impl
	rule__Selection_statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getRIGHT_PARENTESETerminalRuleCall_2_3()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getSelection_statementAccess().getRIGHT_PARENTESETerminalRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getStatementAssignment_2_4()); }
	(rule__Selection_statement__StatementAssignment_2_4)
	{ after(grammarAccess.getSelection_statementAccess().getStatementAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_statement__Group_1__0__Impl
	rule__Expression_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_statementAccess().getExpressionParserRuleCall_1_0()); }
	ruleexpression
	{ after(grammarAccess.getExpression_statementAccess().getExpressionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_statementAccess().getDOT_COMMATerminalRuleCall_1_1()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getExpression_statementAccess().getDOT_COMMATerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAssignment_expressionAssignment_0()); }
	(rule__Expression__Assignment_expressionAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getAssignment_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionRAssignment_1()); }
	(rule__Expression__ExpressionRAssignment_1)?
	{ after(grammarAccess.getExpressionAccess().getExpressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionR__Group__0__Impl
	rule__ExpressionR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionRAccess().getCOMMATerminalRuleCall_0()); }
	RULE_COMMA
	{ after(grammarAccess.getExpressionRAccess().getCOMMATerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionR__Group__1__Impl
	rule__ExpressionR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionRAccess().getAssignment_expressionAssignment_1()); }
	(rule__ExpressionR__Assignment_expressionAssignment_1)
	{ after(grammarAccess.getExpressionRAccess().getAssignment_expressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionRAccess().getRecAssignment_2()); }
	(rule__ExpressionR__RecAssignment_2)*
	{ after(grammarAccess.getExpressionRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group_1__0__Impl
	rule__Conditional_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionAssignment_1_0()); }
	(rule__Conditional_expression__Logical_or_expressionAssignment_1_0)
	{ after(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group_1__1__Impl
	rule__Conditional_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getQuestionMarkKeyword_1_1()); }
	'?'
	{ after(grammarAccess.getConditional_expressionAccess().getQuestionMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group_1__2__Impl
	rule__Conditional_expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getExpressionAssignment_1_2()); }
	(rule__Conditional_expression__ExpressionAssignment_1_2)
	{ after(grammarAccess.getConditional_expressionAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group_1__3__Impl
	rule__Conditional_expression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getDOTSTerminalRuleCall_1_3()); }
	RULE_DOTS
	{ after(grammarAccess.getConditional_expressionAccess().getDOTSTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getRecAssignment_1_4()); }
	(rule__Conditional_expression__RecAssignment_1_4)*
	{ after(grammarAccess.getConditional_expressionAccess().getRecAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_or_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_or_expression__Group__0__Impl
	rule__Logical_or_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionAssignment_0()); }
	(rule__Logical_or_expression__Logical_and_expressionAssignment_0)
	{ after(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_or_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_or_expressionAccess().getLogical_or_expressionRAssignment_1()); }
	(rule__Logical_or_expression__Logical_or_expressionRAssignment_1)?
	{ after(grammarAccess.getLogical_or_expressionAccess().getLogical_or_expressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_or_expressionR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_or_expressionR__Group__0__Impl
	rule__Logical_or_expressionR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expressionR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_or_expressionRAccess().getVerticalLineVerticalLineKeyword_0()); }
	'||'
	{ after(grammarAccess.getLogical_or_expressionRAccess().getVerticalLineVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expressionR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_or_expressionR__Group__1__Impl
	rule__Logical_or_expressionR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expressionR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_or_expressionRAccess().getLogical_and_expressionAssignment_1()); }
	(rule__Logical_or_expressionR__Logical_and_expressionAssignment_1)
	{ after(grammarAccess.getLogical_or_expressionRAccess().getLogical_and_expressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expressionR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_or_expressionR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expressionR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_or_expressionRAccess().getRecAssignment_2()); }
	(rule__Logical_or_expressionR__RecAssignment_2)*
	{ after(grammarAccess.getLogical_or_expressionRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_and_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_and_expression__Group__0__Impl
	rule__Logical_and_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionAssignment_0()); }
	(rule__Logical_and_expression__Inclusive_or_expressionAssignment_0)
	{ after(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_and_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_and_expressionAccess().getLogical_and_expressionRAssignment_1()); }
	(rule__Logical_and_expression__Logical_and_expressionRAssignment_1)?
	{ after(grammarAccess.getLogical_and_expressionAccess().getLogical_and_expressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_and_expressionR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_and_expressionR__Group__0__Impl
	rule__Logical_and_expressionR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expressionR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_and_expressionRAccess().getAmpersandAmpersandKeyword_0()); }
	'&&'
	{ after(grammarAccess.getLogical_and_expressionRAccess().getAmpersandAmpersandKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expressionR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_and_expressionR__Group__1__Impl
	rule__Logical_and_expressionR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expressionR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_and_expressionRAccess().getInclusive_or_expressionAssignment_1()); }
	(rule__Logical_and_expressionR__Inclusive_or_expressionAssignment_1)
	{ after(grammarAccess.getLogical_and_expressionRAccess().getInclusive_or_expressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expressionR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_and_expressionR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expressionR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_and_expressionRAccess().getRecAssignment_2()); }
	(rule__Logical_and_expressionR__RecAssignment_2)*
	{ after(grammarAccess.getLogical_and_expressionRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inclusive_or_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inclusive_or_expression__Group__0__Impl
	rule__Inclusive_or_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionAssignment_0()); }
	(rule__Inclusive_or_expression__Exclusive_or_expressionAssignment_0)
	{ after(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inclusive_or_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusive_or_expressionAccess().getInclusive_or_expressionRAssignment_1()); }
	(rule__Inclusive_or_expression__Inclusive_or_expressionRAssignment_1)?
	{ after(grammarAccess.getInclusive_or_expressionAccess().getInclusive_or_expressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inclusive_or_expressionR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inclusive_or_expressionR__Group__0__Impl
	rule__Inclusive_or_expressionR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expressionR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusive_or_expressionRAccess().getVerticalLineKeyword_0()); }
	'|'
	{ after(grammarAccess.getInclusive_or_expressionRAccess().getVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expressionR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inclusive_or_expressionR__Group__1__Impl
	rule__Inclusive_or_expressionR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expressionR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusive_or_expressionRAccess().getExclusive_or_expressionAssignment_1()); }
	(rule__Inclusive_or_expressionR__Exclusive_or_expressionAssignment_1)
	{ after(grammarAccess.getInclusive_or_expressionRAccess().getExclusive_or_expressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expressionR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inclusive_or_expressionR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expressionR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusive_or_expressionRAccess().getRecAssignment_2()); }
	(rule__Inclusive_or_expressionR__RecAssignment_2)*
	{ after(grammarAccess.getInclusive_or_expressionRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exclusive_or_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exclusive_or_expression__Group__0__Impl
	rule__Exclusive_or_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionAssignment_0()); }
	(rule__Exclusive_or_expression__And_expressionAssignment_0)
	{ after(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exclusive_or_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusive_or_expressionAccess().getExclusive_or_expressionRAssignment_1()); }
	(rule__Exclusive_or_expression__Exclusive_or_expressionRAssignment_1)?
	{ after(grammarAccess.getExclusive_or_expressionAccess().getExclusive_or_expressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exclusive_or_expressionR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exclusive_or_expressionR__Group__0__Impl
	rule__Exclusive_or_expressionR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expressionR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusive_or_expressionRAccess().getCircumflexAccentKeyword_0()); }
	'^'
	{ after(grammarAccess.getExclusive_or_expressionRAccess().getCircumflexAccentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expressionR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exclusive_or_expressionR__Group__1__Impl
	rule__Exclusive_or_expressionR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expressionR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusive_or_expressionRAccess().getAnd_expressionAssignment_1()); }
	(rule__Exclusive_or_expressionR__And_expressionAssignment_1)
	{ after(grammarAccess.getExclusive_or_expressionRAccess().getAnd_expressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expressionR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exclusive_or_expressionR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expressionR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusive_or_expressionRAccess().getRecAssignment_2()); }
	(rule__Exclusive_or_expressionR__RecAssignment_2)*
	{ after(grammarAccess.getExclusive_or_expressionRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_expressionR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expressionR__Group__0__Impl
	rule__And_expressionR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expressionR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_expressionRAccess().getAmpersandKeyword_0()); }
	'&'
	{ after(grammarAccess.getAnd_expressionRAccess().getAmpersandKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expressionR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expressionR__Group__1__Impl
	rule__And_expressionR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expressionR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_expressionRAccess().getEquality_expressionAssignment_1()); }
	(rule__And_expressionR__Equality_expressionAssignment_1)
	{ after(grammarAccess.getAnd_expressionRAccess().getEquality_expressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expressionR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expressionR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expressionR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_expressionRAccess().getRecAssignment_2()); }
	(rule__And_expressionR__RecAssignment_2)*
	{ after(grammarAccess.getAnd_expressionRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expression__Group__0__Impl
	rule__And_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_expressionAccess().getEquality_expressionAssignment_0()); }
	(rule__And_expression__Equality_expressionAssignment_0)
	{ after(grammarAccess.getAnd_expressionAccess().getEquality_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_expressionAccess().getAnd_expressionRAssignment_1()); }
	(rule__And_expression__And_expressionRAssignment_1)?
	{ after(grammarAccess.getAnd_expressionAccess().getAnd_expressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expression__Group__0__Impl
	rule__Equality_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionAccess().getRelational_expressionAssignment_0()); }
	(rule__Equality_expression__Relational_expressionAssignment_0)
	{ after(grammarAccess.getEquality_expressionAccess().getRelational_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionAccess().getEquality_expressionRAssignment_1()); }
	(rule__Equality_expression__Equality_expressionRAssignment_1)?
	{ after(grammarAccess.getEquality_expressionAccess().getEquality_expressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality_expressionR__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expressionR__Group_0__0__Impl
	rule__Equality_expressionR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionRAccess().getEqualsSignEqualsSignKeyword_0_0()); }
	'=='
	{ after(grammarAccess.getEquality_expressionRAccess().getEqualsSignEqualsSignKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expressionR__Group_0__1__Impl
	rule__Equality_expressionR__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionRAccess().getRelational_expressionAssignment_0_1()); }
	(rule__Equality_expressionR__Relational_expressionAssignment_0_1)
	{ after(grammarAccess.getEquality_expressionRAccess().getRelational_expressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expressionR__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionRAccess().getRecAssignment_0_2()); }
	(rule__Equality_expressionR__RecAssignment_0_2)*
	{ after(grammarAccess.getEquality_expressionRAccess().getRecAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality_expressionR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expressionR__Group_1__0__Impl
	rule__Equality_expressionR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionRAccess().getExclamationMarkEqualsSignKeyword_1_0()); }
	'!='
	{ after(grammarAccess.getEquality_expressionRAccess().getExclamationMarkEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expressionR__Group_1__1__Impl
	rule__Equality_expressionR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionRAccess().getRelational_expressionAssignment_1_1()); }
	(rule__Equality_expressionR__Relational_expressionAssignment_1_1)
	{ after(grammarAccess.getEquality_expressionRAccess().getRelational_expressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expressionR__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionRAccess().getRecAssignment_1_2()); }
	(rule__Equality_expressionR__RecAssignment_1_2)*
	{ after(grammarAccess.getEquality_expressionRAccess().getRecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expression__Group__0__Impl
	rule__Relational_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionAccess().getShift_expressionAssignment_0()); }
	(rule__Relational_expression__Shift_expressionAssignment_0)
	{ after(grammarAccess.getRelational_expressionAccess().getShift_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionAccess().getReAssignment_1()); }
	(rule__Relational_expression__ReAssignment_1)?
	{ after(grammarAccess.getRelational_expressionAccess().getReAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expressionR__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_0__0__Impl
	rule__Relational_expressionR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getLessThanSignKeyword_0_0()); }
	'<'
	{ after(grammarAccess.getRelational_expressionRAccess().getLessThanSignKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_0__1__Impl
	rule__Relational_expressionR__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getShift_expressionAssignment_0_1()); }
	(rule__Relational_expressionR__Shift_expressionAssignment_0_1)
	{ after(grammarAccess.getRelational_expressionRAccess().getShift_expressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getRecAssignment_0_2()); }
	(rule__Relational_expressionR__RecAssignment_0_2)*
	{ after(grammarAccess.getRelational_expressionRAccess().getRecAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expressionR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_1__0__Impl
	rule__Relational_expressionR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getGreaterThanSignKeyword_1_0()); }
	'>'
	{ after(grammarAccess.getRelational_expressionRAccess().getGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_1__1__Impl
	rule__Relational_expressionR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getShift_expressionAssignment_1_1()); }
	(rule__Relational_expressionR__Shift_expressionAssignment_1_1)
	{ after(grammarAccess.getRelational_expressionRAccess().getShift_expressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getRecAssignment_1_2()); }
	(rule__Relational_expressionR__RecAssignment_1_2)*
	{ after(grammarAccess.getRelational_expressionRAccess().getRecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expressionR__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_2__0__Impl
	rule__Relational_expressionR__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getLessThanSignEqualsSignKeyword_2_0()); }
	'<='
	{ after(grammarAccess.getRelational_expressionRAccess().getLessThanSignEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_2__1__Impl
	rule__Relational_expressionR__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getShift_expressionAssignment_2_1()); }
	(rule__Relational_expressionR__Shift_expressionAssignment_2_1)
	{ after(grammarAccess.getRelational_expressionRAccess().getShift_expressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getRecAssignment_2_2()); }
	(rule__Relational_expressionR__RecAssignment_2_2)*
	{ after(grammarAccess.getRelational_expressionRAccess().getRecAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expressionR__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_3__0__Impl
	rule__Relational_expressionR__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getGreaterThanSignEqualsSignKeyword_3_0()); }
	'>='
	{ after(grammarAccess.getRelational_expressionRAccess().getGreaterThanSignEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_3__1__Impl
	rule__Relational_expressionR__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getShift_expressionAssignment_3_1()); }
	(rule__Relational_expressionR__Shift_expressionAssignment_3_1)
	{ after(grammarAccess.getRelational_expressionRAccess().getShift_expressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expressionR__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionRAccess().getRecAssignment_3_2()); }
	(rule__Relational_expressionR__RecAssignment_3_2)*
	{ after(grammarAccess.getRelational_expressionRAccess().getRecAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expression__Group__0__Impl
	rule__Shift_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_0()); }
	ruleadditive_expression
	{ after(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionAccess().getShift_expressionRAssignment_1()); }
	(rule__Shift_expression__Shift_expressionRAssignment_1)?
	{ after(grammarAccess.getShift_expressionAccess().getShift_expressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_expressionR__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expressionR__Group_0__0__Impl
	rule__Shift_expressionR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionRAccess().getLessThanSignLessThanSignKeyword_0_0()); }
	'<<'
	{ after(grammarAccess.getShift_expressionRAccess().getLessThanSignLessThanSignKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expressionR__Group_0__1__Impl
	rule__Shift_expressionR__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionRAccess().getAdditive_expressionAssignment_0_1()); }
	(rule__Shift_expressionR__Additive_expressionAssignment_0_1)
	{ after(grammarAccess.getShift_expressionRAccess().getAdditive_expressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expressionR__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionRAccess().getRecAssignment_0_2()); }
	(rule__Shift_expressionR__RecAssignment_0_2)*
	{ after(grammarAccess.getShift_expressionRAccess().getRecAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_expressionR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expressionR__Group_1__0__Impl
	rule__Shift_expressionR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionRAccess().getGreaterThanSignGreaterThanSignKeyword_1_0()); }
	'>>'
	{ after(grammarAccess.getShift_expressionRAccess().getGreaterThanSignGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expressionR__Group_1__1__Impl
	rule__Shift_expressionR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionRAccess().getAdditive_expressionAssignment_1_1()); }
	(rule__Shift_expressionR__Additive_expressionAssignment_1_1)
	{ after(grammarAccess.getShift_expressionRAccess().getAdditive_expressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expressionR__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionRAccess().getRecAssignment_1_2()); }
	(rule__Shift_expressionR__RecAssignment_1_2)*
	{ after(grammarAccess.getShift_expressionRAccess().getRecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Additive_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expression__Group__0__Impl
	rule__Additive_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionAssignment_0()); }
	(rule__Additive_expression__Multiplicative_expressionAssignment_0)
	{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionAccess().getAdditive_expressionRAssignment_1()); }
	(rule__Additive_expression__Additive_expressionRAssignment_1)?
	{ after(grammarAccess.getAdditive_expressionAccess().getAdditive_expressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Additive_expressionR__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expressionR__Group_0__0__Impl
	rule__Additive_expressionR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionRAccess().getPLUSTerminalRuleCall_0_0()); }
	RULE_PLUS
	{ after(grammarAccess.getAdditive_expressionRAccess().getPLUSTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expressionR__Group_0__1__Impl
	rule__Additive_expressionR__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionRAccess().getMultiplicative_expressionAssignment_0_1()); }
	(rule__Additive_expressionR__Multiplicative_expressionAssignment_0_1)
	{ after(grammarAccess.getAdditive_expressionRAccess().getMultiplicative_expressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expressionR__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionRAccess().getRecAssignment_0_2()); }
	(rule__Additive_expressionR__RecAssignment_0_2)*
	{ after(grammarAccess.getAdditive_expressionRAccess().getRecAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Additive_expressionR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expressionR__Group_1__0__Impl
	rule__Additive_expressionR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionRAccess().getMINUSTerminalRuleCall_1_0()); }
	RULE_MINUS
	{ after(grammarAccess.getAdditive_expressionRAccess().getMINUSTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expressionR__Group_1__1__Impl
	rule__Additive_expressionR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionRAccess().getMultiplicative_expressionAssignment_1_1()); }
	(rule__Additive_expressionR__Multiplicative_expressionAssignment_1_1)
	{ after(grammarAccess.getAdditive_expressionRAccess().getMultiplicative_expressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expressionR__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionRAccess().getRecAssignment_1_2()); }
	(rule__Additive_expressionR__RecAssignment_1_2)*
	{ after(grammarAccess.getAdditive_expressionRAccess().getRecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expressionR__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionR__Group_0__0__Impl
	rule__Multiplicative_expressionR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionRAccess().getAsteriskKeyword_0_0()); }
	'*'
	{ after(grammarAccess.getMultiplicative_expressionRAccess().getAsteriskKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionR__Group_0__1__Impl
	rule__Multiplicative_expressionR__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionAssignment_0_1()); }
	(rule__Multiplicative_expressionR__Cast_expressionAssignment_0_1)
	{ after(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionR__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionRAccess().getRecAssignment_0_2()); }
	(rule__Multiplicative_expressionR__RecAssignment_0_2)*
	{ after(grammarAccess.getMultiplicative_expressionRAccess().getRecAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expressionR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionR__Group_1__0__Impl
	rule__Multiplicative_expressionR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionRAccess().getSolidusKeyword_1_0()); }
	'/'
	{ after(grammarAccess.getMultiplicative_expressionRAccess().getSolidusKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionR__Group_1__1__Impl
	rule__Multiplicative_expressionR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionAssignment_1_1()); }
	(rule__Multiplicative_expressionR__Cast_expressionAssignment_1_1)
	{ after(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionR__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionRAccess().getRecAssignment_1_2()); }
	(rule__Multiplicative_expressionR__RecAssignment_1_2)*
	{ after(grammarAccess.getMultiplicative_expressionRAccess().getRecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expressionR__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionR__Group_2__0__Impl
	rule__Multiplicative_expressionR__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionRAccess().getPercentSignKeyword_2_0()); }
	'%'
	{ after(grammarAccess.getMultiplicative_expressionRAccess().getPercentSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionR__Group_2__1__Impl
	rule__Multiplicative_expressionR__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionAssignment_2_1()); }
	(rule__Multiplicative_expressionR__Cast_expressionAssignment_2_1)
	{ after(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionR__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionRAccess().getRecAssignment_2_2()); }
	(rule__Multiplicative_expressionR__RecAssignment_2_2)*
	{ after(grammarAccess.getMultiplicative_expressionRAccess().getRecAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expression__Group__0__Impl
	rule__Multiplicative_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionAccess().getCast_expressionAssignment_0()); }
	(rule__Multiplicative_expression__Cast_expressionAssignment_0)
	{ after(grammarAccess.getMultiplicative_expressionAccess().getCast_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionAccess().getMultiplicative_expressionRAssignment_1()); }
	(rule__Multiplicative_expression__Multiplicative_expressionRAssignment_1)?
	{ after(grammarAccess.getMultiplicative_expressionAccess().getMultiplicative_expressionRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_expression__Group_1__0__Impl
	rule__Assignment_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_expressionAccess().getUnary_expressionAssignment_1_0()); }
	(rule__Assignment_expression__Unary_expressionAssignment_1_0)
	{ after(grammarAccess.getAssignment_expressionAccess().getUnary_expressionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_expression__Group_1__1__Impl
	rule__Assignment_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_expressionAccess().getAssignment_operatorAssignment_1_1()); }
	(rule__Assignment_expression__Assignment_operatorAssignment_1_1)
	{ after(grammarAccess.getAssignment_expressionAccess().getAssignment_operatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_expressionAccess().getRecAssignment_1_2()); }
	(rule__Assignment_expression__RecAssignment_1_2)*
	{ after(grammarAccess.getAssignment_expressionAccess().getRecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast_expression__Group_1__0__Impl
	rule__Cast_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCast_expressionAccess().getLEFT_PARENTESETerminalRuleCall_1_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getCast_expressionAccess().getLEFT_PARENTESETerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast_expression__Group_1__1__Impl
	rule__Cast_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCast_expressionAccess().getType_nameAssignment_1_1()); }
	(rule__Cast_expression__Type_nameAssignment_1_1)
	{ after(grammarAccess.getCast_expressionAccess().getType_nameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast_expression__Group_1__2__Impl
	rule__Cast_expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCast_expressionAccess().getRIGHT_PARENTESETerminalRuleCall_1_2()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getCast_expressionAccess().getRIGHT_PARENTESETerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast_expression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCast_expressionAccess().getRecAssignment_1_3()); }
	(rule__Cast_expression__RecAssignment_1_3)*
	{ after(grammarAccess.getCast_expressionAccess().getRecAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_1__0__Impl
	rule__Unary_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getINC_OPTerminalRuleCall_1_0()); }
	RULE_INC_OP
	{ after(grammarAccess.getUnary_expressionAccess().getINC_OPTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getRecAssignment_1_1()); }
	(rule__Unary_expression__RecAssignment_1_1)*
	{ after(grammarAccess.getUnary_expressionAccess().getRecAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_2__0__Impl
	rule__Unary_expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getDEC_OPTerminalRuleCall_2_0()); }
	RULE_DEC_OP
	{ after(grammarAccess.getUnary_expressionAccess().getDEC_OPTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getRecAssignment_2_1()); }
	(rule__Unary_expression__RecAssignment_2_1)*
	{ after(grammarAccess.getUnary_expressionAccess().getRecAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_3__0__Impl
	rule__Unary_expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getUnary_operatorAssignment_3_0()); }
	(rule__Unary_expression__Unary_operatorAssignment_3_0)
	{ after(grammarAccess.getUnary_expressionAccess().getUnary_operatorAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getCeAssignment_3_1()); }
	(rule__Unary_expression__CeAssignment_3_1)
	{ after(grammarAccess.getUnary_expressionAccess().getCeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_0__0__Impl
	rule__Postfix_expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionAssignment_0_0()); }
	(rule__Postfix_expression__Primary_expressionAssignment_0_0)
	{ after(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRAssignment_0_1()); }
	(rule__Postfix_expression__Postfix_expressionRAssignment_0_1)?
	{ after(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_1__0__Impl
	rule__Postfix_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getLEFT_PARENTESETerminalRuleCall_1_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getPostfix_expressionAccess().getLEFT_PARENTESETerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_1__1__Impl
	rule__Postfix_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getType_nameAssignment_1_1()); }
	(rule__Postfix_expression__Type_nameAssignment_1_1)
	{ after(grammarAccess.getPostfix_expressionAccess().getType_nameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_1__2__Impl
	rule__Postfix_expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getRIGHT_PARENTESETerminalRuleCall_1_2()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getPostfix_expressionAccess().getRIGHT_PARENTESETerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_1__3__Impl
	rule__Postfix_expression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getLEFT_CHAVESTerminalRuleCall_1_3()); }
	RULE_LEFT_CHAVES
	{ after(grammarAccess.getPostfix_expressionAccess().getLEFT_CHAVESTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_1__4__Impl
	rule__Postfix_expression__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getInitializer_listAssignment_1_4()); }
	(rule__Postfix_expression__Initializer_listAssignment_1_4)
	{ after(grammarAccess.getPostfix_expressionAccess().getInitializer_listAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_1__5__Impl
	rule__Postfix_expression__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getRIGHT_CHAVESTerminalRuleCall_1_5()); }
	RULE_RIGHT_CHAVES
	{ after(grammarAccess.getPostfix_expressionAccess().getRIGHT_CHAVESTerminalRuleCall_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRAssignment_1_6()); }
	(rule__Postfix_expression__Postfix_expressionRAssignment_1_6)?
	{ after(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_2__0__Impl
	rule__Postfix_expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getLEFT_PARENTESETerminalRuleCall_2_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getPostfix_expressionAccess().getLEFT_PARENTESETerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_2__1__Impl
	rule__Postfix_expression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getType_nameAssignment_2_1()); }
	(rule__Postfix_expression__Type_nameAssignment_2_1)
	{ after(grammarAccess.getPostfix_expressionAccess().getType_nameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_2__2__Impl
	rule__Postfix_expression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getRIGHT_PARENTESETerminalRuleCall_2_2()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getPostfix_expressionAccess().getRIGHT_PARENTESETerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_2__3__Impl
	rule__Postfix_expression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getLEFT_CHAVESTerminalRuleCall_2_3()); }
	RULE_LEFT_CHAVES
	{ after(grammarAccess.getPostfix_expressionAccess().getLEFT_CHAVESTerminalRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_2__4__Impl
	rule__Postfix_expression__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getInitializer_listAssignment_2_4()); }
	(rule__Postfix_expression__Initializer_listAssignment_2_4)
	{ after(grammarAccess.getPostfix_expressionAccess().getInitializer_listAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_2__5__Impl
	rule__Postfix_expression__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getCOMMATerminalRuleCall_2_5()); }
	RULE_COMMA
	{ after(grammarAccess.getPostfix_expressionAccess().getCOMMATerminalRuleCall_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_2__6__Impl
	rule__Postfix_expression__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getRIGHT_CHAVESTerminalRuleCall_2_6()); }
	RULE_RIGHT_CHAVES
	{ after(grammarAccess.getPostfix_expressionAccess().getRIGHT_CHAVESTerminalRuleCall_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group_2__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_2__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRAssignment_2_7()); }
	(rule__Postfix_expression__Postfix_expressionRAssignment_2_7)?
	{ after(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRAssignment_2_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_0__0__Impl
	rule__Initializer__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getLEFT_CHAVESTerminalRuleCall_0_0()); }
	RULE_LEFT_CHAVES
	{ after(grammarAccess.getInitializerAccess().getLEFT_CHAVESTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_0__1__Impl
	rule__Initializer__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getInitializer_listParserRuleCall_0_1()); }
	ruleinitializer_list
	{ after(grammarAccess.getInitializerAccess().getInitializer_listParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getRIGHT_CHAVESTerminalRuleCall_0_2()); }
	RULE_RIGHT_CHAVES
	{ after(grammarAccess.getInitializerAccess().getRIGHT_CHAVESTerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_1__0__Impl
	rule__Initializer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getLEFT_CHAVESTerminalRuleCall_1_0()); }
	RULE_LEFT_CHAVES
	{ after(grammarAccess.getInitializerAccess().getLEFT_CHAVESTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_1__1__Impl
	rule__Initializer__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getInitializer_listParserRuleCall_1_1()); }
	ruleinitializer_list
	{ after(grammarAccess.getInitializerAccess().getInitializer_listParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_1__2__Impl
	rule__Initializer__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getCOMMATerminalRuleCall_1_2()); }
	RULE_COMMA
	{ after(grammarAccess.getInitializerAccess().getCOMMATerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getRIGHT_CHAVESTerminalRuleCall_1_3()); }
	RULE_RIGHT_CHAVES
	{ after(grammarAccess.getInitializerAccess().getRIGHT_CHAVESTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer_list__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_list__Group_0__0__Impl
	rule__Initializer_list__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listAccess().getDesignationAssignment_0_0()); }
	(rule__Initializer_list__DesignationAssignment_0_0)
	{ after(grammarAccess.getInitializer_listAccess().getDesignationAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_list__Group_0__1__Impl
	rule__Initializer_list__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listAccess().getInitializerAssignment_0_1()); }
	(rule__Initializer_list__InitializerAssignment_0_1)
	{ after(grammarAccess.getInitializer_listAccess().getInitializerAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_list__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listAccess().getIlAssignment_0_2()); }
	(rule__Initializer_list__IlAssignment_0_2)?
	{ after(grammarAccess.getInitializer_listAccess().getIlAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_list__Group_1__0__Impl
	rule__Initializer_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listAccess().getInitializerAssignment_1_0()); }
	(rule__Initializer_list__InitializerAssignment_1_0)
	{ after(grammarAccess.getInitializer_listAccess().getInitializerAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listAccess().getIlrAssignment_1_1()); }
	(rule__Initializer_list__IlrAssignment_1_1)?
	{ after(grammarAccess.getInitializer_listAccess().getIlrAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer_listR__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_listR__Group_0__0__Impl
	rule__Initializer_listR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listRAccess().getCOMMATerminalRuleCall_0_0()); }
	RULE_COMMA
	{ after(grammarAccess.getInitializer_listRAccess().getCOMMATerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_listR__Group_0__1__Impl
	rule__Initializer_listR__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listRAccess().getDesignationAssignment_0_1()); }
	(rule__Initializer_listR__DesignationAssignment_0_1)
	{ after(grammarAccess.getInitializer_listRAccess().getDesignationAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_listR__Group_0__2__Impl
	rule__Initializer_listR__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listRAccess().getInitializerAssignment_0_2()); }
	(rule__Initializer_listR__InitializerAssignment_0_2)
	{ after(grammarAccess.getInitializer_listRAccess().getInitializerAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_listR__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listRAccess().getRecAssignment_0_3()); }
	(rule__Initializer_listR__RecAssignment_0_3)*
	{ after(grammarAccess.getInitializer_listRAccess().getRecAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer_listR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_listR__Group_1__0__Impl
	rule__Initializer_listR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listRAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getInitializer_listRAccess().getCOMMATerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_listR__Group_1__1__Impl
	rule__Initializer_listR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listRAccess().getInitializerAssignment_1_1()); }
	(rule__Initializer_listR__InitializerAssignment_1_1)
	{ after(grammarAccess.getInitializer_listRAccess().getInitializerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_listR__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listRAccess().getRecAssignment_1_2()); }
	(rule__Initializer_listR__RecAssignment_1_2)*
	{ after(grammarAccess.getInitializer_listRAccess().getRecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Designation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designation__Group__0__Impl
	rule__Designation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignationAccess().getDesignator_listParserRuleCall_0()); }
	ruledesignator_list
	{ after(grammarAccess.getDesignationAccess().getDesignator_listParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDesignationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Designator_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator_list__Group__0__Impl
	rule__Designator_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignator_listAccess().getDesignatorAssignment_0()); }
	(rule__Designator_list__DesignatorAssignment_0)
	{ after(grammarAccess.getDesignator_listAccess().getDesignatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignator_listAccess().getDesignatorRAssignment_1()); }
	(rule__Designator_list__DesignatorRAssignment_1)?
	{ after(grammarAccess.getDesignator_listAccess().getDesignatorRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Designator_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator_listR__Group__0__Impl
	rule__Designator_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignator_listRAccess().getDesignatorAssignment_0()); }
	(rule__Designator_listR__DesignatorAssignment_0)
	{ after(grammarAccess.getDesignator_listRAccess().getDesignatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator_listR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignator_listRAccess().getRecAssignment_1()); }
	(rule__Designator_listR__RecAssignment_1)*
	{ after(grammarAccess.getDesignator_listRAccess().getRecAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_0__0__Impl
	rule__Designator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().getLEFT_COCHETETerminalRuleCall_0_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getDesignatorAccess().getLEFT_COCHETETerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_0__1__Impl
	rule__Designator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().getConstant_expressionParserRuleCall_0_1()); }
	ruleconstant_expression
	{ after(grammarAccess.getDesignatorAccess().getConstant_expressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().getRIGHT_COCHETETerminalRuleCall_0_2()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getDesignatorAccess().getRIGHT_COCHETETerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_1__0__Impl
	rule__Designator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getDesignatorAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().getIDENTIFIERParserRuleCall_1_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getDesignatorAccess().getIDENTIFIERParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_name__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_name__Group_0__0__Impl
	rule__Type_name__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listAssignment_0_0()); }
	(rule__Type_name__Specifier_qualifier_listAssignment_0_0)
	{ after(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_name__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_nameAccess().getAdAssignment_0_1()); }
	(rule__Type_name__AdAssignment_0_1)
	{ after(grammarAccess.getType_nameAccess().getAdAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Specifier_qualifier_list__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifier_qualifier_list__Group_0__0__Impl
	rule__Specifier_qualifier_list__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierAssignment_0_0()); }
	(rule__Specifier_qualifier_list__Type_specifierAssignment_0_0)
	{ after(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifier_qualifier_list__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecifier_qualifier_listAccess().getRecAssignment_0_1()); }
	(rule__Specifier_qualifier_list__RecAssignment_0_1)*
	{ after(grammarAccess.getSpecifier_qualifier_listAccess().getRecAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declarator_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator_list__Group__0__Impl
	rule__Struct_declarator_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorAssignment_0()); }
	(rule__Struct_declarator_list__Struct_declaratorAssignment_0)
	{ after(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarator_listAccess().getStruct_declarator_listRAssignment_1()); }
	(rule__Struct_declarator_list__Struct_declarator_listRAssignment_1)?
	{ after(grammarAccess.getStruct_declarator_listAccess().getStruct_declarator_listRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declaration_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration_list__Group__0__Impl
	rule__Struct_declaration_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationAssignment_0()); }
	(rule__Struct_declaration_list__Struct_declarationAssignment_0)
	{ after(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaration_listAccess().getStruct_declaration_listRAssignment_1()); }
	(rule__Struct_declaration_list__Struct_declaration_listRAssignment_1)?
	{ after(grammarAccess.getStruct_declaration_listAccess().getStruct_declaration_listRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declaration_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration_listR__Group__0__Impl
	rule__Struct_declaration_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaration_listRAccess().getStruct_declarationAssignment_0()); }
	(rule__Struct_declaration_listR__Struct_declarationAssignment_0)
	{ after(grammarAccess.getStruct_declaration_listRAccess().getStruct_declarationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration_listR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaration_listRAccess().getRecAssignment_1()); }
	(rule__Struct_declaration_listR__RecAssignment_1)*
	{ after(grammarAccess.getStruct_declaration_listRAccess().getRecAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration__Group_0__0__Impl
	rule__Struct_declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listParserRuleCall_0_0()); }
	rulespecifier_qualifier_list
	{ after(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarationAccess().getDOT_COMMATerminalRuleCall_0_1()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getStruct_declarationAccess().getDOT_COMMATerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration__Group_1__0__Impl
	rule__Struct_declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listxAssignment_1_0()); }
	(rule__Struct_declaration__Specifier_qualifier_listxAssignment_1_0)
	{ after(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listxAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration__Group_1__1__Impl
	rule__Struct_declaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listAssignment_1_1()); }
	(rule__Struct_declaration__Struct_declarator_listAssignment_1_1)
	{ after(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarationAccess().getDOT_COMMATerminalRuleCall_1_2()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getStruct_declarationAccess().getDOT_COMMATerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declarator_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator_listR__Group__0__Impl
	rule__Struct_declarator_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarator_listRAccess().getCOMMATerminalRuleCall_0()); }
	RULE_COMMA
	{ after(grammarAccess.getStruct_declarator_listRAccess().getCOMMATerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator_listR__Group__1__Impl
	rule__Struct_declarator_listR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarator_listRAccess().getStruct_declaratorAssignment_1()); }
	(rule__Struct_declarator_listR__Struct_declaratorAssignment_1)
	{ after(grammarAccess.getStruct_declarator_listRAccess().getStruct_declaratorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_listR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator_listR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_listR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarator_listRAccess().getRecAssignment_2()); }
	(rule__Struct_declarator_listR__RecAssignment_2)*
	{ after(grammarAccess.getStruct_declarator_listRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_0__0__Impl
	rule__Struct_declarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getDOTSTerminalRuleCall_0_0()); }
	RULE_DOTS
	{ after(grammarAccess.getStruct_declaratorAccess().getDOTSTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getConstant_expressionParserRuleCall_0_1()); }
	ruleconstant_expression
	{ after(grammarAccess.getStruct_declaratorAccess().getConstant_expressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_1__0__Impl
	rule__Struct_declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getDeclaratorxAssignment_1_0()); }
	(rule__Struct_declarator__DeclaratorxAssignment_1_0)
	{ after(grammarAccess.getStruct_declaratorAccess().getDeclaratorxAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_1__1__Impl
	rule__Struct_declarator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getDOTSTerminalRuleCall_1_1()); }
	RULE_DOTS
	{ after(grammarAccess.getStruct_declaratorAccess().getDOTSTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getConstant_expression1Assignment_1_2()); }
	(rule__Struct_declarator__Constant_expression1Assignment_1_2)
	{ after(grammarAccess.getStruct_declaratorAccess().getConstant_expression1Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Static_assert_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Static_assert_declaration__Group__0__Impl
	rule__Static_assert_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatic_assert_declarationAccess().getSTATIC_ASSERTKeyword_0()); }
	'STATIC_ASSERT'
	{ after(grammarAccess.getStatic_assert_declarationAccess().getSTATIC_ASSERTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Static_assert_declaration__Group__1__Impl
	rule__Static_assert_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatic_assert_declarationAccess().getLEFT_PARENTESETerminalRuleCall_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getStatic_assert_declarationAccess().getLEFT_PARENTESETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Static_assert_declaration__Group__2__Impl
	rule__Static_assert_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatic_assert_declarationAccess().getConstant_expressionParserRuleCall_2()); }
	ruleconstant_expression
	{ after(grammarAccess.getStatic_assert_declarationAccess().getConstant_expressionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Static_assert_declaration__Group__3__Impl
	rule__Static_assert_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatic_assert_declarationAccess().getCOMMATerminalRuleCall_3()); }
	RULE_COMMA
	{ after(grammarAccess.getStatic_assert_declarationAccess().getCOMMATerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Static_assert_declaration__Group__4__Impl
	rule__Static_assert_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatic_assert_declarationAccess().getSTRING_LITERALKeyword_4()); }
	'STRING_LITERAL'
	{ after(grammarAccess.getStatic_assert_declarationAccess().getSTRING_LITERALKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Static_assert_declaration__Group__5__Impl
	rule__Static_assert_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatic_assert_declarationAccess().getRIGHT_PARENTESETerminalRuleCall_5()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getStatic_assert_declarationAccess().getRIGHT_PARENTESETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Static_assert_declaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_assert_declaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatic_assert_declarationAccess().getDOT_COMMATerminalRuleCall_6()); }
	RULE_DOT_COMMA
	{ after(grammarAccess.getStatic_assert_declarationAccess().getDOT_COMMATerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_or_union_specifier__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_0__0__Impl
	rule__Struct_or_union_specifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionAssignment_0_0()); }
	(rule__Struct_or_union_specifier__Struct_or_unionAssignment_0_0)
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_0__1__Impl
	rule__Struct_or_union_specifier__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getLEFT_CHAVESTerminalRuleCall_0_1()); }
	RULE_LEFT_CHAVES
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getLEFT_CHAVESTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_0__2__Impl
	rule__Struct_or_union_specifier__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listAssignment_0_2()); }
	(rule__Struct_or_union_specifier__Struct_declaration_listAssignment_0_2)
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getRIGHT_CHAVESTerminalRuleCall_0_3()); }
	RULE_RIGHT_CHAVES
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getRIGHT_CHAVESTerminalRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_or_union_specifier__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_1__0__Impl
	rule__Struct_or_union_specifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionAssignment_1_0()); }
	(rule__Struct_or_union_specifier__Struct_or_unionAssignment_1_0)
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_1__1__Impl
	rule__Struct_or_union_specifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getIdAssignment_1_1()); }
	(rule__Struct_or_union_specifier__IdAssignment_1_1)
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getIdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_1__2__Impl
	rule__Struct_or_union_specifier__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getLEFT_CHAVESTerminalRuleCall_1_2()); }
	RULE_LEFT_CHAVES
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getLEFT_CHAVESTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_1__3__Impl
	rule__Struct_or_union_specifier__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listAssignment_1_3()); }
	(rule__Struct_or_union_specifier__Struct_declaration_listAssignment_1_3)
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getRIGHT_CHAVESTerminalRuleCall_1_4()); }
	RULE_RIGHT_CHAVES
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getRIGHT_CHAVESTerminalRuleCall_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_or_union_specifier__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_2__0__Impl
	rule__Struct_or_union_specifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionParserRuleCall_2_0()); }
	rulestruct_or_union
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getIDENTIFIERParserRuleCall_2_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getIDENTIFIERParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic_type_specifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic_type_specifier__Group__0__Impl
	rule__Atomic_type_specifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic_type_specifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomic_type_specifierAccess().getATOMICKeyword_0()); }
	'ATOMIC'
	{ after(grammarAccess.getAtomic_type_specifierAccess().getATOMICKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic_type_specifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic_type_specifier__Group__1__Impl
	rule__Atomic_type_specifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic_type_specifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomic_type_specifierAccess().getLEFT_PARENTESETerminalRuleCall_1()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getAtomic_type_specifierAccess().getLEFT_PARENTESETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic_type_specifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic_type_specifier__Group__2__Impl
	rule__Atomic_type_specifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic_type_specifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomic_type_specifierAccess().getType_nameParserRuleCall_2()); }
	ruletype_name
	{ after(grammarAccess.getAtomic_type_specifierAccess().getType_nameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic_type_specifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic_type_specifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic_type_specifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomic_type_specifierAccess().getRIGHT_PARENTESETerminalRuleCall_3()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getAtomic_type_specifierAccess().getRIGHT_PARENTESETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionR__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_0__0__Impl
	rule__Postfix_expressionR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getLEFT_COCHETETerminalRuleCall_0_0()); }
	RULE_LEFT_COCHETE
	{ after(grammarAccess.getPostfix_expressionRAccess().getLEFT_COCHETETerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_0__1__Impl
	rule__Postfix_expressionR__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getExpressionAssignment_0_1()); }
	(rule__Postfix_expressionR__ExpressionAssignment_0_1)
	{ after(grammarAccess.getPostfix_expressionRAccess().getExpressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_0__2__Impl
	rule__Postfix_expressionR__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRIGHT_COCHETETerminalRuleCall_0_2()); }
	RULE_RIGHT_COCHETE
	{ after(grammarAccess.getPostfix_expressionRAccess().getRIGHT_COCHETETerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_0_3()); }
	(rule__Postfix_expressionR__RecAssignment_0_3)*
	{ after(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_1__0__Impl
	rule__Postfix_expressionR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getLEFT_PARENTESETerminalRuleCall_1_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getPostfix_expressionRAccess().getLEFT_PARENTESETerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_1__1__Impl
	rule__Postfix_expressionR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRIGHT_PARENTESETerminalRuleCall_1_1()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getPostfix_expressionRAccess().getRIGHT_PARENTESETerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_1_2()); }
	(rule__Postfix_expressionR__RecAssignment_1_2)*
	{ after(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionR__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_2__0__Impl
	rule__Postfix_expressionR__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getLEFT_PARENTESETerminalRuleCall_2_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getPostfix_expressionRAccess().getLEFT_PARENTESETerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_2__1__Impl
	rule__Postfix_expressionR__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getArgument_expression_listAssignment_2_1()); }
	(rule__Postfix_expressionR__Argument_expression_listAssignment_2_1)
	{ after(grammarAccess.getPostfix_expressionRAccess().getArgument_expression_listAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_2__2__Impl
	rule__Postfix_expressionR__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRIGHT_PARENTESETerminalRuleCall_2_2()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getPostfix_expressionRAccess().getRIGHT_PARENTESETerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_2_3()); }
	(rule__Postfix_expressionR__RecAssignment_2_3)*
	{ after(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionR__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_3__0__Impl
	rule__Postfix_expressionR__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getFullStopKeyword_3_0()); }
	'.'
	{ after(grammarAccess.getPostfix_expressionRAccess().getFullStopKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_3__1__Impl
	rule__Postfix_expressionR__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getIDENTIFIERParserRuleCall_3_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getPostfix_expressionRAccess().getIDENTIFIERParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_3_2()); }
	(rule__Postfix_expressionR__RecAssignment_3_2)*
	{ after(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionR__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_4__0__Impl
	rule__Postfix_expressionR__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }
	'->'
	{ after(grammarAccess.getPostfix_expressionRAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_4__1__Impl
	rule__Postfix_expressionR__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getIDENTIFIERParserRuleCall_4_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getPostfix_expressionRAccess().getIDENTIFIERParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_4_2()); }
	(rule__Postfix_expressionR__RecAssignment_4_2)*
	{ after(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionR__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_5__0__Impl
	rule__Postfix_expressionR__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getINC_OPTerminalRuleCall_5_0()); }
	RULE_INC_OP
	{ after(grammarAccess.getPostfix_expressionRAccess().getINC_OPTerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_5_1()); }
	(rule__Postfix_expressionR__RecAssignment_5_1)*
	{ after(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionR__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_6__0__Impl
	rule__Postfix_expressionR__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getDEC_OPTerminalRuleCall_6_0()); }
	RULE_DEC_OP
	{ after(grammarAccess.getPostfix_expressionRAccess().getDEC_OPTerminalRuleCall_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionR__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_6_1()); }
	(rule__Postfix_expressionR__RecAssignment_6_1)*
	{ after(grammarAccess.getPostfix_expressionRAccess().getRecAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument_expression_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_list__Group__0__Impl
	rule__Argument_expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listAccess().getAssignment_expressionAssignment_0()); }
	(rule__Argument_expression_list__Assignment_expressionAssignment_0)
	{ after(grammarAccess.getArgument_expression_listAccess().getAssignment_expressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listAccess().getArgument_expression_listRAssignment_1()); }
	(rule__Argument_expression_list__Argument_expression_listRAssignment_1)?
	{ after(grammarAccess.getArgument_expression_listAccess().getArgument_expression_listRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument_expression_listR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_listR__Group__0__Impl
	rule__Argument_expression_listR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listRAccess().getCOMMATerminalRuleCall_0()); }
	RULE_COMMA
	{ after(grammarAccess.getArgument_expression_listRAccess().getCOMMATerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_listR__Group__1__Impl
	rule__Argument_expression_listR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listRAccess().getAssignment_expressionAssignment_1()); }
	(rule__Argument_expression_listR__Assignment_expressionAssignment_1)
	{ after(grammarAccess.getArgument_expression_listRAccess().getAssignment_expressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_listR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listRAccess().getRecAssignment_2()); }
	(rule__Argument_expression_listR__RecAssignment_2)*
	{ after(grammarAccess.getArgument_expression_listRAccess().getRecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_expression__Group_2__0__Impl
	rule__Primary_expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_expressionAccess().getLEFT_PARENTESETerminalRuleCall_2_0()); }
	RULE_LEFT_PARENTESE
	{ after(grammarAccess.getPrimary_expressionAccess().getLEFT_PARENTESETerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_expression__Group_2__1__Impl
	rule__Primary_expression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_expressionAccess().getExpressionParserRuleCall_2_1()); }
	ruleexpression
	{ after(grammarAccess.getPrimary_expressionAccess().getExpressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_expression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_expressionAccess().getRIGHT_PARENTESETerminalRuleCall_2_2()); }
	RULE_RIGHT_PARENTESE
	{ after(grammarAccess.getPrimary_expressionAccess().getRIGHT_PARENTESETerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_expression__Group_3__0__Impl
	rule__Primary_expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_expressionAccess().getStringCAction_3_0()); }
	()
	{ after(grammarAccess.getPrimary_expressionAccess().getStringCAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_expressionAccess().getStringAssignment_3_1()); }
	(rule__Primary_expression__StringAssignment_3_1)
	{ after(grammarAccess.getPrimary_expressionAccess().getStringAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_0__0__Impl
	rule__Pointer__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_0_0()); }
	'*'
	{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_0__1__Impl
	rule__Pointer__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getType_qualifier_listAssignment_0_1()); }
	(rule__Pointer__Type_qualifier_listAssignment_0_1)
	{ after(grammarAccess.getPointerAccess().getType_qualifier_listAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getRecAssignment_0_2()); }
	(rule__Pointer__RecAssignment_0_2)*
	{ after(grammarAccess.getPointerAccess().getRecAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_1__0__Impl
	rule__Pointer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_1_0()); }
	'*'
	{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getType_qualifier_listParserRuleCall_1_1()); }
	ruletype_qualifier_list
	{ after(grammarAccess.getPointerAccess().getType_qualifier_listParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_2__0__Impl
	rule__Pointer__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_2_0()); }
	'*'
	{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getRecAssignment_2_1()); }
	(rule__Pointer__RecAssignment_2_1)*
	{ after(grammarAccess.getPointerAccess().getRecAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE_NUMBER__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_NUMBER__Group__0__Impl
	rule__DOUBLE_NUMBER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_NUMBER__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_NUMBERAccess().getINTEGER_NUMBERTerminalRuleCall_0()); }
	RULE_INTEGER_NUMBER
	{ after(grammarAccess.getDOUBLE_NUMBERAccess().getINTEGER_NUMBERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_NUMBER__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_NUMBER__Group__1__Impl
	rule__DOUBLE_NUMBER__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_NUMBER__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_NUMBERAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getDOUBLE_NUMBERAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_NUMBER__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE_NUMBER__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE_NUMBER__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLE_NUMBERAccess().getINTEGER_NUMBERTerminalRuleCall_2()); }
	RULE_INTEGER_NUMBER
	{ after(grammarAccess.getDOUBLE_NUMBERAccess().getINTEGER_NUMBERTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__GreetingsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsTranslation_unitParserRuleCall_0()); }
		ruletranslation_unit
		{ after(grammarAccess.getModelAccess().getGreetingsTranslation_unitParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unit__External_declarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTranslation_unitAccess().getExternal_declarationExternal_declarationParserRuleCall_0_0()); }
		ruleexternal_declaration
		{ after(grammarAccess.getTranslation_unitAccess().getExternal_declarationExternal_declarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unit__Translation_unitRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTranslation_unitAccess().getTranslation_unitRTranslation_unitRParserRuleCall_1_0()); }
		ruletranslation_unitR
		{ after(grammarAccess.getTranslation_unitAccess().getTranslation_unitRTranslation_unitRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unitR__External_declarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTranslation_unitRAccess().getExternal_declarationExternal_declarationParserRuleCall_0_0()); }
		ruleexternal_declaration
		{ after(grammarAccess.getTranslation_unitRAccess().getExternal_declarationExternal_declarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Translation_unitR__RecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTranslation_unitRAccess().getRecTranslation_unitRParserRuleCall_1_0()); }
		ruletranslation_unitR
		{ after(grammarAccess.getTranslation_unitRAccess().getRecTranslation_unitRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Declaration_specifiersAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__DeclaratorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0()); }
		ruledeclarator
		{ after(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Declaration_listAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_listDeclaration_listParserRuleCall_0_2_0()); }
		ruledeclaration_list
		{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_listDeclaration_listParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Compound_statementAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_0_3_0()); }
		rulecompound_statement
		{ after(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Declaration_specifiersAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__DeclaratorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_1_1_0()); }
		ruledeclarator
		{ after(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Compound_statementAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_1_2_0()); }
		rulecompound_statement
		{ after(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__PointerAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getPointerPointerParserRuleCall_0_0_0()); }
		rulepointer
		{ after(grammarAccess.getDeclaratorAccess().getPointerPointerParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__DdAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getDdDirect_declaratorParserRuleCall_0_1_0()); }
		ruledirect_declarator
		{ after(grammarAccess.getDeclaratorAccess().getDdDirect_declaratorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_list__Type_qualifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_0_0()); }
		ruletype_qualifier
		{ after(grammarAccess.getType_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_list__Type_qualifier_listRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_qualifier_listAccess().getType_qualifier_listRType_qualifier_listRParserRuleCall_1_0()); }
		ruletype_qualifier_listR
		{ after(grammarAccess.getType_qualifier_listAccess().getType_qualifier_listRType_qualifier_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_listR__Type_qualifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_qualifier_listRAccess().getType_qualifierType_qualifierParserRuleCall_0_0()); }
		ruletype_qualifier
		{ after(grammarAccess.getType_qualifier_listRAccess().getType_qualifierType_qualifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier_listR__RecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_qualifier_listRAccess().getRecType_qualifier_listRParserRuleCall_1_0()); }
		ruletype_qualifier_listR
		{ after(grammarAccess.getType_qualifier_listRAccess().getRecType_qualifier_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__DrAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorAccess().getDrDirect_declaratorRParserRuleCall_0_1_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorAccess().getDrDirect_declaratorRParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__DeclaratorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_1_0()); }
		ruledeclarator
		{ after(grammarAccess.getDirect_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Direct_declaratorRAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorAccess().getDirect_declaratorRDirect_declaratorRParserRuleCall_1_3_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorAccess().getDirect_declaratorRDirect_declaratorRParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_0_2_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_1_3_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Type_qualifier_listAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_2_2_0()); }
		ruletype_qualifier_list
		{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Assignment_expressionAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_2_5_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Assignment_expressionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_3_4_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Type_qualifier_listAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0()); }
		ruletype_qualifier_list
		{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_4_4_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Type_qualifier_listAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0()); }
		ruletype_qualifier_list
		{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Assignment_expressionAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_5_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_5_5_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_5_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Type_qualifier_listAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0()); }
		ruletype_qualifier_list
		{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Assignment_expressionAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_6_2_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_6_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_6_4_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_6_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Type_qualifier_listAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_7_1_0()); }
		ruletype_qualifier_list
		{ after(grammarAccess.getDirect_declaratorRAccess().getType_qualifier_listType_qualifier_listParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_7_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_7_3_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_7_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Assignment_expressionAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_8_1_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getDirect_declaratorRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_8_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_8_3_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_8_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Parameter_type_listAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getParameter_type_listParameter_type_listParserRuleCall_9_1_0()); }
		ruleparameter_type_list
		{ after(grammarAccess.getDirect_declaratorRAccess().getParameter_type_listParameter_type_listParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_9_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_9_3_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_9_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_10_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_10_2_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_10_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__Identifier_listAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getIdentifier_listIdentifier_listParserRuleCall_11_1_0()); }
		ruleidentifier_list
		{ after(grammarAccess.getDirect_declaratorRAccess().getIdentifier_listIdentifier_listParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorR__RecAssignment_11_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_11_3_0()); }
		ruledirect_declaratorR
		{ after(grammarAccess.getDirect_declaratorRAccess().getRecDirect_declaratorRParserRuleCall_11_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__IlAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getIlIdentifier_listRParserRuleCall_1_0()); }
		ruleidentifier_listR
		{ after(grammarAccess.getIdentifier_listAccess().getIlIdentifier_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_listR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifier_listRAccess().getRecIdentifier_listRParserRuleCall_2_0()); }
		ruleidentifier_listR
		{ after(grammarAccess.getIdentifier_listRAccess().getRecIdentifier_listRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Parameter_declarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_listAccess().getParameter_declarationParameter_declarationParserRuleCall_0_0()); }
		ruleparameter_declaration
		{ after(grammarAccess.getParameter_listAccess().getParameter_declarationParameter_declarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Parameter_listRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_listAccess().getParameter_listRParameter_listRParserRuleCall_1_0()); }
		ruleparameter_listR
		{ after(grammarAccess.getParameter_listAccess().getParameter_listRParameter_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_listR__Parameter_declarationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_listRAccess().getParameter_declarationParameter_declarationParserRuleCall_1_0()); }
		ruleparameter_declaration
		{ after(grammarAccess.getParameter_listRAccess().getParameter_declarationParameter_declarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_listR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_listRAccess().getRecParameter_listRParserRuleCall_2_0()); }
		ruleparameter_listR
		{ after(grammarAccess.getParameter_listRAccess().getRecParameter_listRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Declaration_specifiers2Assignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiers2Declaration_specifiersParserRuleCall_0_0_0()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiers2Declaration_specifiersParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Declarator1Assignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_declarationAccess().getDeclarator1DeclaratorParserRuleCall_0_1_0()); }
		ruledeclarator
		{ after(grammarAccess.getParameter_declarationAccess().getDeclarator1DeclaratorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Declaration_specifiers1Assignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiers1Declaration_specifiersParserRuleCall_1_0_0()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiers1Declaration_specifiersParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Abstract_declaratorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_1_1_0()); }
		ruleabstract_declarator
		{ after(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_list__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_listAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruledeclaration
		{ after(grammarAccess.getDeclaration_listAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_list__Declaration_listRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_listAccess().getDeclaration_listRDeclaration_listRParserRuleCall_1_0()); }
		ruledeclaration_listR
		{ after(grammarAccess.getDeclaration_listAccess().getDeclaration_listRDeclaration_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_listR__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_listRAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruledeclaration
		{ after(grammarAccess.getDeclaration_listRAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_listR__RecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_listRAccess().getRecDeclaration_listRParserRuleCall_1_0()); }
		ruledeclaration_listR
		{ after(grammarAccess.getDeclaration_listRAccess().getRecDeclaration_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_list__Block_itemAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlock_item_listAccess().getBlock_itemBlock_itemParserRuleCall_0_0()); }
		ruleblock_item
		{ after(grammarAccess.getBlock_item_listAccess().getBlock_itemBlock_itemParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_list__Block_item_listRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlock_item_listAccess().getBlock_item_listRBlock_item_listRParserRuleCall_1_0()); }
		ruleblock_item_listR
		{ after(grammarAccess.getBlock_item_listAccess().getBlock_item_listRBlock_item_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_listR__Block_itemAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlock_item_listRAccess().getBlock_itemBlock_itemParserRuleCall_0_0()); }
		ruleblock_item
		{ after(grammarAccess.getBlock_item_listRAccess().getBlock_itemBlock_itemParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_item_listR__RecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlock_item_listRAccess().getRecBlock_item_listRParserRuleCall_1_0()); }
		ruleblock_item_listR
		{ after(grammarAccess.getBlock_item_listRAccess().getRecBlock_item_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__AAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeled_statementAccess().getAStatementParserRuleCall_0_2_0()); }
		rulestatement
		{ after(grammarAccess.getLabeled_statementAccess().getAStatementParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Constant_expressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeled_statementAccess().getConstant_expressionConstant_expressionParserRuleCall_1_1_0()); }
		ruleconstant_expression
		{ after(grammarAccess.getLabeled_statementAccess().getConstant_expressionConstant_expressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__StatementAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeled_statementAccess().getStatementStatementParserRuleCall_1_3_0()); }
		rulestatement
		{ after(grammarAccess.getLabeled_statementAccess().getStatementStatementParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__BAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeled_statementAccess().getBStatementParserRuleCall_2_2_0()); }
		rulestatement
		{ after(grammarAccess.getLabeled_statementAccess().getBStatementParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__ExpressionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
		ruleexpression
		{ after(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__StatementAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_0_4_0()); }
		rulestatement
		{ after(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__StatementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_1_1_0()); }
		rulestatement
		{ after(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__ExpressionAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_1_4_0()); }
		ruleexpression
		{ after(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Expression_statementAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_2_2_0()); }
		ruleexpression_statement
		{ after(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Expression_statementAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_2_3_0()); }
		ruleexpression_statement
		{ after(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__StatementAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_2_5_0()); }
		rulestatement
		{ after(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Expression_statementAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_3_2_0()); }
		ruleexpression_statement
		{ after(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Expression_statementAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_3_3_0()); }
		ruleexpression_statement
		{ after(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__ExpressionAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_3_4_0()); }
		ruleexpression
		{ after(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__StatementAssignment_3_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_3_6_0()); }
		rulestatement
		{ after(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_3_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__DeclarationAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_4_2_0()); }
		ruledeclaration
		{ after(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Expression_statementAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_4_3_0()); }
		ruleexpression_statement
		{ after(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__StatementAssignment_4_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_4_5_0()); }
		rulestatement
		{ after(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_4_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__DeclarationAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_5_2_0()); }
		ruledeclaration
		{ after(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Expression_statementAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_5_3_0()); }
		ruleexpression_statement
		{ after(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__ExpressionAssignment_5_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_5_4_0()); }
		ruleexpression
		{ after(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_5_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__StatementAssignment_5_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_5_6_0()); }
		rulestatement
		{ after(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_5_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Declaration_specifiersAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Init_declarator_listAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getInit_declarator_listInit_declarator_listParserRuleCall_0_1_0()); }
		ruleinit_declarator_list
		{ after(grammarAccess.getDeclarationAccess().getInit_declarator_listInit_declarator_listParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Init_declaratorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInit_declarator_listAccess().getInit_declaratorInit_declaratorParserRuleCall_0_0()); }
		ruleinit_declarator
		{ after(grammarAccess.getInit_declarator_listAccess().getInit_declaratorInit_declaratorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Init_declarator_listRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInit_declarator_listAccess().getInit_declarator_listRInit_declarator_listRParserRuleCall_1_0()); }
		ruleinit_declarator_listR
		{ after(grammarAccess.getInit_declarator_listAccess().getInit_declarator_listRInit_declarator_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__DeclaratorAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInit_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_0_0_0()); }
		ruledeclarator
		{ after(grammarAccess.getInit_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__InitializerAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInit_declaratorAccess().getInitializerInitializerParserRuleCall_0_2_0()); }
		ruleinitializer
		{ after(grammarAccess.getInit_declaratorAccess().getInitializerInitializerParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_listR__Init_declaratorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInit_declarator_listRAccess().getInit_declaratorInit_declaratorParserRuleCall_1_0()); }
		ruleinit_declarator
		{ after(grammarAccess.getInit_declarator_listRAccess().getInit_declaratorInit_declaratorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_listR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInit_declarator_listRAccess().getRecInit_declarator_listRParserRuleCall_2_0()); }
		ruleinit_declarator_listR
		{ after(grammarAccess.getInit_declarator_listRAccess().getRecInit_declarator_listRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Storage_class_specifierAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_0_0_0()); }
		rulestorage_class_specifier
		{ after(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__R1Assignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getR1Declaration_specifiersParserRuleCall_0_1_0()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getDeclaration_specifiersAccess().getR1Declaration_specifiersParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__DsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getDsDeclaration_specifiersParserRuleCall_2_1_0()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getDeclaration_specifiersAccess().getDsDeclaration_specifiersParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Type_qualifierAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_4_0_0()); }
		ruletype_qualifier
		{ after(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__R2Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getR2Declaration_specifiersParserRuleCall_4_1_0()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getDeclaration_specifiersAccess().getR2Declaration_specifiersParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__ExpressionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
		ruleexpression
		{ after(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__StatementAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_0_4_0()); }
		rulestatement
		{ after(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__StatementAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_0_6_0()); }
		rulestatement
		{ after(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
		ruleexpression
		{ after(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__StatementAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_1_4_0()); }
		rulestatement
		{ after(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__ExpressionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_2_2_0()); }
		ruleexpression
		{ after(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__StatementAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_2_4_0()); }
		rulestatement
		{ after(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Assignment_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getExpressionAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionRExpressionRParserRuleCall_1_0()); }
		ruleexpressionR
		{ after(grammarAccess.getExpressionAccess().getExpressionRExpressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionR__Assignment_expressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getExpressionRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionRAccess().getRecExpressionRParserRuleCall_2_0()); }
		ruleexpressionR
		{ after(grammarAccess.getExpressionRAccess().getRecExpressionRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Logical_or_expressionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionLogical_or_expressionParserRuleCall_1_0_0()); }
		rulelogical_or_expression
		{ after(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionLogical_or_expressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_expressionAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
		ruleexpression
		{ after(grammarAccess.getConditional_expressionAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__RecAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_expressionAccess().getRecConditional_expressionParserRuleCall_1_4_0()); }
		ruleconditional_expression
		{ after(grammarAccess.getConditional_expressionAccess().getRecConditional_expressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Logical_and_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionLogical_and_expressionParserRuleCall_0_0()); }
		rulelogical_and_expression
		{ after(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionLogical_and_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Logical_or_expressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogical_or_expressionAccess().getLogical_or_expressionRLogical_or_expressionRParserRuleCall_1_0()); }
		rulelogical_or_expressionR
		{ after(grammarAccess.getLogical_or_expressionAccess().getLogical_or_expressionRLogical_or_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expressionR__Logical_and_expressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogical_or_expressionRAccess().getLogical_and_expressionLogical_and_expressionParserRuleCall_1_0()); }
		rulelogical_and_expression
		{ after(grammarAccess.getLogical_or_expressionRAccess().getLogical_and_expressionLogical_and_expressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expressionR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogical_or_expressionRAccess().getRecLogical_or_expressionRParserRuleCall_2_0()); }
		rulelogical_or_expressionR
		{ after(grammarAccess.getLogical_or_expressionRAccess().getRecLogical_or_expressionRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Inclusive_or_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionInclusive_or_expressionParserRuleCall_0_0()); }
		ruleinclusive_or_expression
		{ after(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionInclusive_or_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Logical_and_expressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogical_and_expressionAccess().getLogical_and_expressionRLogical_and_expressionRParserRuleCall_1_0()); }
		rulelogical_and_expressionR
		{ after(grammarAccess.getLogical_and_expressionAccess().getLogical_and_expressionRLogical_and_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expressionR__Inclusive_or_expressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogical_and_expressionRAccess().getInclusive_or_expressionInclusive_or_expressionParserRuleCall_1_0()); }
		ruleinclusive_or_expression
		{ after(grammarAccess.getLogical_and_expressionRAccess().getInclusive_or_expressionInclusive_or_expressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expressionR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogical_and_expressionRAccess().getRecLogical_and_expressionRParserRuleCall_2_0()); }
		rulelogical_and_expressionR
		{ after(grammarAccess.getLogical_and_expressionRAccess().getRecLogical_and_expressionRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Exclusive_or_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionExclusive_or_expressionParserRuleCall_0_0()); }
		ruleexclusive_or_expression
		{ after(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionExclusive_or_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Inclusive_or_expressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusive_or_expressionAccess().getInclusive_or_expressionRInclusive_or_expressionRParserRuleCall_1_0()); }
		ruleinclusive_or_expressionR
		{ after(grammarAccess.getInclusive_or_expressionAccess().getInclusive_or_expressionRInclusive_or_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expressionR__Exclusive_or_expressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusive_or_expressionRAccess().getExclusive_or_expressionExclusive_or_expressionParserRuleCall_1_0()); }
		ruleexclusive_or_expression
		{ after(grammarAccess.getInclusive_or_expressionRAccess().getExclusive_or_expressionExclusive_or_expressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expressionR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusive_or_expressionRAccess().getRecInclusive_or_expressionRParserRuleCall_2_0()); }
		ruleinclusive_or_expressionR
		{ after(grammarAccess.getInclusive_or_expressionRAccess().getRecInclusive_or_expressionRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__And_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionAnd_expressionParserRuleCall_0_0()); }
		ruleand_expression
		{ after(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionAnd_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Exclusive_or_expressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusive_or_expressionAccess().getExclusive_or_expressionRExclusive_or_expressionRParserRuleCall_1_0()); }
		ruleexclusive_or_expressionR
		{ after(grammarAccess.getExclusive_or_expressionAccess().getExclusive_or_expressionRExclusive_or_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expressionR__And_expressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusive_or_expressionRAccess().getAnd_expressionAnd_expressionParserRuleCall_1_0()); }
		ruleand_expression
		{ after(grammarAccess.getExclusive_or_expressionRAccess().getAnd_expressionAnd_expressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expressionR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusive_or_expressionRAccess().getRecExclusive_or_expressionRParserRuleCall_2_0()); }
		ruleexclusive_or_expressionR
		{ after(grammarAccess.getExclusive_or_expressionRAccess().getRecExclusive_or_expressionRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expressionR__Equality_expressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_expressionRAccess().getEquality_expressionEquality_expressionParserRuleCall_1_0()); }
		ruleequality_expression
		{ after(grammarAccess.getAnd_expressionRAccess().getEquality_expressionEquality_expressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expressionR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_expressionRAccess().getRecAnd_expressionRParserRuleCall_2_0()); }
		ruleand_expressionR
		{ after(grammarAccess.getAnd_expressionRAccess().getRecAnd_expressionRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Equality_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_expressionAccess().getEquality_expressionEquality_expressionParserRuleCall_0_0()); }
		ruleequality_expression
		{ after(grammarAccess.getAnd_expressionAccess().getEquality_expressionEquality_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__And_expressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_expressionAccess().getAnd_expressionRAnd_expressionRParserRuleCall_1_0()); }
		ruleand_expressionR
		{ after(grammarAccess.getAnd_expressionAccess().getAnd_expressionRAnd_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Relational_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquality_expressionAccess().getRelational_expressionRelational_expressionParserRuleCall_0_0()); }
		rulerelational_expression
		{ after(grammarAccess.getEquality_expressionAccess().getRelational_expressionRelational_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Equality_expressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquality_expressionAccess().getEquality_expressionREquality_expressionRParserRuleCall_1_0()); }
		ruleequality_expressionR
		{ after(grammarAccess.getEquality_expressionAccess().getEquality_expressionREquality_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Relational_expressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquality_expressionRAccess().getRelational_expressionRelational_expressionParserRuleCall_0_1_0()); }
		rulerelational_expression
		{ after(grammarAccess.getEquality_expressionRAccess().getRelational_expressionRelational_expressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__RecAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquality_expressionRAccess().getRecEquality_expressionRParserRuleCall_0_2_0()); }
		ruleequality_expressionR
		{ after(grammarAccess.getEquality_expressionRAccess().getRecEquality_expressionRParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__Relational_expressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquality_expressionRAccess().getRelational_expressionRelational_expressionParserRuleCall_1_1_0()); }
		rulerelational_expression
		{ after(grammarAccess.getEquality_expressionRAccess().getRelational_expressionRelational_expressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expressionR__RecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquality_expressionRAccess().getRecEquality_expressionRParserRuleCall_1_2_0()); }
		ruleequality_expressionR
		{ after(grammarAccess.getEquality_expressionRAccess().getRecEquality_expressionRParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Shift_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionAccess().getShift_expressionShift_expressionParserRuleCall_0_0()); }
		ruleshift_expression
		{ after(grammarAccess.getRelational_expressionAccess().getShift_expressionShift_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__ReAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionAccess().getReRelational_expressionRParserRuleCall_1_0()); }
		rulerelational_expressionR
		{ after(grammarAccess.getRelational_expressionAccess().getReRelational_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Shift_expressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getShift_expressionShift_expressionParserRuleCall_0_1_0()); }
		ruleshift_expression
		{ after(grammarAccess.getRelational_expressionRAccess().getShift_expressionShift_expressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__RecAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getRecRelational_expressionRParserRuleCall_0_2_0()); }
		rulerelational_expressionR
		{ after(grammarAccess.getRelational_expressionRAccess().getRecRelational_expressionRParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Shift_expressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getShift_expressionShift_expressionParserRuleCall_1_1_0()); }
		ruleshift_expression
		{ after(grammarAccess.getRelational_expressionRAccess().getShift_expressionShift_expressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__RecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getRecRelational_expressionRParserRuleCall_1_2_0()); }
		rulerelational_expressionR
		{ after(grammarAccess.getRelational_expressionRAccess().getRecRelational_expressionRParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Shift_expressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getShift_expressionShift_expressionParserRuleCall_2_1_0()); }
		ruleshift_expression
		{ after(grammarAccess.getRelational_expressionRAccess().getShift_expressionShift_expressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__RecAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getRecRelational_expressionRParserRuleCall_2_2_0()); }
		rulerelational_expressionR
		{ after(grammarAccess.getRelational_expressionRAccess().getRecRelational_expressionRParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__Shift_expressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getShift_expressionShift_expressionParserRuleCall_3_1_0()); }
		ruleshift_expression
		{ after(grammarAccess.getRelational_expressionRAccess().getShift_expressionShift_expressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expressionR__RecAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionRAccess().getRecRelational_expressionRParserRuleCall_3_2_0()); }
		rulerelational_expressionR
		{ after(grammarAccess.getRelational_expressionRAccess().getRecRelational_expressionRParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Shift_expressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShift_expressionAccess().getShift_expressionRShift_expressionRParserRuleCall_1_0()); }
		ruleshift_expressionR
		{ after(grammarAccess.getShift_expressionAccess().getShift_expressionRShift_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Additive_expressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShift_expressionRAccess().getAdditive_expressionAdditive_expressionParserRuleCall_0_1_0()); }
		ruleadditive_expression
		{ after(grammarAccess.getShift_expressionRAccess().getAdditive_expressionAdditive_expressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__RecAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShift_expressionRAccess().getRecShift_expressionRParserRuleCall_0_2_0()); }
		ruleshift_expressionR
		{ after(grammarAccess.getShift_expressionRAccess().getRecShift_expressionRParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__Additive_expressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShift_expressionRAccess().getAdditive_expressionAdditive_expressionParserRuleCall_1_1_0()); }
		ruleadditive_expression
		{ after(grammarAccess.getShift_expressionRAccess().getAdditive_expressionAdditive_expressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expressionR__RecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShift_expressionRAccess().getRecShift_expressionRParserRuleCall_1_2_0()); }
		ruleshift_expressionR
		{ after(grammarAccess.getShift_expressionRAccess().getRecShift_expressionRParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Multiplicative_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_0_0()); }
		rulemultiplicative_expression
		{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Additive_expressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_expressionAccess().getAdditive_expressionRAdditive_expressionRParserRuleCall_1_0()); }
		ruleadditive_expressionR
		{ after(grammarAccess.getAdditive_expressionAccess().getAdditive_expressionRAdditive_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Multiplicative_expressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_expressionRAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_0_1_0()); }
		rulemultiplicative_expression
		{ after(grammarAccess.getAdditive_expressionRAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__RecAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_expressionRAccess().getRecAdditive_expressionRParserRuleCall_0_2_0()); }
		ruleadditive_expressionR
		{ after(grammarAccess.getAdditive_expressionRAccess().getRecAdditive_expressionRParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__Multiplicative_expressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_expressionRAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_1_1_0()); }
		rulemultiplicative_expression
		{ after(grammarAccess.getAdditive_expressionRAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expressionR__RecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_expressionRAccess().getRecAdditive_expressionRParserRuleCall_1_2_0()); }
		ruleadditive_expressionR
		{ after(grammarAccess.getAdditive_expressionRAccess().getRecAdditive_expressionRParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Cast_expressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionCast_expressionParserRuleCall_0_1_0()); }
		rulecast_expression
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionCast_expressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__RecAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getRecMultiplicative_expressionRParserRuleCall_0_2_0()); }
		rulemultiplicative_expressionR
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getRecMultiplicative_expressionRParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Cast_expressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionCast_expressionParserRuleCall_1_1_0()); }
		rulecast_expression
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionCast_expressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__RecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getRecMultiplicative_expressionRParserRuleCall_1_2_0()); }
		rulemultiplicative_expressionR
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getRecMultiplicative_expressionRParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__Cast_expressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionCast_expressionParserRuleCall_2_1_0()); }
		rulecast_expression
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getCast_expressionCast_expressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionR__RecAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionRAccess().getRecMultiplicative_expressionRParserRuleCall_2_2_0()); }
		rulemultiplicative_expressionR
		{ after(grammarAccess.getMultiplicative_expressionRAccess().getRecMultiplicative_expressionRParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Cast_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionAccess().getCast_expressionCast_expressionParserRuleCall_0_0()); }
		rulecast_expression
		{ after(grammarAccess.getMultiplicative_expressionAccess().getCast_expressionCast_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Multiplicative_expressionRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionAccess().getMultiplicative_expressionRMultiplicative_expressionRParserRuleCall_1_0()); }
		rulemultiplicative_expressionR
		{ after(grammarAccess.getMultiplicative_expressionAccess().getMultiplicative_expressionRMultiplicative_expressionRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Unary_expressionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_1_0_0()); }
		ruleunary_expression
		{ after(grammarAccess.getAssignment_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Assignment_operatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_expressionAccess().getAssignment_operatorAssignment_operatorParserRuleCall_1_1_0()); }
		ruleassignment_operator
		{ after(grammarAccess.getAssignment_expressionAccess().getAssignment_operatorAssignment_operatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__RecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_expressionAccess().getRecAssignment_expressionParserRuleCall_1_2_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getAssignment_expressionAccess().getRecAssignment_expressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Type_nameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCast_expressionAccess().getType_nameType_nameParserRuleCall_1_1_0()); }
		ruletype_name
		{ after(grammarAccess.getCast_expressionAccess().getType_nameType_nameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__RecAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCast_expressionAccess().getRecCast_expressionParserRuleCall_1_3_0()); }
		rulecast_expression
		{ after(grammarAccess.getCast_expressionAccess().getRecCast_expressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__RecAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_expressionAccess().getRecUnary_expressionParserRuleCall_1_1_0()); }
		ruleunary_expression
		{ after(grammarAccess.getUnary_expressionAccess().getRecUnary_expressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__RecAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_expressionAccess().getRecUnary_expressionParserRuleCall_2_1_0()); }
		ruleunary_expression
		{ after(grammarAccess.getUnary_expressionAccess().getRecUnary_expressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Unary_operatorAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_expressionAccess().getUnary_operatorUnary_operatorParserRuleCall_3_0_0()); }
		ruleunary_operator
		{ after(grammarAccess.getUnary_expressionAccess().getUnary_operatorUnary_operatorParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__CeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_expressionAccess().getCeCast_expressionParserRuleCall_3_1_0()); }
		rulecast_expression
		{ after(grammarAccess.getUnary_expressionAccess().getCeCast_expressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Primary_expressionAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionPrimary_expressionParserRuleCall_0_0_0()); }
		ruleprimary_expression
		{ after(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionPrimary_expressionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Postfix_expressionRAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRPostfix_expressionRParserRuleCall_0_1_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRPostfix_expressionRParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Type_nameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getType_nameType_nameParserRuleCall_1_1_0()); }
		ruletype_name
		{ after(grammarAccess.getPostfix_expressionAccess().getType_nameType_nameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Initializer_listAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_1_4_0()); }
		ruleinitializer_list
		{ after(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Postfix_expressionRAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRPostfix_expressionRParserRuleCall_1_6_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRPostfix_expressionRParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Type_nameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getType_nameType_nameParserRuleCall_2_1_0()); }
		ruletype_name
		{ after(grammarAccess.getPostfix_expressionAccess().getType_nameType_nameParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Initializer_listAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_2_4_0()); }
		ruleinitializer_list
		{ after(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Postfix_expressionRAssignment_2_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRPostfix_expressionRParserRuleCall_2_7_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionRPostfix_expressionRParserRuleCall_2_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__DesignationAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listAccess().getDesignationDesignationParserRuleCall_0_0_0()); }
		ruledesignation
		{ after(grammarAccess.getInitializer_listAccess().getDesignationDesignationParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__InitializerAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listAccess().getInitializerInitializerParserRuleCall_0_1_0()); }
		ruleinitializer
		{ after(grammarAccess.getInitializer_listAccess().getInitializerInitializerParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__IlAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listAccess().getIlInitializer_listRParserRuleCall_0_2_0()); }
		ruleinitializer_listR
		{ after(grammarAccess.getInitializer_listAccess().getIlInitializer_listRParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__InitializerAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listAccess().getInitializerInitializerParserRuleCall_1_0_0()); }
		ruleinitializer
		{ after(grammarAccess.getInitializer_listAccess().getInitializerInitializerParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__IlrAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listAccess().getIlrInitializer_listRParserRuleCall_1_1_0()); }
		ruleinitializer_listR
		{ after(grammarAccess.getInitializer_listAccess().getIlrInitializer_listRParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__DesignationAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listRAccess().getDesignationDesignationParserRuleCall_0_1_0()); }
		ruledesignation
		{ after(grammarAccess.getInitializer_listRAccess().getDesignationDesignationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__InitializerAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listRAccess().getInitializerInitializerParserRuleCall_0_2_0()); }
		ruleinitializer
		{ after(grammarAccess.getInitializer_listRAccess().getInitializerInitializerParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__RecAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listRAccess().getRecInitializer_listRParserRuleCall_0_3_0()); }
		ruleinitializer_listR
		{ after(grammarAccess.getInitializer_listRAccess().getRecInitializer_listRParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__InitializerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listRAccess().getInitializerInitializerParserRuleCall_1_1_0()); }
		ruleinitializer
		{ after(grammarAccess.getInitializer_listRAccess().getInitializerInitializerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_listR__RecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializer_listRAccess().getRecInitializer_listRParserRuleCall_1_2_0()); }
		ruleinitializer_listR
		{ after(grammarAccess.getInitializer_listRAccess().getRecInitializer_listRParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_list__DesignatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDesignator_listAccess().getDesignatorDesignatorParserRuleCall_0_0()); }
		ruledesignator
		{ after(grammarAccess.getDesignator_listAccess().getDesignatorDesignatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_list__DesignatorRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDesignator_listAccess().getDesignatorRDesignator_listRParserRuleCall_1_0()); }
		ruledesignator_listR
		{ after(grammarAccess.getDesignator_listAccess().getDesignatorRDesignator_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_listR__DesignatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDesignator_listRAccess().getDesignatorDesignatorParserRuleCall_0_0()); }
		ruledesignator
		{ after(grammarAccess.getDesignator_listRAccess().getDesignatorDesignatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator_listR__RecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDesignator_listRAccess().getRecDesignator_listRParserRuleCall_1_0()); }
		ruledesignator_listR
		{ after(grammarAccess.getDesignator_listRAccess().getRecDesignator_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__Specifier_qualifier_listAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0()); }
		rulespecifier_qualifier_list
		{ after(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__AdAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_nameAccess().getAdAbstract_declaratorParserRuleCall_0_1_0()); }
		ruleabstract_declarator
		{ after(grammarAccess.getType_nameAccess().getAdAbstract_declaratorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Type_specifierAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_0_0_0()); }
		ruletype_specifier
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__RecAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getRecSpecifier_qualifier_listParserRuleCall_0_1_0()); }
		rulespecifier_qualifier_list
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getRecSpecifier_qualifier_listParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Struct_declaratorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorStruct_declaratorParserRuleCall_0_0()); }
		rulestruct_declarator
		{ after(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorStruct_declaratorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Struct_declarator_listRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declarator_listAccess().getStruct_declarator_listRStruct_declarator_listRParserRuleCall_1_0()); }
		rulestruct_declarator_listR
		{ after(grammarAccess.getStruct_declarator_listAccess().getStruct_declarator_listRStruct_declarator_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_list__Struct_declarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationStruct_declarationParserRuleCall_0_0()); }
		rulestruct_declaration
		{ after(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationStruct_declarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_list__Struct_declaration_listRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declaration_listAccess().getStruct_declaration_listRStruct_declaration_listRParserRuleCall_1_0()); }
		rulestruct_declaration_listR
		{ after(grammarAccess.getStruct_declaration_listAccess().getStruct_declaration_listRStruct_declaration_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_listR__Struct_declarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declaration_listRAccess().getStruct_declarationStruct_declarationParserRuleCall_0_0()); }
		rulestruct_declaration
		{ after(grammarAccess.getStruct_declaration_listRAccess().getStruct_declarationStruct_declarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration_listR__RecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declaration_listRAccess().getRecStruct_declaration_listRParserRuleCall_1_0()); }
		rulestruct_declaration_listR
		{ after(grammarAccess.getStruct_declaration_listRAccess().getRecStruct_declaration_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Specifier_qualifier_listxAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listxSpecifier_qualifier_listParserRuleCall_1_0_0()); }
		rulespecifier_qualifier_list
		{ after(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listxSpecifier_qualifier_listParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Struct_declarator_listAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listStruct_declarator_listParserRuleCall_1_1_0()); }
		rulestruct_declarator_list
		{ after(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listStruct_declarator_listParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_listR__Struct_declaratorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declarator_listRAccess().getStruct_declaratorStruct_declaratorParserRuleCall_1_0()); }
		rulestruct_declarator
		{ after(grammarAccess.getStruct_declarator_listRAccess().getStruct_declaratorStruct_declaratorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_listR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declarator_listRAccess().getRecStruct_declarator_listRParserRuleCall_2_0()); }
		rulestruct_declarator_listR
		{ after(grammarAccess.getStruct_declarator_listRAccess().getRecStruct_declarator_listRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__DeclaratorxAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getDeclaratorxDeclaratorParserRuleCall_1_0_0()); }
		ruledeclarator
		{ after(grammarAccess.getStruct_declaratorAccess().getDeclaratorxDeclaratorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Constant_expression1Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getConstant_expression1Constant_expressionParserRuleCall_1_2_0()); }
		ruleconstant_expression
		{ after(grammarAccess.getStruct_declaratorAccess().getConstant_expression1Constant_expressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Struct_or_unionAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionStruct_or_unionParserRuleCall_0_0_0()); }
		rulestruct_or_union
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionStruct_or_unionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Struct_declaration_listAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listStruct_declaration_listParserRuleCall_0_2_0()); }
		rulestruct_declaration_list
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listStruct_declaration_listParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Struct_or_unionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionStruct_or_unionParserRuleCall_1_0_0()); }
		rulestruct_or_union
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionStruct_or_unionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__IdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getIdIDENTIFIERParserRuleCall_1_1_0()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getIdIDENTIFIERParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Struct_declaration_listAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listStruct_declaration_listParserRuleCall_1_3_0()); }
		rulestruct_declaration_list
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listStruct_declaration_listParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__ExpressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
		ruleexpression
		{ after(grammarAccess.getPostfix_expressionRAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__RecAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_0_3_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__RecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_1_2_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__Argument_expression_listAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getArgument_expression_listArgument_expression_listParserRuleCall_2_1_0()); }
		ruleargument_expression_list
		{ after(grammarAccess.getPostfix_expressionRAccess().getArgument_expression_listArgument_expression_listParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__RecAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_2_3_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__RecAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_3_2_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__RecAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_4_2_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__RecAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_5_1_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionR__RecAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_6_1_0()); }
		rulepostfix_expressionR
		{ after(grammarAccess.getPostfix_expressionRAccess().getRecPostfix_expressionRParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_list__Assignment_expressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument_expression_listAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getArgument_expression_listAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_list__Argument_expression_listRAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument_expression_listAccess().getArgument_expression_listRArgument_expression_listRParserRuleCall_1_0()); }
		ruleargument_expression_listR
		{ after(grammarAccess.getArgument_expression_listAccess().getArgument_expression_listRArgument_expression_listRParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listR__Assignment_expressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument_expression_listRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getArgument_expression_listRAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listR__RecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument_expression_listRAccess().getRecArgument_expression_listRParserRuleCall_2_0()); }
		ruleargument_expression_listR
		{ after(grammarAccess.getArgument_expression_listRAccess().getRecArgument_expression_listRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__StringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getStringSTRING_CTerminalRuleCall_3_1_0()); }
		RULE_STRING_C
		{ after(grammarAccess.getPrimary_expressionAccess().getStringSTRING_CTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Type_qualifier_listAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_1_0()); }
		ruletype_qualifier_list
		{ after(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__RecAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerAccess().getRecPointerParserRuleCall_0_2_0()); }
		rulepointer
		{ after(grammarAccess.getPointerAccess().getRecPointerParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__RecAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerAccess().getRecPointerParserRuleCall_2_1_0()); }
		rulepointer
		{ after(grammarAccess.getPointerAccess().getRecPointerParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDENTIFIER__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIDENTIFIERAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getIDENTIFIERAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOTS : ':';

RULE_MINUS : '-';

RULE_PLUS : '+';

RULE_COMMA : ',';

RULE_DOT_COMMA : ';';

RULE_LEFT_CHAVES : '{';

RULE_RIGHT_CHAVES : '}';

RULE_LEFT_COCHETE : '[';

RULE_RIGHT_COCHETE : ']';

RULE_LEFT_PARENTESE : '(';

RULE_RIGHT_PARENTESE : ')';

RULE_INC_OP : '++';

RULE_DEC_OP : '--';

RULE_INTEGER_NUMBER : ('0'..'9')*;

fragment RULE_SINGLE_QUOTES : '\'';

RULE_STRING_C : RULE_SINGLE_QUOTES (~('\'')|'\'\'')* RULE_SINGLE_QUOTES;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
