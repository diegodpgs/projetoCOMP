/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.declaration;
import org.xtext.example.mydsl.myDsl.declaration_list;
import org.xtext.example.mydsl.myDsl.declaration_listR;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>declaration list</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.declaration_listImpl#getDeclaration <em>Declaration</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.declaration_listImpl#getDeclaration_listR <em>Declaration list R</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class declaration_listImpl extends MinimalEObjectImpl.Container implements declaration_list
{
  /**
   * The cached value of the '{@link #getDeclaration() <em>Declaration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaration()
   * @generated
   * @ordered
   */
  protected declaration declaration;

  /**
   * The cached value of the '{@link #getDeclaration_listR() <em>Declaration list R</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaration_listR()
   * @generated
   * @ordered
   */
  protected declaration_listR declaration_listR;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected declaration_listImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.DECLARATION_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration getDeclaration()
  {
    return declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclaration(declaration newDeclaration, NotificationChain msgs)
  {
    declaration oldDeclaration = declaration;
    declaration = newDeclaration;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION_LIST__DECLARATION, oldDeclaration, newDeclaration);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclaration(declaration newDeclaration)
  {
    if (newDeclaration != declaration)
    {
      NotificationChain msgs = null;
      if (declaration != null)
        msgs = ((InternalEObject)declaration).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION_LIST__DECLARATION, null, msgs);
      if (newDeclaration != null)
        msgs = ((InternalEObject)newDeclaration).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION_LIST__DECLARATION, null, msgs);
      msgs = basicSetDeclaration(newDeclaration, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION_LIST__DECLARATION, newDeclaration, newDeclaration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration_listR getDeclaration_listR()
  {
    return declaration_listR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclaration_listR(declaration_listR newDeclaration_listR, NotificationChain msgs)
  {
    declaration_listR oldDeclaration_listR = declaration_listR;
    declaration_listR = newDeclaration_listR;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION_LIST__DECLARATION_LIST_R, oldDeclaration_listR, newDeclaration_listR);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclaration_listR(declaration_listR newDeclaration_listR)
  {
    if (newDeclaration_listR != declaration_listR)
    {
      NotificationChain msgs = null;
      if (declaration_listR != null)
        msgs = ((InternalEObject)declaration_listR).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION_LIST__DECLARATION_LIST_R, null, msgs);
      if (newDeclaration_listR != null)
        msgs = ((InternalEObject)newDeclaration_listR).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION_LIST__DECLARATION_LIST_R, null, msgs);
      msgs = basicSetDeclaration_listR(newDeclaration_listR, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION_LIST__DECLARATION_LIST_R, newDeclaration_listR, newDeclaration_listR));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION_LIST__DECLARATION:
        return basicSetDeclaration(null, msgs);
      case MyDslPackage.DECLARATION_LIST__DECLARATION_LIST_R:
        return basicSetDeclaration_listR(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION_LIST__DECLARATION:
        return getDeclaration();
      case MyDslPackage.DECLARATION_LIST__DECLARATION_LIST_R:
        return getDeclaration_listR();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION_LIST__DECLARATION:
        setDeclaration((declaration)newValue);
        return;
      case MyDslPackage.DECLARATION_LIST__DECLARATION_LIST_R:
        setDeclaration_listR((declaration_listR)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION_LIST__DECLARATION:
        setDeclaration((declaration)null);
        return;
      case MyDslPackage.DECLARATION_LIST__DECLARATION_LIST_R:
        setDeclaration_listR((declaration_listR)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION_LIST__DECLARATION:
        return declaration != null;
      case MyDslPackage.DECLARATION_LIST__DECLARATION_LIST_R:
        return declaration_listR != null;
    }
    return super.eIsSet(featureID);
  }

} //declaration_listImpl
