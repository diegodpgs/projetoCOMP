/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.example.mydsl.myDsl.Model;
import org.xtext.example.mydsl.myDsl.MyDslFactory;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.StringC;
import org.xtext.example.mydsl.myDsl.abstract_declarator;
import org.xtext.example.mydsl.myDsl.additive_expression;
import org.xtext.example.mydsl.myDsl.additive_expressionR;
import org.xtext.example.mydsl.myDsl.and_expression;
import org.xtext.example.mydsl.myDsl.and_expressionR;
import org.xtext.example.mydsl.myDsl.argument_expression_list;
import org.xtext.example.mydsl.myDsl.argument_expression_listR;
import org.xtext.example.mydsl.myDsl.assignment_expression;
import org.xtext.example.mydsl.myDsl.atomic_type_specifier;
import org.xtext.example.mydsl.myDsl.block_item;
import org.xtext.example.mydsl.myDsl.block_item_list;
import org.xtext.example.mydsl.myDsl.block_item_listR;
import org.xtext.example.mydsl.myDsl.cast_expression;
import org.xtext.example.mydsl.myDsl.compound_statement;
import org.xtext.example.mydsl.myDsl.conditional_expression;
import org.xtext.example.mydsl.myDsl.constant_expression;
import org.xtext.example.mydsl.myDsl.declaration;
import org.xtext.example.mydsl.myDsl.declaration_list;
import org.xtext.example.mydsl.myDsl.declaration_listR;
import org.xtext.example.mydsl.myDsl.declaration_specifiers;
import org.xtext.example.mydsl.myDsl.declarator;
import org.xtext.example.mydsl.myDsl.designation;
import org.xtext.example.mydsl.myDsl.designator;
import org.xtext.example.mydsl.myDsl.designator_list;
import org.xtext.example.mydsl.myDsl.designator_listR;
import org.xtext.example.mydsl.myDsl.direct_declarator;
import org.xtext.example.mydsl.myDsl.direct_declaratorR;
import org.xtext.example.mydsl.myDsl.equality_expression;
import org.xtext.example.mydsl.myDsl.equality_expressionR;
import org.xtext.example.mydsl.myDsl.exclusive_or_expression;
import org.xtext.example.mydsl.myDsl.exclusive_or_expressionR;
import org.xtext.example.mydsl.myDsl.expression;
import org.xtext.example.mydsl.myDsl.expressionR;
import org.xtext.example.mydsl.myDsl.expression_statement;
import org.xtext.example.mydsl.myDsl.external_declaration;
import org.xtext.example.mydsl.myDsl.function_definition;
import org.xtext.example.mydsl.myDsl.identifier_list;
import org.xtext.example.mydsl.myDsl.identifier_listR;
import org.xtext.example.mydsl.myDsl.inclusive_or_expression;
import org.xtext.example.mydsl.myDsl.inclusive_or_expressionR;
import org.xtext.example.mydsl.myDsl.init_declarator;
import org.xtext.example.mydsl.myDsl.init_declarator_list;
import org.xtext.example.mydsl.myDsl.init_declarator_listR;
import org.xtext.example.mydsl.myDsl.initializer;
import org.xtext.example.mydsl.myDsl.initializer_list;
import org.xtext.example.mydsl.myDsl.initializer_listR;
import org.xtext.example.mydsl.myDsl.iteration_statement;
import org.xtext.example.mydsl.myDsl.jump_statement;
import org.xtext.example.mydsl.myDsl.labeled_statement;
import org.xtext.example.mydsl.myDsl.logical_and_expression;
import org.xtext.example.mydsl.myDsl.logical_and_expressionR;
import org.xtext.example.mydsl.myDsl.logical_or_expression;
import org.xtext.example.mydsl.myDsl.logical_or_expressionR;
import org.xtext.example.mydsl.myDsl.multiplicative_expression;
import org.xtext.example.mydsl.myDsl.multiplicative_expressionR;
import org.xtext.example.mydsl.myDsl.parameter_declaration;
import org.xtext.example.mydsl.myDsl.parameter_list;
import org.xtext.example.mydsl.myDsl.parameter_listR;
import org.xtext.example.mydsl.myDsl.parameter_type_list;
import org.xtext.example.mydsl.myDsl.pointer;
import org.xtext.example.mydsl.myDsl.postfix_expression;
import org.xtext.example.mydsl.myDsl.postfix_expressionR;
import org.xtext.example.mydsl.myDsl.primary_expression;
import org.xtext.example.mydsl.myDsl.relational_expression;
import org.xtext.example.mydsl.myDsl.relational_expressionR;
import org.xtext.example.mydsl.myDsl.selection_statement;
import org.xtext.example.mydsl.myDsl.shift_expression;
import org.xtext.example.mydsl.myDsl.shift_expressionR;
import org.xtext.example.mydsl.myDsl.specifier_qualifier_list;
import org.xtext.example.mydsl.myDsl.statement;
import org.xtext.example.mydsl.myDsl.static_assert_declaration;
import org.xtext.example.mydsl.myDsl.struct_declaration;
import org.xtext.example.mydsl.myDsl.struct_declaration_list;
import org.xtext.example.mydsl.myDsl.struct_declaration_listR;
import org.xtext.example.mydsl.myDsl.struct_declarator;
import org.xtext.example.mydsl.myDsl.struct_declarator_list;
import org.xtext.example.mydsl.myDsl.struct_declarator_listR;
import org.xtext.example.mydsl.myDsl.struct_or_union_specifier;
import org.xtext.example.mydsl.myDsl.translation_unit;
import org.xtext.example.mydsl.myDsl.translation_unitR;
import org.xtext.example.mydsl.myDsl.type_name;
import org.xtext.example.mydsl.myDsl.type_qualifier_list;
import org.xtext.example.mydsl.myDsl.type_qualifier_listR;
import org.xtext.example.mydsl.myDsl.type_specifier;
import org.xtext.example.mydsl.myDsl.unary_expression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslPackageImpl extends EPackageImpl implements MyDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass translation_unitEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass translation_unitREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass external_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass function_definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass type_qualifier_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass type_qualifier_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass direct_declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass direct_declaratorREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameter_type_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass identifier_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass identifier_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameter_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameter_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameter_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstract_declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declaration_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declaration_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass compound_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass block_item_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass block_item_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass block_itemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jump_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass labeled_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass iteration_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass init_declarator_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass init_declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass init_declarator_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declaration_specifiersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selection_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expression_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditional_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logical_or_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logical_or_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logical_and_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logical_and_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inclusive_or_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inclusive_or_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exclusive_or_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exclusive_or_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass and_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass and_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass equality_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass equality_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass relational_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass relational_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass shift_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass shift_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass additive_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass additive_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass multiplicative_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass multiplicative_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass assignment_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cast_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unary_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass postfix_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initializerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initializer_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initializer_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass designationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass designator_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass designator_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass designatorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constant_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass type_nameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass specifier_qualifier_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declarator_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declaration_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declaration_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declarator_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass static_assert_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_or_union_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass atomic_type_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass postfix_expressionREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argument_expression_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argument_expression_listREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primary_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pointerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass identifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass type_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringCEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MyDslPackageImpl()
  {
    super(eNS_URI, MyDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link MyDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MyDslPackage init()
  {
    if (isInited) return (MyDslPackage)EPackage.Registry.INSTANCE.getEPackage(MyDslPackage.eNS_URI);

    // Obtain or create and register package
    MyDslPackageImpl theMyDslPackage = (MyDslPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof MyDslPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new MyDslPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theMyDslPackage.createPackageContents();

    // Initialize created meta-data
    theMyDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMyDslPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MyDslPackage.eNS_URI, theMyDslPackage);
    return theMyDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Greetings()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettranslation_unit()
  {
    return translation_unitEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettranslation_unit_External_declaration()
  {
    return (EReference)translation_unitEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettranslation_unit_Translation_unitR()
  {
    return (EReference)translation_unitEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettranslation_unitR()
  {
    return translation_unitREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettranslation_unitR_External_declaration()
  {
    return (EReference)translation_unitREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettranslation_unitR_Rec()
  {
    return (EReference)translation_unitREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexternal_declaration()
  {
    return external_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexternal_declaration_Declaration_specifiers()
  {
    return (EReference)external_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfunction_definition()
  {
    return function_definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunction_definition_Declarator()
  {
    return (EReference)function_definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunction_definition_Declaration_list()
  {
    return (EReference)function_definitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunction_definition_Compound_statement()
  {
    return (EReference)function_definitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclarator()
  {
    return declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclarator_Pointer()
  {
    return (EReference)declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclarator_Dd()
  {
    return (EReference)declaratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettype_qualifier_list()
  {
    return type_qualifier_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettype_qualifier_list_Type_qualifier()
  {
    return (EAttribute)type_qualifier_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_qualifier_list_Type_qualifier_listR()
  {
    return (EReference)type_qualifier_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettype_qualifier_listR()
  {
    return type_qualifier_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettype_qualifier_listR_Type_qualifier()
  {
    return (EAttribute)type_qualifier_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_qualifier_listR_Rec()
  {
    return (EReference)type_qualifier_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdirect_declarator()
  {
    return direct_declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declarator_Direct_declaratorR()
  {
    return (EReference)direct_declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdirect_declaratorR()
  {
    return direct_declaratorREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declaratorR_Rec()
  {
    return (EReference)direct_declaratorREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declaratorR_Type_qualifier_list()
  {
    return (EReference)direct_declaratorREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declaratorR_Assignment_expression()
  {
    return (EReference)direct_declaratorREClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declaratorR_Parameter_type_list()
  {
    return (EReference)direct_declaratorREClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declaratorR_Identifier_list()
  {
    return (EReference)direct_declaratorREClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameter_type_list()
  {
    return parameter_type_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getidentifier_list()
  {
    return identifier_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getidentifier_listR()
  {
    return identifier_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameter_list()
  {
    return parameter_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_list_Parameter_declaration()
  {
    return (EReference)parameter_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_list_Parameter_listR()
  {
    return (EReference)parameter_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameter_listR()
  {
    return parameter_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_listR_Parameter_declaration()
  {
    return (EReference)parameter_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_listR_Rec()
  {
    return (EReference)parameter_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameter_declaration()
  {
    return parameter_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_declaration_Declaration_specifiers2()
  {
    return (EReference)parameter_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_declaration_Declarator1()
  {
    return (EReference)parameter_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_declaration_Declaration_specifiers1()
  {
    return (EReference)parameter_declarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_declaration_Abstract_declarator()
  {
    return (EReference)parameter_declarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getabstract_declarator()
  {
    return abstract_declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclaration_list()
  {
    return declaration_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_list_Declaration()
  {
    return (EReference)declaration_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_list_Declaration_listR()
  {
    return (EReference)declaration_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclaration_listR()
  {
    return declaration_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_listR_Declaration()
  {
    return (EReference)declaration_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_listR_Rec()
  {
    return (EReference)declaration_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcompound_statement()
  {
    return compound_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getblock_item_list()
  {
    return block_item_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getblock_item_list_Block_item()
  {
    return (EReference)block_item_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getblock_item_list_Block_item_listR()
  {
    return (EReference)block_item_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getblock_item_listR()
  {
    return block_item_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getblock_item_listR_Block_item()
  {
    return (EReference)block_item_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getblock_item_listR_Rec()
  {
    return (EReference)block_item_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getblock_item()
  {
    return block_itemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstatement()
  {
    return statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getjump_statement()
  {
    return jump_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlabeled_statement()
  {
    return labeled_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlabeled_statement_Constant_expression()
  {
    return (EReference)labeled_statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlabeled_statement_Statement()
  {
    return (EReference)labeled_statementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlabeled_statement_B()
  {
    return (EReference)labeled_statementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getiteration_statement()
  {
    return iteration_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getiteration_statement_Expression()
  {
    return (EReference)iteration_statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getiteration_statement_Statement()
  {
    return (EReference)iteration_statementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getiteration_statement_Expression_statement()
  {
    return (EReference)iteration_statementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getiteration_statement_Declaration()
  {
    return (EReference)iteration_statementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclaration()
  {
    return declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_Init_declarator_list()
  {
    return (EReference)declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinit_declarator_list()
  {
    return init_declarator_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_list_Init_declarator()
  {
    return (EReference)init_declarator_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_list_Init_declarator_listR()
  {
    return (EReference)init_declarator_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinit_declarator()
  {
    return init_declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_Declarator()
  {
    return (EReference)init_declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_Initializer()
  {
    return (EReference)init_declaratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinit_declarator_listR()
  {
    return init_declarator_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_listR_Init_declarator()
  {
    return (EReference)init_declarator_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_listR_Rec()
  {
    return (EReference)init_declarator_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclaration_specifiers()
  {
    return declaration_specifiersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdeclaration_specifiers_Storage_class_specifier()
  {
    return (EAttribute)declaration_specifiersEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_specifiers_R1()
  {
    return (EReference)declaration_specifiersEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdeclaration_specifiers_Type_qualifier()
  {
    return (EAttribute)declaration_specifiersEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_specifiers_R2()
  {
    return (EReference)declaration_specifiersEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getselection_statement()
  {
    return selection_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getselection_statement_Expression()
  {
    return (EReference)selection_statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getselection_statement_Statement()
  {
    return (EReference)selection_statementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexpression_statement()
  {
    return expression_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexpression()
  {
    return expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexpression_Assignment_expression()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexpression_ExpressionR()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexpressionR()
  {
    return expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexpressionR_Assignment_expression()
  {
    return (EReference)expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexpressionR_Rec()
  {
    return (EReference)expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getconditional_expression()
  {
    return conditional_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getconditional_expression_Logical_or_expression()
  {
    return (EReference)conditional_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getconditional_expression_Expression()
  {
    return (EReference)conditional_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlogical_or_expression()
  {
    return logical_or_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlogical_or_expression_Logical_and_expression()
  {
    return (EReference)logical_or_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlogical_or_expression_Logical_or_expressionR()
  {
    return (EReference)logical_or_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlogical_or_expressionR()
  {
    return logical_or_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlogical_or_expressionR_Logical_and_expression()
  {
    return (EReference)logical_or_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlogical_or_expressionR_Rec()
  {
    return (EReference)logical_or_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlogical_and_expression()
  {
    return logical_and_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlogical_and_expression_Inclusive_or_expression()
  {
    return (EReference)logical_and_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlogical_and_expression_Logical_and_expressionR()
  {
    return (EReference)logical_and_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlogical_and_expressionR()
  {
    return logical_and_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlogical_and_expressionR_Inclusive_or_expression()
  {
    return (EReference)logical_and_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlogical_and_expressionR_Rec()
  {
    return (EReference)logical_and_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinclusive_or_expression()
  {
    return inclusive_or_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinclusive_or_expression_Exclusive_or_expression()
  {
    return (EReference)inclusive_or_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinclusive_or_expression_Inclusive_or_expressionR()
  {
    return (EReference)inclusive_or_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinclusive_or_expressionR()
  {
    return inclusive_or_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinclusive_or_expressionR_Exclusive_or_expression()
  {
    return (EReference)inclusive_or_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinclusive_or_expressionR_Rec()
  {
    return (EReference)inclusive_or_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexclusive_or_expression()
  {
    return exclusive_or_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexclusive_or_expression_And_expression()
  {
    return (EReference)exclusive_or_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexclusive_or_expression_Exclusive_or_expressionR()
  {
    return (EReference)exclusive_or_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexclusive_or_expressionR()
  {
    return exclusive_or_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexclusive_or_expressionR_And_expression()
  {
    return (EReference)exclusive_or_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexclusive_or_expressionR_Rec()
  {
    return (EReference)exclusive_or_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getand_expressionR()
  {
    return and_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getand_expressionR_Equality_expression()
  {
    return (EReference)and_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getand_expressionR_Rec()
  {
    return (EReference)and_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getand_expression()
  {
    return and_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getand_expression_Equality_expression()
  {
    return (EReference)and_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getand_expression_And_expressionR()
  {
    return (EReference)and_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getequality_expression()
  {
    return equality_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getequality_expression_Relational_expression()
  {
    return (EReference)equality_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getequality_expression_Equality_expressionR()
  {
    return (EReference)equality_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getequality_expressionR()
  {
    return equality_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getequality_expressionR_Relational_expression()
  {
    return (EReference)equality_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getequality_expressionR_Rec()
  {
    return (EReference)equality_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getrelational_expression()
  {
    return relational_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getrelational_expression_Shift_expression()
  {
    return (EReference)relational_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getrelational_expression_Re()
  {
    return (EReference)relational_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getrelational_expressionR()
  {
    return relational_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getrelational_expressionR_Shift_expression()
  {
    return (EReference)relational_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getrelational_expressionR_Rec()
  {
    return (EReference)relational_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getshift_expression()
  {
    return shift_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getshift_expressionR()
  {
    return shift_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getshift_expressionR_Additive_expression()
  {
    return (EReference)shift_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getshift_expressionR_Rec()
  {
    return (EReference)shift_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getadditive_expression()
  {
    return additive_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getadditive_expression_Shift_expressionR()
  {
    return (EReference)additive_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getadditive_expression_Multiplicative_expression()
  {
    return (EReference)additive_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getadditive_expression_Additive_expressionR()
  {
    return (EReference)additive_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getadditive_expressionR()
  {
    return additive_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getadditive_expressionR_Multiplicative_expression()
  {
    return (EReference)additive_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getadditive_expressionR_Rec()
  {
    return (EReference)additive_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getmultiplicative_expressionR()
  {
    return multiplicative_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getmultiplicative_expressionR_Cast_expression()
  {
    return (EReference)multiplicative_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getmultiplicative_expressionR_Rec()
  {
    return (EReference)multiplicative_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getmultiplicative_expression()
  {
    return multiplicative_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getmultiplicative_expression_Cast_expression()
  {
    return (EReference)multiplicative_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getmultiplicative_expression_Multiplicative_expressionR()
  {
    return (EReference)multiplicative_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getassignment_expression()
  {
    return assignment_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getassignment_expression_Unary_expression()
  {
    return (EReference)assignment_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_expression_Assignment_operator()
  {
    return (EAttribute)assignment_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getassignment_expression_Rec()
  {
    return (EReference)assignment_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcast_expression()
  {
    return cast_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcast_expression_Type_name()
  {
    return (EReference)cast_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcast_expression_Rec()
  {
    return (EReference)cast_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getunary_expression()
  {
    return unary_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getunary_expression_Unary_operator()
  {
    return (EAttribute)unary_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getunary_expression_Ce()
  {
    return (EReference)unary_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getpostfix_expression()
  {
    return postfix_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expression_Primary_expression()
  {
    return (EReference)postfix_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expression_Postfix_expressionR()
  {
    return (EReference)postfix_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expression_Initializer_list()
  {
    return (EReference)postfix_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinitializer()
  {
    return initializerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinitializer_list()
  {
    return initializer_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list_Designation()
  {
    return (EReference)initializer_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list_Initializer()
  {
    return (EReference)initializer_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list_Il()
  {
    return (EReference)initializer_listEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list_Ilr()
  {
    return (EReference)initializer_listEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinitializer_listR()
  {
    return initializer_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_listR_Designation()
  {
    return (EReference)initializer_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_listR_Initializer()
  {
    return (EReference)initializer_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_listR_Rec()
  {
    return (EReference)initializer_listREClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdesignation()
  {
    return designationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdesignator_list()
  {
    return designator_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignator_list_Designator()
  {
    return (EReference)designator_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignator_list_DesignatorR()
  {
    return (EReference)designator_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdesignator_listR()
  {
    return designator_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignator_listR_Designator()
  {
    return (EReference)designator_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignator_listR_Rec()
  {
    return (EReference)designator_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdesignator()
  {
    return designatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getconstant_expression()
  {
    return constant_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettype_name()
  {
    return type_nameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_name_Specifier_qualifier_list()
  {
    return (EReference)type_nameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_name_Ad()
  {
    return (EReference)type_nameEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getspecifier_qualifier_list()
  {
    return specifier_qualifier_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getspecifier_qualifier_list_Type_specifier()
  {
    return (EReference)specifier_qualifier_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getspecifier_qualifier_list_Rec()
  {
    return (EReference)specifier_qualifier_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declarator_list()
  {
    return struct_declarator_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_list_Struct_declarator()
  {
    return (EReference)struct_declarator_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_list_Struct_declarator_listR()
  {
    return (EReference)struct_declarator_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declaration_list()
  {
    return struct_declaration_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_list_Struct_declaration()
  {
    return (EReference)struct_declaration_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_list_Struct_declaration_listR()
  {
    return (EReference)struct_declaration_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declaration_listR()
  {
    return struct_declaration_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_listR_Struct_declaration()
  {
    return (EReference)struct_declaration_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_listR_Rec()
  {
    return (EReference)struct_declaration_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declaration()
  {
    return struct_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_Specifier_qualifier_listx()
  {
    return (EReference)struct_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_Struct_declarator_list()
  {
    return (EReference)struct_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declarator_listR()
  {
    return struct_declarator_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_listR_Struct_declarator()
  {
    return (EReference)struct_declarator_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_listR_Rec()
  {
    return (EReference)struct_declarator_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declarator()
  {
    return struct_declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_Declaratorx()
  {
    return (EReference)struct_declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_Constant_expression1()
  {
    return (EReference)struct_declaratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstatic_assert_declaration()
  {
    return static_assert_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_or_union_specifier()
  {
    return struct_or_union_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstruct_or_union_specifier_Struct_or_union()
  {
    return (EAttribute)struct_or_union_specifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_or_union_specifier_Struct_declaration_list()
  {
    return (EReference)struct_or_union_specifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_or_union_specifier_Id()
  {
    return (EReference)struct_or_union_specifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getatomic_type_specifier()
  {
    return atomic_type_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getpostfix_expressionR()
  {
    return postfix_expressionREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expressionR_Expression()
  {
    return (EReference)postfix_expressionREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expressionR_Rec()
  {
    return (EReference)postfix_expressionREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expressionR_Argument_expression_list()
  {
    return (EReference)postfix_expressionREClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getargument_expression_list()
  {
    return argument_expression_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getargument_expression_list_Assignment_expression()
  {
    return (EReference)argument_expression_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getargument_expression_list_Argument_expression_listR()
  {
    return (EReference)argument_expression_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getargument_expression_listR()
  {
    return argument_expression_listREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getargument_expression_listR_Assignment_expression()
  {
    return (EReference)argument_expression_listREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getargument_expression_listR_Rec()
  {
    return (EReference)argument_expression_listREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getprimary_expression()
  {
    return primary_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getpointer()
  {
    return pointerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpointer_Type_qualifier_list()
  {
    return (EReference)pointerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpointer_Rec()
  {
    return (EReference)pointerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIDENTIFIER()
  {
    return identifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIDENTIFIER_Dr()
  {
    return (EReference)identifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIDENTIFIER_Il()
  {
    return (EReference)identifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIDENTIFIER_A()
  {
    return (EReference)identifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getIDENTIFIER_Name()
  {
    return (EAttribute)identifierEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettype_specifier()
  {
    return type_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_specifier_Ds()
  {
    return (EReference)type_specifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStringC()
  {
    return stringCEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStringC_String()
  {
    return (EAttribute)stringCEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactory getMyDslFactory()
  {
    return (MyDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__GREETINGS);

    translation_unitEClass = createEClass(TRANSLATION_UNIT);
    createEReference(translation_unitEClass, TRANSLATION_UNIT__EXTERNAL_DECLARATION);
    createEReference(translation_unitEClass, TRANSLATION_UNIT__TRANSLATION_UNIT_R);

    translation_unitREClass = createEClass(TRANSLATION_UNIT_R);
    createEReference(translation_unitREClass, TRANSLATION_UNIT_R__EXTERNAL_DECLARATION);
    createEReference(translation_unitREClass, TRANSLATION_UNIT_R__REC);

    external_declarationEClass = createEClass(EXTERNAL_DECLARATION);
    createEReference(external_declarationEClass, EXTERNAL_DECLARATION__DECLARATION_SPECIFIERS);

    function_definitionEClass = createEClass(FUNCTION_DEFINITION);
    createEReference(function_definitionEClass, FUNCTION_DEFINITION__DECLARATOR);
    createEReference(function_definitionEClass, FUNCTION_DEFINITION__DECLARATION_LIST);
    createEReference(function_definitionEClass, FUNCTION_DEFINITION__COMPOUND_STATEMENT);

    declaratorEClass = createEClass(DECLARATOR);
    createEReference(declaratorEClass, DECLARATOR__POINTER);
    createEReference(declaratorEClass, DECLARATOR__DD);

    type_qualifier_listEClass = createEClass(TYPE_QUALIFIER_LIST);
    createEAttribute(type_qualifier_listEClass, TYPE_QUALIFIER_LIST__TYPE_QUALIFIER);
    createEReference(type_qualifier_listEClass, TYPE_QUALIFIER_LIST__TYPE_QUALIFIER_LIST_R);

    type_qualifier_listREClass = createEClass(TYPE_QUALIFIER_LIST_R);
    createEAttribute(type_qualifier_listREClass, TYPE_QUALIFIER_LIST_R__TYPE_QUALIFIER);
    createEReference(type_qualifier_listREClass, TYPE_QUALIFIER_LIST_R__REC);

    direct_declaratorEClass = createEClass(DIRECT_DECLARATOR);
    createEReference(direct_declaratorEClass, DIRECT_DECLARATOR__DIRECT_DECLARATOR_R);

    direct_declaratorREClass = createEClass(DIRECT_DECLARATOR_R);
    createEReference(direct_declaratorREClass, DIRECT_DECLARATOR_R__REC);
    createEReference(direct_declaratorREClass, DIRECT_DECLARATOR_R__TYPE_QUALIFIER_LIST);
    createEReference(direct_declaratorREClass, DIRECT_DECLARATOR_R__ASSIGNMENT_EXPRESSION);
    createEReference(direct_declaratorREClass, DIRECT_DECLARATOR_R__PARAMETER_TYPE_LIST);
    createEReference(direct_declaratorREClass, DIRECT_DECLARATOR_R__IDENTIFIER_LIST);

    parameter_type_listEClass = createEClass(PARAMETER_TYPE_LIST);

    identifier_listEClass = createEClass(IDENTIFIER_LIST);

    identifier_listREClass = createEClass(IDENTIFIER_LIST_R);

    parameter_listEClass = createEClass(PARAMETER_LIST);
    createEReference(parameter_listEClass, PARAMETER_LIST__PARAMETER_DECLARATION);
    createEReference(parameter_listEClass, PARAMETER_LIST__PARAMETER_LIST_R);

    parameter_listREClass = createEClass(PARAMETER_LIST_R);
    createEReference(parameter_listREClass, PARAMETER_LIST_R__PARAMETER_DECLARATION);
    createEReference(parameter_listREClass, PARAMETER_LIST_R__REC);

    parameter_declarationEClass = createEClass(PARAMETER_DECLARATION);
    createEReference(parameter_declarationEClass, PARAMETER_DECLARATION__DECLARATION_SPECIFIERS2);
    createEReference(parameter_declarationEClass, PARAMETER_DECLARATION__DECLARATOR1);
    createEReference(parameter_declarationEClass, PARAMETER_DECLARATION__DECLARATION_SPECIFIERS1);
    createEReference(parameter_declarationEClass, PARAMETER_DECLARATION__ABSTRACT_DECLARATOR);

    abstract_declaratorEClass = createEClass(ABSTRACT_DECLARATOR);

    declaration_listEClass = createEClass(DECLARATION_LIST);
    createEReference(declaration_listEClass, DECLARATION_LIST__DECLARATION);
    createEReference(declaration_listEClass, DECLARATION_LIST__DECLARATION_LIST_R);

    declaration_listREClass = createEClass(DECLARATION_LIST_R);
    createEReference(declaration_listREClass, DECLARATION_LIST_R__DECLARATION);
    createEReference(declaration_listREClass, DECLARATION_LIST_R__REC);

    compound_statementEClass = createEClass(COMPOUND_STATEMENT);

    block_item_listEClass = createEClass(BLOCK_ITEM_LIST);
    createEReference(block_item_listEClass, BLOCK_ITEM_LIST__BLOCK_ITEM);
    createEReference(block_item_listEClass, BLOCK_ITEM_LIST__BLOCK_ITEM_LIST_R);

    block_item_listREClass = createEClass(BLOCK_ITEM_LIST_R);
    createEReference(block_item_listREClass, BLOCK_ITEM_LIST_R__BLOCK_ITEM);
    createEReference(block_item_listREClass, BLOCK_ITEM_LIST_R__REC);

    block_itemEClass = createEClass(BLOCK_ITEM);

    statementEClass = createEClass(STATEMENT);

    jump_statementEClass = createEClass(JUMP_STATEMENT);

    labeled_statementEClass = createEClass(LABELED_STATEMENT);
    createEReference(labeled_statementEClass, LABELED_STATEMENT__CONSTANT_EXPRESSION);
    createEReference(labeled_statementEClass, LABELED_STATEMENT__STATEMENT);
    createEReference(labeled_statementEClass, LABELED_STATEMENT__B);

    iteration_statementEClass = createEClass(ITERATION_STATEMENT);
    createEReference(iteration_statementEClass, ITERATION_STATEMENT__EXPRESSION);
    createEReference(iteration_statementEClass, ITERATION_STATEMENT__STATEMENT);
    createEReference(iteration_statementEClass, ITERATION_STATEMENT__EXPRESSION_STATEMENT);
    createEReference(iteration_statementEClass, ITERATION_STATEMENT__DECLARATION);

    declarationEClass = createEClass(DECLARATION);
    createEReference(declarationEClass, DECLARATION__INIT_DECLARATOR_LIST);

    init_declarator_listEClass = createEClass(INIT_DECLARATOR_LIST);
    createEReference(init_declarator_listEClass, INIT_DECLARATOR_LIST__INIT_DECLARATOR);
    createEReference(init_declarator_listEClass, INIT_DECLARATOR_LIST__INIT_DECLARATOR_LIST_R);

    init_declaratorEClass = createEClass(INIT_DECLARATOR);
    createEReference(init_declaratorEClass, INIT_DECLARATOR__DECLARATOR);
    createEReference(init_declaratorEClass, INIT_DECLARATOR__INITIALIZER);

    init_declarator_listREClass = createEClass(INIT_DECLARATOR_LIST_R);
    createEReference(init_declarator_listREClass, INIT_DECLARATOR_LIST_R__INIT_DECLARATOR);
    createEReference(init_declarator_listREClass, INIT_DECLARATOR_LIST_R__REC);

    declaration_specifiersEClass = createEClass(DECLARATION_SPECIFIERS);
    createEAttribute(declaration_specifiersEClass, DECLARATION_SPECIFIERS__STORAGE_CLASS_SPECIFIER);
    createEReference(declaration_specifiersEClass, DECLARATION_SPECIFIERS__R1);
    createEAttribute(declaration_specifiersEClass, DECLARATION_SPECIFIERS__TYPE_QUALIFIER);
    createEReference(declaration_specifiersEClass, DECLARATION_SPECIFIERS__R2);

    selection_statementEClass = createEClass(SELECTION_STATEMENT);
    createEReference(selection_statementEClass, SELECTION_STATEMENT__EXPRESSION);
    createEReference(selection_statementEClass, SELECTION_STATEMENT__STATEMENT);

    expression_statementEClass = createEClass(EXPRESSION_STATEMENT);

    expressionEClass = createEClass(EXPRESSION);
    createEReference(expressionEClass, EXPRESSION__ASSIGNMENT_EXPRESSION);
    createEReference(expressionEClass, EXPRESSION__EXPRESSION_R);

    expressionREClass = createEClass(EXPRESSION_R);
    createEReference(expressionREClass, EXPRESSION_R__ASSIGNMENT_EXPRESSION);
    createEReference(expressionREClass, EXPRESSION_R__REC);

    conditional_expressionEClass = createEClass(CONDITIONAL_EXPRESSION);
    createEReference(conditional_expressionEClass, CONDITIONAL_EXPRESSION__LOGICAL_OR_EXPRESSION);
    createEReference(conditional_expressionEClass, CONDITIONAL_EXPRESSION__EXPRESSION);

    logical_or_expressionEClass = createEClass(LOGICAL_OR_EXPRESSION);
    createEReference(logical_or_expressionEClass, LOGICAL_OR_EXPRESSION__LOGICAL_AND_EXPRESSION);
    createEReference(logical_or_expressionEClass, LOGICAL_OR_EXPRESSION__LOGICAL_OR_EXPRESSION_R);

    logical_or_expressionREClass = createEClass(LOGICAL_OR_EXPRESSION_R);
    createEReference(logical_or_expressionREClass, LOGICAL_OR_EXPRESSION_R__LOGICAL_AND_EXPRESSION);
    createEReference(logical_or_expressionREClass, LOGICAL_OR_EXPRESSION_R__REC);

    logical_and_expressionEClass = createEClass(LOGICAL_AND_EXPRESSION);
    createEReference(logical_and_expressionEClass, LOGICAL_AND_EXPRESSION__INCLUSIVE_OR_EXPRESSION);
    createEReference(logical_and_expressionEClass, LOGICAL_AND_EXPRESSION__LOGICAL_AND_EXPRESSION_R);

    logical_and_expressionREClass = createEClass(LOGICAL_AND_EXPRESSION_R);
    createEReference(logical_and_expressionREClass, LOGICAL_AND_EXPRESSION_R__INCLUSIVE_OR_EXPRESSION);
    createEReference(logical_and_expressionREClass, LOGICAL_AND_EXPRESSION_R__REC);

    inclusive_or_expressionEClass = createEClass(INCLUSIVE_OR_EXPRESSION);
    createEReference(inclusive_or_expressionEClass, INCLUSIVE_OR_EXPRESSION__EXCLUSIVE_OR_EXPRESSION);
    createEReference(inclusive_or_expressionEClass, INCLUSIVE_OR_EXPRESSION__INCLUSIVE_OR_EXPRESSION_R);

    inclusive_or_expressionREClass = createEClass(INCLUSIVE_OR_EXPRESSION_R);
    createEReference(inclusive_or_expressionREClass, INCLUSIVE_OR_EXPRESSION_R__EXCLUSIVE_OR_EXPRESSION);
    createEReference(inclusive_or_expressionREClass, INCLUSIVE_OR_EXPRESSION_R__REC);

    exclusive_or_expressionEClass = createEClass(EXCLUSIVE_OR_EXPRESSION);
    createEReference(exclusive_or_expressionEClass, EXCLUSIVE_OR_EXPRESSION__AND_EXPRESSION);
    createEReference(exclusive_or_expressionEClass, EXCLUSIVE_OR_EXPRESSION__EXCLUSIVE_OR_EXPRESSION_R);

    exclusive_or_expressionREClass = createEClass(EXCLUSIVE_OR_EXPRESSION_R);
    createEReference(exclusive_or_expressionREClass, EXCLUSIVE_OR_EXPRESSION_R__AND_EXPRESSION);
    createEReference(exclusive_or_expressionREClass, EXCLUSIVE_OR_EXPRESSION_R__REC);

    and_expressionREClass = createEClass(AND_EXPRESSION_R);
    createEReference(and_expressionREClass, AND_EXPRESSION_R__EQUALITY_EXPRESSION);
    createEReference(and_expressionREClass, AND_EXPRESSION_R__REC);

    and_expressionEClass = createEClass(AND_EXPRESSION);
    createEReference(and_expressionEClass, AND_EXPRESSION__EQUALITY_EXPRESSION);
    createEReference(and_expressionEClass, AND_EXPRESSION__AND_EXPRESSION_R);

    equality_expressionEClass = createEClass(EQUALITY_EXPRESSION);
    createEReference(equality_expressionEClass, EQUALITY_EXPRESSION__RELATIONAL_EXPRESSION);
    createEReference(equality_expressionEClass, EQUALITY_EXPRESSION__EQUALITY_EXPRESSION_R);

    equality_expressionREClass = createEClass(EQUALITY_EXPRESSION_R);
    createEReference(equality_expressionREClass, EQUALITY_EXPRESSION_R__RELATIONAL_EXPRESSION);
    createEReference(equality_expressionREClass, EQUALITY_EXPRESSION_R__REC);

    relational_expressionEClass = createEClass(RELATIONAL_EXPRESSION);
    createEReference(relational_expressionEClass, RELATIONAL_EXPRESSION__SHIFT_EXPRESSION);
    createEReference(relational_expressionEClass, RELATIONAL_EXPRESSION__RE);

    relational_expressionREClass = createEClass(RELATIONAL_EXPRESSION_R);
    createEReference(relational_expressionREClass, RELATIONAL_EXPRESSION_R__SHIFT_EXPRESSION);
    createEReference(relational_expressionREClass, RELATIONAL_EXPRESSION_R__REC);

    shift_expressionEClass = createEClass(SHIFT_EXPRESSION);

    shift_expressionREClass = createEClass(SHIFT_EXPRESSION_R);
    createEReference(shift_expressionREClass, SHIFT_EXPRESSION_R__ADDITIVE_EXPRESSION);
    createEReference(shift_expressionREClass, SHIFT_EXPRESSION_R__REC);

    additive_expressionEClass = createEClass(ADDITIVE_EXPRESSION);
    createEReference(additive_expressionEClass, ADDITIVE_EXPRESSION__SHIFT_EXPRESSION_R);
    createEReference(additive_expressionEClass, ADDITIVE_EXPRESSION__MULTIPLICATIVE_EXPRESSION);
    createEReference(additive_expressionEClass, ADDITIVE_EXPRESSION__ADDITIVE_EXPRESSION_R);

    additive_expressionREClass = createEClass(ADDITIVE_EXPRESSION_R);
    createEReference(additive_expressionREClass, ADDITIVE_EXPRESSION_R__MULTIPLICATIVE_EXPRESSION);
    createEReference(additive_expressionREClass, ADDITIVE_EXPRESSION_R__REC);

    multiplicative_expressionREClass = createEClass(MULTIPLICATIVE_EXPRESSION_R);
    createEReference(multiplicative_expressionREClass, MULTIPLICATIVE_EXPRESSION_R__CAST_EXPRESSION);
    createEReference(multiplicative_expressionREClass, MULTIPLICATIVE_EXPRESSION_R__REC);

    multiplicative_expressionEClass = createEClass(MULTIPLICATIVE_EXPRESSION);
    createEReference(multiplicative_expressionEClass, MULTIPLICATIVE_EXPRESSION__CAST_EXPRESSION);
    createEReference(multiplicative_expressionEClass, MULTIPLICATIVE_EXPRESSION__MULTIPLICATIVE_EXPRESSION_R);

    assignment_expressionEClass = createEClass(ASSIGNMENT_EXPRESSION);
    createEReference(assignment_expressionEClass, ASSIGNMENT_EXPRESSION__UNARY_EXPRESSION);
    createEAttribute(assignment_expressionEClass, ASSIGNMENT_EXPRESSION__ASSIGNMENT_OPERATOR);
    createEReference(assignment_expressionEClass, ASSIGNMENT_EXPRESSION__REC);

    cast_expressionEClass = createEClass(CAST_EXPRESSION);
    createEReference(cast_expressionEClass, CAST_EXPRESSION__TYPE_NAME);
    createEReference(cast_expressionEClass, CAST_EXPRESSION__REC);

    unary_expressionEClass = createEClass(UNARY_EXPRESSION);
    createEAttribute(unary_expressionEClass, UNARY_EXPRESSION__UNARY_OPERATOR);
    createEReference(unary_expressionEClass, UNARY_EXPRESSION__CE);

    postfix_expressionEClass = createEClass(POSTFIX_EXPRESSION);
    createEReference(postfix_expressionEClass, POSTFIX_EXPRESSION__PRIMARY_EXPRESSION);
    createEReference(postfix_expressionEClass, POSTFIX_EXPRESSION__POSTFIX_EXPRESSION_R);
    createEReference(postfix_expressionEClass, POSTFIX_EXPRESSION__INITIALIZER_LIST);

    initializerEClass = createEClass(INITIALIZER);

    initializer_listEClass = createEClass(INITIALIZER_LIST);
    createEReference(initializer_listEClass, INITIALIZER_LIST__DESIGNATION);
    createEReference(initializer_listEClass, INITIALIZER_LIST__INITIALIZER);
    createEReference(initializer_listEClass, INITIALIZER_LIST__IL);
    createEReference(initializer_listEClass, INITIALIZER_LIST__ILR);

    initializer_listREClass = createEClass(INITIALIZER_LIST_R);
    createEReference(initializer_listREClass, INITIALIZER_LIST_R__DESIGNATION);
    createEReference(initializer_listREClass, INITIALIZER_LIST_R__INITIALIZER);
    createEReference(initializer_listREClass, INITIALIZER_LIST_R__REC);

    designationEClass = createEClass(DESIGNATION);

    designator_listEClass = createEClass(DESIGNATOR_LIST);
    createEReference(designator_listEClass, DESIGNATOR_LIST__DESIGNATOR);
    createEReference(designator_listEClass, DESIGNATOR_LIST__DESIGNATOR_R);

    designator_listREClass = createEClass(DESIGNATOR_LIST_R);
    createEReference(designator_listREClass, DESIGNATOR_LIST_R__DESIGNATOR);
    createEReference(designator_listREClass, DESIGNATOR_LIST_R__REC);

    designatorEClass = createEClass(DESIGNATOR);

    constant_expressionEClass = createEClass(CONSTANT_EXPRESSION);

    type_nameEClass = createEClass(TYPE_NAME);
    createEReference(type_nameEClass, TYPE_NAME__SPECIFIER_QUALIFIER_LIST);
    createEReference(type_nameEClass, TYPE_NAME__AD);

    specifier_qualifier_listEClass = createEClass(SPECIFIER_QUALIFIER_LIST);
    createEReference(specifier_qualifier_listEClass, SPECIFIER_QUALIFIER_LIST__TYPE_SPECIFIER);
    createEReference(specifier_qualifier_listEClass, SPECIFIER_QUALIFIER_LIST__REC);

    struct_declarator_listEClass = createEClass(STRUCT_DECLARATOR_LIST);
    createEReference(struct_declarator_listEClass, STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR);
    createEReference(struct_declarator_listEClass, STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R);

    struct_declaration_listEClass = createEClass(STRUCT_DECLARATION_LIST);
    createEReference(struct_declaration_listEClass, STRUCT_DECLARATION_LIST__STRUCT_DECLARATION);
    createEReference(struct_declaration_listEClass, STRUCT_DECLARATION_LIST__STRUCT_DECLARATION_LIST_R);

    struct_declaration_listREClass = createEClass(STRUCT_DECLARATION_LIST_R);
    createEReference(struct_declaration_listREClass, STRUCT_DECLARATION_LIST_R__STRUCT_DECLARATION);
    createEReference(struct_declaration_listREClass, STRUCT_DECLARATION_LIST_R__REC);

    struct_declarationEClass = createEClass(STRUCT_DECLARATION);
    createEReference(struct_declarationEClass, STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LISTX);
    createEReference(struct_declarationEClass, STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST);

    struct_declarator_listREClass = createEClass(STRUCT_DECLARATOR_LIST_R);
    createEReference(struct_declarator_listREClass, STRUCT_DECLARATOR_LIST_R__STRUCT_DECLARATOR);
    createEReference(struct_declarator_listREClass, STRUCT_DECLARATOR_LIST_R__REC);

    struct_declaratorEClass = createEClass(STRUCT_DECLARATOR);
    createEReference(struct_declaratorEClass, STRUCT_DECLARATOR__DECLARATORX);
    createEReference(struct_declaratorEClass, STRUCT_DECLARATOR__CONSTANT_EXPRESSION1);

    static_assert_declarationEClass = createEClass(STATIC_ASSERT_DECLARATION);

    struct_or_union_specifierEClass = createEClass(STRUCT_OR_UNION_SPECIFIER);
    createEAttribute(struct_or_union_specifierEClass, STRUCT_OR_UNION_SPECIFIER__STRUCT_OR_UNION);
    createEReference(struct_or_union_specifierEClass, STRUCT_OR_UNION_SPECIFIER__STRUCT_DECLARATION_LIST);
    createEReference(struct_or_union_specifierEClass, STRUCT_OR_UNION_SPECIFIER__ID);

    atomic_type_specifierEClass = createEClass(ATOMIC_TYPE_SPECIFIER);

    postfix_expressionREClass = createEClass(POSTFIX_EXPRESSION_R);
    createEReference(postfix_expressionREClass, POSTFIX_EXPRESSION_R__EXPRESSION);
    createEReference(postfix_expressionREClass, POSTFIX_EXPRESSION_R__REC);
    createEReference(postfix_expressionREClass, POSTFIX_EXPRESSION_R__ARGUMENT_EXPRESSION_LIST);

    argument_expression_listEClass = createEClass(ARGUMENT_EXPRESSION_LIST);
    createEReference(argument_expression_listEClass, ARGUMENT_EXPRESSION_LIST__ASSIGNMENT_EXPRESSION);
    createEReference(argument_expression_listEClass, ARGUMENT_EXPRESSION_LIST__ARGUMENT_EXPRESSION_LIST_R);

    argument_expression_listREClass = createEClass(ARGUMENT_EXPRESSION_LIST_R);
    createEReference(argument_expression_listREClass, ARGUMENT_EXPRESSION_LIST_R__ASSIGNMENT_EXPRESSION);
    createEReference(argument_expression_listREClass, ARGUMENT_EXPRESSION_LIST_R__REC);

    primary_expressionEClass = createEClass(PRIMARY_EXPRESSION);

    pointerEClass = createEClass(POINTER);
    createEReference(pointerEClass, POINTER__TYPE_QUALIFIER_LIST);
    createEReference(pointerEClass, POINTER__REC);

    identifierEClass = createEClass(IDENTIFIER);
    createEReference(identifierEClass, IDENTIFIER__DR);
    createEReference(identifierEClass, IDENTIFIER__IL);
    createEReference(identifierEClass, IDENTIFIER__A);
    createEAttribute(identifierEClass, IDENTIFIER__NAME);

    type_specifierEClass = createEClass(TYPE_SPECIFIER);
    createEReference(type_specifierEClass, TYPE_SPECIFIER__DS);

    stringCEClass = createEClass(STRING_C);
    createEAttribute(stringCEClass, STRING_C__STRING);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    function_definitionEClass.getESuperTypes().add(this.getexternal_declaration());
    declaratorEClass.getESuperTypes().add(this.getinit_declarator());
    declaratorEClass.getESuperTypes().add(this.getstruct_declarator());
    type_qualifier_listEClass.getESuperTypes().add(this.getpointer());
    direct_declaratorEClass.getESuperTypes().add(this.getdeclarator());
    parameter_listEClass.getESuperTypes().add(this.getparameter_type_list());
    compound_statementEClass.getESuperTypes().add(this.getstatement());
    block_item_listEClass.getESuperTypes().add(this.getcompound_statement());
    statementEClass.getESuperTypes().add(this.getblock_item());
    jump_statementEClass.getESuperTypes().add(this.getstatement());
    labeled_statementEClass.getESuperTypes().add(this.getstatement());
    iteration_statementEClass.getESuperTypes().add(this.getstatement());
    declarationEClass.getESuperTypes().add(this.getexternal_declaration());
    declarationEClass.getESuperTypes().add(this.getblock_item());
    declaration_specifiersEClass.getESuperTypes().add(this.getparameter_declaration());
    selection_statementEClass.getESuperTypes().add(this.getstatement());
    expression_statementEClass.getESuperTypes().add(this.getstatement());
    expressionEClass.getESuperTypes().add(this.getjump_statement());
    expressionEClass.getESuperTypes().add(this.getexpression_statement());
    expressionEClass.getESuperTypes().add(this.getprimary_expression());
    conditional_expressionEClass.getESuperTypes().add(this.getassignment_expression());
    conditional_expressionEClass.getESuperTypes().add(this.getconstant_expression());
    logical_or_expressionEClass.getESuperTypes().add(this.getconditional_expression());
    additive_expressionEClass.getESuperTypes().add(this.getshift_expression());
    assignment_expressionEClass.getESuperTypes().add(this.getinitializer());
    unary_expressionEClass.getESuperTypes().add(this.getcast_expression());
    postfix_expressionEClass.getESuperTypes().add(this.getunary_expression());
    initializer_listEClass.getESuperTypes().add(this.getinitializer());
    designator_listEClass.getESuperTypes().add(this.getdesignation());
    constant_expressionEClass.getESuperTypes().add(this.getdesignator());
    constant_expressionEClass.getESuperTypes().add(this.getstruct_declarator());
    constant_expressionEClass.getESuperTypes().add(this.getstatic_assert_declaration());
    type_nameEClass.getESuperTypes().add(this.getatomic_type_specifier());
    specifier_qualifier_listEClass.getESuperTypes().add(this.gettype_name());
    specifier_qualifier_listEClass.getESuperTypes().add(this.getstruct_declaration());
    static_assert_declarationEClass.getESuperTypes().add(this.getdeclaration());
    static_assert_declarationEClass.getESuperTypes().add(this.getstruct_declaration());
    struct_or_union_specifierEClass.getESuperTypes().add(this.gettype_specifier());
    atomic_type_specifierEClass.getESuperTypes().add(this.gettype_specifier());
    pointerEClass.getESuperTypes().add(this.getabstract_declarator());
    identifierEClass.getESuperTypes().add(this.getdirect_declarator());
    identifierEClass.getESuperTypes().add(this.getidentifier_list());
    identifierEClass.getESuperTypes().add(this.getidentifier_listR());
    identifierEClass.getESuperTypes().add(this.getjump_statement());
    identifierEClass.getESuperTypes().add(this.getlabeled_statement());
    identifierEClass.getESuperTypes().add(this.getdesignator());
    identifierEClass.getESuperTypes().add(this.getstruct_or_union_specifier());
    identifierEClass.getESuperTypes().add(this.getpostfix_expressionR());
    identifierEClass.getESuperTypes().add(this.getprimary_expression());
    type_specifierEClass.getESuperTypes().add(this.getdeclaration_specifiers());
    stringCEClass.getESuperTypes().add(this.getprimary_expression());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Greetings(), this.gettranslation_unit(), null, "greetings", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(translation_unitEClass, translation_unit.class, "translation_unit", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettranslation_unit_External_declaration(), this.getexternal_declaration(), null, "External_declaration", null, 0, 1, translation_unit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettranslation_unit_Translation_unitR(), this.gettranslation_unitR(), null, "Translation_unitR", null, 0, 1, translation_unit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(translation_unitREClass, translation_unitR.class, "translation_unitR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettranslation_unitR_External_declaration(), this.getexternal_declaration(), null, "External_declaration", null, 0, 1, translation_unitR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettranslation_unitR_Rec(), this.gettranslation_unitR(), null, "rec", null, 0, -1, translation_unitR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(external_declarationEClass, external_declaration.class, "external_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getexternal_declaration_Declaration_specifiers(), this.getdeclaration_specifiers(), null, "Declaration_specifiers", null, 0, 1, external_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(function_definitionEClass, function_definition.class, "function_definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getfunction_definition_Declarator(), this.getdeclarator(), null, "Declarator", null, 0, 1, function_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfunction_definition_Declaration_list(), this.getdeclaration_list(), null, "Declaration_list", null, 0, 1, function_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfunction_definition_Compound_statement(), this.getcompound_statement(), null, "Compound_statement", null, 0, 1, function_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(declaratorEClass, declarator.class, "declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdeclarator_Pointer(), this.getpointer(), null, "Pointer", null, 0, 1, declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclarator_Dd(), this.getdirect_declarator(), null, "dd", null, 0, 1, declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(type_qualifier_listEClass, type_qualifier_list.class, "type_qualifier_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettype_qualifier_list_Type_qualifier(), ecorePackage.getEString(), "Type_qualifier", null, 0, 1, type_qualifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettype_qualifier_list_Type_qualifier_listR(), this.gettype_qualifier_listR(), null, "Type_qualifier_listR", null, 0, 1, type_qualifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(type_qualifier_listREClass, type_qualifier_listR.class, "type_qualifier_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettype_qualifier_listR_Type_qualifier(), ecorePackage.getEString(), "Type_qualifier", null, 0, 1, type_qualifier_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettype_qualifier_listR_Rec(), this.gettype_qualifier_listR(), null, "rec", null, 0, -1, type_qualifier_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(direct_declaratorEClass, direct_declarator.class, "direct_declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdirect_declarator_Direct_declaratorR(), this.getdirect_declaratorR(), null, "Direct_declaratorR", null, 0, 1, direct_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(direct_declaratorREClass, direct_declaratorR.class, "direct_declaratorR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdirect_declaratorR_Rec(), this.getdirect_declaratorR(), null, "rec", null, 0, -1, direct_declaratorR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declaratorR_Type_qualifier_list(), this.gettype_qualifier_list(), null, "Type_qualifier_list", null, 0, 1, direct_declaratorR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declaratorR_Assignment_expression(), this.getassignment_expression(), null, "Assignment_expression", null, 0, 1, direct_declaratorR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declaratorR_Parameter_type_list(), this.getparameter_type_list(), null, "Parameter_type_list", null, 0, 1, direct_declaratorR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declaratorR_Identifier_list(), this.getidentifier_list(), null, "Identifier_list", null, 0, 1, direct_declaratorR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameter_type_listEClass, parameter_type_list.class, "parameter_type_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(identifier_listEClass, identifier_list.class, "identifier_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(identifier_listREClass, identifier_listR.class, "identifier_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(parameter_listEClass, parameter_list.class, "parameter_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getparameter_list_Parameter_declaration(), this.getparameter_declaration(), null, "Parameter_declaration", null, 0, 1, parameter_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getparameter_list_Parameter_listR(), this.getparameter_listR(), null, "Parameter_listR", null, 0, 1, parameter_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameter_listREClass, parameter_listR.class, "parameter_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getparameter_listR_Parameter_declaration(), this.getparameter_declaration(), null, "Parameter_declaration", null, 0, 1, parameter_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getparameter_listR_Rec(), this.getparameter_listR(), null, "rec", null, 0, -1, parameter_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameter_declarationEClass, parameter_declaration.class, "parameter_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getparameter_declaration_Declaration_specifiers2(), this.getdeclaration_specifiers(), null, "Declaration_specifiers2", null, 0, 1, parameter_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getparameter_declaration_Declarator1(), this.getdeclarator(), null, "Declarator1", null, 0, 1, parameter_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getparameter_declaration_Declaration_specifiers1(), this.getdeclaration_specifiers(), null, "Declaration_specifiers1", null, 0, 1, parameter_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getparameter_declaration_Abstract_declarator(), this.getabstract_declarator(), null, "Abstract_declarator", null, 0, 1, parameter_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstract_declaratorEClass, abstract_declarator.class, "abstract_declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(declaration_listEClass, declaration_list.class, "declaration_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdeclaration_list_Declaration(), this.getdeclaration(), null, "Declaration", null, 0, 1, declaration_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_list_Declaration_listR(), this.getdeclaration_listR(), null, "Declaration_listR", null, 0, 1, declaration_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(declaration_listREClass, declaration_listR.class, "declaration_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdeclaration_listR_Declaration(), this.getdeclaration(), null, "Declaration", null, 0, 1, declaration_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_listR_Rec(), this.getdeclaration_listR(), null, "rec", null, 0, -1, declaration_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(compound_statementEClass, compound_statement.class, "compound_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(block_item_listEClass, block_item_list.class, "block_item_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getblock_item_list_Block_item(), this.getblock_item(), null, "Block_item", null, 0, 1, block_item_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getblock_item_list_Block_item_listR(), this.getblock_item_listR(), null, "Block_item_listR", null, 0, 1, block_item_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(block_item_listREClass, block_item_listR.class, "block_item_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getblock_item_listR_Block_item(), this.getblock_item(), null, "Block_item", null, 0, 1, block_item_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getblock_item_listR_Rec(), this.getblock_item_listR(), null, "rec", null, 0, -1, block_item_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(block_itemEClass, block_item.class, "block_item", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(statementEClass, statement.class, "statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(jump_statementEClass, jump_statement.class, "jump_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(labeled_statementEClass, labeled_statement.class, "labeled_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlabeled_statement_Constant_expression(), this.getconstant_expression(), null, "Constant_expression", null, 0, 1, labeled_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlabeled_statement_Statement(), this.getstatement(), null, "Statement", null, 0, 1, labeled_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlabeled_statement_B(), this.getstatement(), null, "b", null, 0, 1, labeled_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(iteration_statementEClass, iteration_statement.class, "iteration_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getiteration_statement_Expression(), this.getexpression(), null, "Expression", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getiteration_statement_Statement(), this.getstatement(), null, "Statement", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getiteration_statement_Expression_statement(), this.getexpression_statement(), null, "Expression_statement", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getiteration_statement_Declaration(), this.getdeclaration(), null, "Declaration", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(declarationEClass, declaration.class, "declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdeclaration_Init_declarator_list(), this.getinit_declarator_list(), null, "Init_declarator_list", null, 0, 1, declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(init_declarator_listEClass, init_declarator_list.class, "init_declarator_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinit_declarator_list_Init_declarator(), this.getinit_declarator(), null, "Init_declarator", null, 0, 1, init_declarator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinit_declarator_list_Init_declarator_listR(), this.getinit_declarator_listR(), null, "Init_declarator_listR", null, 0, 1, init_declarator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(init_declaratorEClass, init_declarator.class, "init_declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinit_declarator_Declarator(), this.getdeclarator(), null, "Declarator", null, 0, 1, init_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinit_declarator_Initializer(), this.getinitializer(), null, "Initializer", null, 0, 1, init_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(init_declarator_listREClass, init_declarator_listR.class, "init_declarator_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinit_declarator_listR_Init_declarator(), this.getinit_declarator(), null, "Init_declarator", null, 0, 1, init_declarator_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinit_declarator_listR_Rec(), this.getinit_declarator_listR(), null, "rec", null, 0, -1, init_declarator_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(declaration_specifiersEClass, declaration_specifiers.class, "declaration_specifiers", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdeclaration_specifiers_Storage_class_specifier(), ecorePackage.getEString(), "Storage_class_specifier", null, 0, 1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_specifiers_R1(), this.getdeclaration_specifiers(), null, "r1", null, 0, -1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdeclaration_specifiers_Type_qualifier(), ecorePackage.getEString(), "Type_qualifier", null, 0, 1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_specifiers_R2(), this.getdeclaration_specifiers(), null, "r2", null, 0, -1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selection_statementEClass, selection_statement.class, "selection_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getselection_statement_Expression(), this.getexpression(), null, "Expression", null, 0, 1, selection_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getselection_statement_Statement(), this.getstatement(), null, "Statement", null, 0, 1, selection_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expression_statementEClass, expression_statement.class, "expression_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(expressionEClass, expression.class, "expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getexpression_Assignment_expression(), this.getassignment_expression(), null, "Assignment_expression", null, 0, 1, expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getexpression_ExpressionR(), this.getexpressionR(), null, "ExpressionR", null, 0, 1, expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionREClass, expressionR.class, "expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getexpressionR_Assignment_expression(), this.getassignment_expression(), null, "Assignment_expression", null, 0, 1, expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getexpressionR_Rec(), this.getexpressionR(), null, "rec", null, 0, -1, expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditional_expressionEClass, conditional_expression.class, "conditional_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getconditional_expression_Logical_or_expression(), this.getlogical_or_expression(), null, "Logical_or_expression", null, 0, 1, conditional_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getconditional_expression_Expression(), this.getexpression(), null, "Expression", null, 0, 1, conditional_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logical_or_expressionEClass, logical_or_expression.class, "logical_or_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlogical_or_expression_Logical_and_expression(), this.getlogical_and_expression(), null, "Logical_and_expression", null, 0, 1, logical_or_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlogical_or_expression_Logical_or_expressionR(), this.getlogical_or_expressionR(), null, "Logical_or_expressionR", null, 0, 1, logical_or_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logical_or_expressionREClass, logical_or_expressionR.class, "logical_or_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlogical_or_expressionR_Logical_and_expression(), this.getlogical_and_expression(), null, "Logical_and_expression", null, 0, 1, logical_or_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlogical_or_expressionR_Rec(), this.getlogical_or_expressionR(), null, "rec", null, 0, -1, logical_or_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logical_and_expressionEClass, logical_and_expression.class, "logical_and_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlogical_and_expression_Inclusive_or_expression(), this.getinclusive_or_expression(), null, "Inclusive_or_expression", null, 0, 1, logical_and_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlogical_and_expression_Logical_and_expressionR(), this.getlogical_and_expressionR(), null, "Logical_and_expressionR", null, 0, 1, logical_and_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logical_and_expressionREClass, logical_and_expressionR.class, "logical_and_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlogical_and_expressionR_Inclusive_or_expression(), this.getinclusive_or_expression(), null, "Inclusive_or_expression", null, 0, 1, logical_and_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlogical_and_expressionR_Rec(), this.getlogical_and_expressionR(), null, "rec", null, 0, -1, logical_and_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inclusive_or_expressionEClass, inclusive_or_expression.class, "inclusive_or_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinclusive_or_expression_Exclusive_or_expression(), this.getexclusive_or_expression(), null, "Exclusive_or_expression", null, 0, 1, inclusive_or_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinclusive_or_expression_Inclusive_or_expressionR(), this.getinclusive_or_expressionR(), null, "Inclusive_or_expressionR", null, 0, 1, inclusive_or_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inclusive_or_expressionREClass, inclusive_or_expressionR.class, "inclusive_or_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinclusive_or_expressionR_Exclusive_or_expression(), this.getexclusive_or_expression(), null, "Exclusive_or_expression", null, 0, 1, inclusive_or_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinclusive_or_expressionR_Rec(), this.getinclusive_or_expressionR(), null, "rec", null, 0, -1, inclusive_or_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exclusive_or_expressionEClass, exclusive_or_expression.class, "exclusive_or_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getexclusive_or_expression_And_expression(), this.getand_expression(), null, "And_expression", null, 0, 1, exclusive_or_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getexclusive_or_expression_Exclusive_or_expressionR(), this.getexclusive_or_expressionR(), null, "Exclusive_or_expressionR", null, 0, 1, exclusive_or_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exclusive_or_expressionREClass, exclusive_or_expressionR.class, "exclusive_or_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getexclusive_or_expressionR_And_expression(), this.getand_expression(), null, "And_expression", null, 0, 1, exclusive_or_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getexclusive_or_expressionR_Rec(), this.getexclusive_or_expressionR(), null, "rec", null, 0, -1, exclusive_or_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(and_expressionREClass, and_expressionR.class, "and_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getand_expressionR_Equality_expression(), this.getequality_expression(), null, "Equality_expression", null, 0, 1, and_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getand_expressionR_Rec(), this.getand_expressionR(), null, "rec", null, 0, -1, and_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(and_expressionEClass, and_expression.class, "and_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getand_expression_Equality_expression(), this.getequality_expression(), null, "Equality_expression", null, 0, 1, and_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getand_expression_And_expressionR(), this.getand_expressionR(), null, "And_expressionR", null, 0, 1, and_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(equality_expressionEClass, equality_expression.class, "equality_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getequality_expression_Relational_expression(), this.getrelational_expression(), null, "Relational_expression", null, 0, 1, equality_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getequality_expression_Equality_expressionR(), this.getequality_expressionR(), null, "Equality_expressionR", null, 0, 1, equality_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(equality_expressionREClass, equality_expressionR.class, "equality_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getequality_expressionR_Relational_expression(), this.getrelational_expression(), null, "Relational_expression", null, 0, 1, equality_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getequality_expressionR_Rec(), this.getequality_expressionR(), null, "rec", null, 0, -1, equality_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(relational_expressionEClass, relational_expression.class, "relational_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getrelational_expression_Shift_expression(), this.getshift_expression(), null, "Shift_expression", null, 0, 1, relational_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getrelational_expression_Re(), this.getrelational_expressionR(), null, "re", null, 0, 1, relational_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(relational_expressionREClass, relational_expressionR.class, "relational_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getrelational_expressionR_Shift_expression(), this.getshift_expression(), null, "Shift_expression", null, 0, 1, relational_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getrelational_expressionR_Rec(), this.getrelational_expressionR(), null, "rec", null, 0, -1, relational_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(shift_expressionEClass, shift_expression.class, "shift_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(shift_expressionREClass, shift_expressionR.class, "shift_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getshift_expressionR_Additive_expression(), this.getadditive_expression(), null, "Additive_expression", null, 0, 1, shift_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getshift_expressionR_Rec(), this.getshift_expressionR(), null, "rec", null, 0, -1, shift_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(additive_expressionEClass, additive_expression.class, "additive_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getadditive_expression_Shift_expressionR(), this.getshift_expressionR(), null, "Shift_expressionR", null, 0, 1, additive_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getadditive_expression_Multiplicative_expression(), this.getmultiplicative_expression(), null, "Multiplicative_expression", null, 0, 1, additive_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getadditive_expression_Additive_expressionR(), this.getadditive_expressionR(), null, "Additive_expressionR", null, 0, 1, additive_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(additive_expressionREClass, additive_expressionR.class, "additive_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getadditive_expressionR_Multiplicative_expression(), this.getmultiplicative_expression(), null, "Multiplicative_expression", null, 0, 1, additive_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getadditive_expressionR_Rec(), this.getadditive_expressionR(), null, "rec", null, 0, -1, additive_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(multiplicative_expressionREClass, multiplicative_expressionR.class, "multiplicative_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getmultiplicative_expressionR_Cast_expression(), this.getcast_expression(), null, "Cast_expression", null, 0, 1, multiplicative_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getmultiplicative_expressionR_Rec(), this.getmultiplicative_expressionR(), null, "rec", null, 0, -1, multiplicative_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(multiplicative_expressionEClass, multiplicative_expression.class, "multiplicative_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getmultiplicative_expression_Cast_expression(), this.getcast_expression(), null, "Cast_expression", null, 0, 1, multiplicative_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getmultiplicative_expression_Multiplicative_expressionR(), this.getmultiplicative_expressionR(), null, "Multiplicative_expressionR", null, 0, 1, multiplicative_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(assignment_expressionEClass, assignment_expression.class, "assignment_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getassignment_expression_Unary_expression(), this.getunary_expression(), null, "Unary_expression", null, 0, 1, assignment_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_expression_Assignment_operator(), ecorePackage.getEString(), "Assignment_operator", null, 0, 1, assignment_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getassignment_expression_Rec(), this.getassignment_expression(), null, "rec", null, 0, -1, assignment_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cast_expressionEClass, cast_expression.class, "cast_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getcast_expression_Type_name(), this.gettype_name(), null, "Type_name", null, 0, 1, cast_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getcast_expression_Rec(), this.getcast_expression(), null, "rec", null, 0, -1, cast_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unary_expressionEClass, unary_expression.class, "unary_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getunary_expression_Unary_operator(), ecorePackage.getEString(), "Unary_operator", null, 0, 1, unary_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getunary_expression_Ce(), this.getcast_expression(), null, "ce", null, 0, 1, unary_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(postfix_expressionEClass, postfix_expression.class, "postfix_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getpostfix_expression_Primary_expression(), this.getprimary_expression(), null, "Primary_expression", null, 0, 1, postfix_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getpostfix_expression_Postfix_expressionR(), this.getpostfix_expressionR(), null, "Postfix_expressionR", null, 0, 1, postfix_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getpostfix_expression_Initializer_list(), this.getinitializer_list(), null, "Initializer_list", null, 0, 1, postfix_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initializerEClass, initializer.class, "initializer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(initializer_listEClass, initializer_list.class, "initializer_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinitializer_list_Designation(), this.getdesignation(), null, "Designation", null, 0, 1, initializer_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_list_Initializer(), this.getinitializer(), null, "Initializer", null, 0, 1, initializer_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_list_Il(), this.getinitializer_listR(), null, "il", null, 0, 1, initializer_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_list_Ilr(), this.getinitializer_listR(), null, "ilr", null, 0, 1, initializer_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initializer_listREClass, initializer_listR.class, "initializer_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinitializer_listR_Designation(), this.getdesignation(), null, "Designation", null, 0, 1, initializer_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_listR_Initializer(), this.getinitializer(), null, "Initializer", null, 0, 1, initializer_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_listR_Rec(), this.getinitializer_listR(), null, "rec", null, 0, -1, initializer_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(designationEClass, designation.class, "designation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(designator_listEClass, designator_list.class, "designator_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdesignator_list_Designator(), this.getdesignator(), null, "Designator", null, 0, 1, designator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdesignator_list_DesignatorR(), this.getdesignator_listR(), null, "DesignatorR", null, 0, 1, designator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(designator_listREClass, designator_listR.class, "designator_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdesignator_listR_Designator(), this.getdesignator(), null, "Designator", null, 0, 1, designator_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdesignator_listR_Rec(), this.getdesignator_listR(), null, "rec", null, 0, -1, designator_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(designatorEClass, designator.class, "designator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(constant_expressionEClass, constant_expression.class, "constant_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(type_nameEClass, type_name.class, "type_name", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettype_name_Specifier_qualifier_list(), this.getspecifier_qualifier_list(), null, "Specifier_qualifier_list", null, 0, 1, type_name.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettype_name_Ad(), this.getabstract_declarator(), null, "ad", null, 0, 1, type_name.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(specifier_qualifier_listEClass, specifier_qualifier_list.class, "specifier_qualifier_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getspecifier_qualifier_list_Type_specifier(), this.gettype_specifier(), null, "Type_specifier", null, 0, 1, specifier_qualifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getspecifier_qualifier_list_Rec(), this.getspecifier_qualifier_list(), null, "rec", null, 0, -1, specifier_qualifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declarator_listEClass, struct_declarator_list.class, "struct_declarator_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declarator_list_Struct_declarator(), this.getstruct_declarator(), null, "Struct_declarator", null, 0, 1, struct_declarator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declarator_list_Struct_declarator_listR(), this.getstruct_declarator_listR(), null, "Struct_declarator_listR", null, 0, 1, struct_declarator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declaration_listEClass, struct_declaration_list.class, "struct_declaration_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declaration_list_Struct_declaration(), this.getstruct_declaration(), null, "Struct_declaration", null, 0, 1, struct_declaration_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declaration_list_Struct_declaration_listR(), this.getstruct_declaration_listR(), null, "Struct_declaration_listR", null, 0, 1, struct_declaration_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declaration_listREClass, struct_declaration_listR.class, "struct_declaration_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declaration_listR_Struct_declaration(), this.getstruct_declaration(), null, "Struct_declaration", null, 0, 1, struct_declaration_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declaration_listR_Rec(), this.getstruct_declaration_listR(), null, "rec", null, 0, -1, struct_declaration_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declarationEClass, struct_declaration.class, "struct_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declaration_Specifier_qualifier_listx(), this.getspecifier_qualifier_list(), null, "Specifier_qualifier_listx", null, 0, 1, struct_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declaration_Struct_declarator_list(), this.getstruct_declarator_list(), null, "Struct_declarator_list", null, 0, 1, struct_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declarator_listREClass, struct_declarator_listR.class, "struct_declarator_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declarator_listR_Struct_declarator(), this.getstruct_declarator(), null, "Struct_declarator", null, 0, 1, struct_declarator_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declarator_listR_Rec(), this.getstruct_declarator_listR(), null, "rec", null, 0, -1, struct_declarator_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declaratorEClass, struct_declarator.class, "struct_declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declarator_Declaratorx(), this.getdeclarator(), null, "Declaratorx", null, 0, 1, struct_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declarator_Constant_expression1(), this.getconstant_expression(), null, "Constant_expression1", null, 0, 1, struct_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(static_assert_declarationEClass, static_assert_declaration.class, "static_assert_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(struct_or_union_specifierEClass, struct_or_union_specifier.class, "struct_or_union_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getstruct_or_union_specifier_Struct_or_union(), ecorePackage.getEString(), "Struct_or_union", null, 0, 1, struct_or_union_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_or_union_specifier_Struct_declaration_list(), this.getstruct_declaration_list(), null, "Struct_declaration_list", null, 0, 1, struct_or_union_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_or_union_specifier_Id(), this.getIDENTIFIER(), null, "id", null, 0, 1, struct_or_union_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(atomic_type_specifierEClass, atomic_type_specifier.class, "atomic_type_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(postfix_expressionREClass, postfix_expressionR.class, "postfix_expressionR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getpostfix_expressionR_Expression(), this.getexpression(), null, "Expression", null, 0, 1, postfix_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getpostfix_expressionR_Rec(), ecorePackage.getEObject(), null, "rec", null, 0, -1, postfix_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getpostfix_expressionR_Argument_expression_list(), this.getargument_expression_list(), null, "Argument_expression_list", null, 0, 1, postfix_expressionR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argument_expression_listEClass, argument_expression_list.class, "argument_expression_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getargument_expression_list_Assignment_expression(), this.getassignment_expression(), null, "Assignment_expression", null, 0, 1, argument_expression_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getargument_expression_list_Argument_expression_listR(), this.getargument_expression_listR(), null, "Argument_expression_listR", null, 0, 1, argument_expression_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argument_expression_listREClass, argument_expression_listR.class, "argument_expression_listR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getargument_expression_listR_Assignment_expression(), this.getassignment_expression(), null, "Assignment_expression", null, 0, 1, argument_expression_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getargument_expression_listR_Rec(), this.getargument_expression_listR(), null, "rec", null, 0, -1, argument_expression_listR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primary_expressionEClass, primary_expression.class, "primary_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(pointerEClass, pointer.class, "pointer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getpointer_Type_qualifier_list(), this.gettype_qualifier_list(), null, "Type_qualifier_list", null, 0, 1, pointer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getpointer_Rec(), this.getpointer(), null, "rec", null, 0, -1, pointer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(identifierEClass, org.xtext.example.mydsl.myDsl.IDENTIFIER.class, "IDENTIFIER", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIDENTIFIER_Dr(), this.getdirect_declaratorR(), null, "dr", null, 0, 1, org.xtext.example.mydsl.myDsl.IDENTIFIER.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIDENTIFIER_Il(), this.getidentifier_listR(), null, "il", null, 0, 1, org.xtext.example.mydsl.myDsl.IDENTIFIER.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIDENTIFIER_A(), this.getstatement(), null, "a", null, 0, 1, org.xtext.example.mydsl.myDsl.IDENTIFIER.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getIDENTIFIER_Name(), ecorePackage.getEString(), "name", null, 0, 1, org.xtext.example.mydsl.myDsl.IDENTIFIER.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(type_specifierEClass, type_specifier.class, "type_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettype_specifier_Ds(), this.getdeclaration_specifiers(), null, "ds", null, 0, 1, type_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringCEClass, StringC.class, "StringC", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringC_String(), ecorePackage.getEString(), "string", null, 0, 1, StringC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //MyDslPackageImpl
