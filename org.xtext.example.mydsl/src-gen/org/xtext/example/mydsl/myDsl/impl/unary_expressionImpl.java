/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.cast_expression;
import org.xtext.example.mydsl.myDsl.unary_expression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>unary expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.unary_expressionImpl#getUnary_operator <em>Unary operator</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.unary_expressionImpl#getCe <em>Ce</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class unary_expressionImpl extends cast_expressionImpl implements unary_expression
{
  /**
   * The default value of the '{@link #getUnary_operator() <em>Unary operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnary_operator()
   * @generated
   * @ordered
   */
  protected static final String UNARY_OPERATOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUnary_operator() <em>Unary operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnary_operator()
   * @generated
   * @ordered
   */
  protected String unary_operator = UNARY_OPERATOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getCe() <em>Ce</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCe()
   * @generated
   * @ordered
   */
  protected cast_expression ce;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected unary_expressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.UNARY_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUnary_operator()
  {
    return unary_operator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUnary_operator(String newUnary_operator)
  {
    String oldUnary_operator = unary_operator;
    unary_operator = newUnary_operator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.UNARY_EXPRESSION__UNARY_OPERATOR, oldUnary_operator, unary_operator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public cast_expression getCe()
  {
    return ce;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCe(cast_expression newCe, NotificationChain msgs)
  {
    cast_expression oldCe = ce;
    ce = newCe;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.UNARY_EXPRESSION__CE, oldCe, newCe);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCe(cast_expression newCe)
  {
    if (newCe != ce)
    {
      NotificationChain msgs = null;
      if (ce != null)
        msgs = ((InternalEObject)ce).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.UNARY_EXPRESSION__CE, null, msgs);
      if (newCe != null)
        msgs = ((InternalEObject)newCe).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.UNARY_EXPRESSION__CE, null, msgs);
      msgs = basicSetCe(newCe, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.UNARY_EXPRESSION__CE, newCe, newCe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.UNARY_EXPRESSION__CE:
        return basicSetCe(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.UNARY_EXPRESSION__UNARY_OPERATOR:
        return getUnary_operator();
      case MyDslPackage.UNARY_EXPRESSION__CE:
        return getCe();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.UNARY_EXPRESSION__UNARY_OPERATOR:
        setUnary_operator((String)newValue);
        return;
      case MyDslPackage.UNARY_EXPRESSION__CE:
        setCe((cast_expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.UNARY_EXPRESSION__UNARY_OPERATOR:
        setUnary_operator(UNARY_OPERATOR_EDEFAULT);
        return;
      case MyDslPackage.UNARY_EXPRESSION__CE:
        setCe((cast_expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.UNARY_EXPRESSION__UNARY_OPERATOR:
        return UNARY_OPERATOR_EDEFAULT == null ? unary_operator != null : !UNARY_OPERATOR_EDEFAULT.equals(unary_operator);
      case MyDslPackage.UNARY_EXPRESSION__CE:
        return ce != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (Unary_operator: ");
    result.append(unary_operator);
    result.append(')');
    return result.toString();
  }

} //unary_expressionImpl
