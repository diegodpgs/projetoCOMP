/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.relational_expression;
import org.xtext.example.mydsl.myDsl.relational_expressionR;
import org.xtext.example.mydsl.myDsl.shift_expression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>relational expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.relational_expressionImpl#getShift_expression <em>Shift expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.relational_expressionImpl#getRe <em>Re</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class relational_expressionImpl extends MinimalEObjectImpl.Container implements relational_expression
{
  /**
   * The cached value of the '{@link #getShift_expression() <em>Shift expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShift_expression()
   * @generated
   * @ordered
   */
  protected shift_expression shift_expression;

  /**
   * The cached value of the '{@link #getRe() <em>Re</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRe()
   * @generated
   * @ordered
   */
  protected relational_expressionR re;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected relational_expressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.RELATIONAL_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public shift_expression getShift_expression()
  {
    return shift_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetShift_expression(shift_expression newShift_expression, NotificationChain msgs)
  {
    shift_expression oldShift_expression = shift_expression;
    shift_expression = newShift_expression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION__SHIFT_EXPRESSION, oldShift_expression, newShift_expression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setShift_expression(shift_expression newShift_expression)
  {
    if (newShift_expression != shift_expression)
    {
      NotificationChain msgs = null;
      if (shift_expression != null)
        msgs = ((InternalEObject)shift_expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RELATIONAL_EXPRESSION__SHIFT_EXPRESSION, null, msgs);
      if (newShift_expression != null)
        msgs = ((InternalEObject)newShift_expression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RELATIONAL_EXPRESSION__SHIFT_EXPRESSION, null, msgs);
      msgs = basicSetShift_expression(newShift_expression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION__SHIFT_EXPRESSION, newShift_expression, newShift_expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public relational_expressionR getRe()
  {
    return re;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRe(relational_expressionR newRe, NotificationChain msgs)
  {
    relational_expressionR oldRe = re;
    re = newRe;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION__RE, oldRe, newRe);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRe(relational_expressionR newRe)
  {
    if (newRe != re)
    {
      NotificationChain msgs = null;
      if (re != null)
        msgs = ((InternalEObject)re).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RELATIONAL_EXPRESSION__RE, null, msgs);
      if (newRe != null)
        msgs = ((InternalEObject)newRe).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RELATIONAL_EXPRESSION__RE, null, msgs);
      msgs = basicSetRe(newRe, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION__RE, newRe, newRe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION__SHIFT_EXPRESSION:
        return basicSetShift_expression(null, msgs);
      case MyDslPackage.RELATIONAL_EXPRESSION__RE:
        return basicSetRe(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION__SHIFT_EXPRESSION:
        return getShift_expression();
      case MyDslPackage.RELATIONAL_EXPRESSION__RE:
        return getRe();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION__SHIFT_EXPRESSION:
        setShift_expression((shift_expression)newValue);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION__RE:
        setRe((relational_expressionR)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION__SHIFT_EXPRESSION:
        setShift_expression((shift_expression)null);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION__RE:
        setRe((relational_expressionR)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION__SHIFT_EXPRESSION:
        return shift_expression != null;
      case MyDslPackage.RELATIONAL_EXPRESSION__RE:
        return re != null;
    }
    return super.eIsSet(featureID);
  }

} //relational_expressionImpl
