/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.direct_declarator;
import org.xtext.example.mydsl.myDsl.direct_declaratorR;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>direct declarator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.direct_declaratorImpl#getDirect_declaratorR <em>Direct declarator R</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class direct_declaratorImpl extends declaratorImpl implements direct_declarator
{
  /**
   * The cached value of the '{@link #getDirect_declaratorR() <em>Direct declarator R</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDirect_declaratorR()
   * @generated
   * @ordered
   */
  protected direct_declaratorR direct_declaratorR;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected direct_declaratorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.DIRECT_DECLARATOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public direct_declaratorR getDirect_declaratorR()
  {
    return direct_declaratorR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDirect_declaratorR(direct_declaratorR newDirect_declaratorR, NotificationChain msgs)
  {
    direct_declaratorR oldDirect_declaratorR = direct_declaratorR;
    direct_declaratorR = newDirect_declaratorR;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_DECLARATOR__DIRECT_DECLARATOR_R, oldDirect_declaratorR, newDirect_declaratorR);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDirect_declaratorR(direct_declaratorR newDirect_declaratorR)
  {
    if (newDirect_declaratorR != direct_declaratorR)
    {
      NotificationChain msgs = null;
      if (direct_declaratorR != null)
        msgs = ((InternalEObject)direct_declaratorR).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_DECLARATOR__DIRECT_DECLARATOR_R, null, msgs);
      if (newDirect_declaratorR != null)
        msgs = ((InternalEObject)newDirect_declaratorR).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_DECLARATOR__DIRECT_DECLARATOR_R, null, msgs);
      msgs = basicSetDirect_declaratorR(newDirect_declaratorR, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_DECLARATOR__DIRECT_DECLARATOR_R, newDirect_declaratorR, newDirect_declaratorR));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_DECLARATOR__DIRECT_DECLARATOR_R:
        return basicSetDirect_declaratorR(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_DECLARATOR__DIRECT_DECLARATOR_R:
        return getDirect_declaratorR();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_DECLARATOR__DIRECT_DECLARATOR_R:
        setDirect_declaratorR((direct_declaratorR)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_DECLARATOR__DIRECT_DECLARATOR_R:
        setDirect_declaratorR((direct_declaratorR)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_DECLARATOR__DIRECT_DECLARATOR_R:
        return direct_declaratorR != null;
    }
    return super.eIsSet(featureID);
  }

} //direct_declaratorImpl
