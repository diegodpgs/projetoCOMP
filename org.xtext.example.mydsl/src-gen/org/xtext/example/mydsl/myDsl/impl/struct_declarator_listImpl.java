/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.struct_declarator;
import org.xtext.example.mydsl.myDsl.struct_declarator_list;
import org.xtext.example.mydsl.myDsl.struct_declarator_listR;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>struct declarator list</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.struct_declarator_listImpl#getStruct_declarator <em>Struct declarator</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.struct_declarator_listImpl#getStruct_declarator_listR <em>Struct declarator list R</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class struct_declarator_listImpl extends MinimalEObjectImpl.Container implements struct_declarator_list
{
  /**
   * The cached value of the '{@link #getStruct_declarator() <em>Struct declarator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct_declarator()
   * @generated
   * @ordered
   */
  protected struct_declarator struct_declarator;

  /**
   * The cached value of the '{@link #getStruct_declarator_listR() <em>Struct declarator list R</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct_declarator_listR()
   * @generated
   * @ordered
   */
  protected struct_declarator_listR struct_declarator_listR;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected struct_declarator_listImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.STRUCT_DECLARATOR_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declarator getStruct_declarator()
  {
    return struct_declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStruct_declarator(struct_declarator newStruct_declarator, NotificationChain msgs)
  {
    struct_declarator oldStruct_declarator = struct_declarator;
    struct_declarator = newStruct_declarator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR, oldStruct_declarator, newStruct_declarator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStruct_declarator(struct_declarator newStruct_declarator)
  {
    if (newStruct_declarator != struct_declarator)
    {
      NotificationChain msgs = null;
      if (struct_declarator != null)
        msgs = ((InternalEObject)struct_declarator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR, null, msgs);
      if (newStruct_declarator != null)
        msgs = ((InternalEObject)newStruct_declarator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR, null, msgs);
      msgs = basicSetStruct_declarator(newStruct_declarator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR, newStruct_declarator, newStruct_declarator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declarator_listR getStruct_declarator_listR()
  {
    return struct_declarator_listR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStruct_declarator_listR(struct_declarator_listR newStruct_declarator_listR, NotificationChain msgs)
  {
    struct_declarator_listR oldStruct_declarator_listR = struct_declarator_listR;
    struct_declarator_listR = newStruct_declarator_listR;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R, oldStruct_declarator_listR, newStruct_declarator_listR);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStruct_declarator_listR(struct_declarator_listR newStruct_declarator_listR)
  {
    if (newStruct_declarator_listR != struct_declarator_listR)
    {
      NotificationChain msgs = null;
      if (struct_declarator_listR != null)
        msgs = ((InternalEObject)struct_declarator_listR).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R, null, msgs);
      if (newStruct_declarator_listR != null)
        msgs = ((InternalEObject)newStruct_declarator_listR).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R, null, msgs);
      msgs = basicSetStruct_declarator_listR(newStruct_declarator_listR, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R, newStruct_declarator_listR, newStruct_declarator_listR));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR:
        return basicSetStruct_declarator(null, msgs);
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R:
        return basicSetStruct_declarator_listR(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR:
        return getStruct_declarator();
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R:
        return getStruct_declarator_listR();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR:
        setStruct_declarator((struct_declarator)newValue);
        return;
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R:
        setStruct_declarator_listR((struct_declarator_listR)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR:
        setStruct_declarator((struct_declarator)null);
        return;
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R:
        setStruct_declarator_listR((struct_declarator_listR)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR:
        return struct_declarator != null;
      case MyDslPackage.STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST_R:
        return struct_declarator_listR != null;
    }
    return super.eIsSet(featureID);
  }

} //struct_declarator_listImpl
