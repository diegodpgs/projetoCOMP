/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.designator;
import org.xtext.example.mydsl.myDsl.designator_list;
import org.xtext.example.mydsl.myDsl.designator_listR;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>designator list</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.designator_listImpl#getDesignator <em>Designator</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.designator_listImpl#getDesignatorR <em>Designator R</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class designator_listImpl extends designationImpl implements designator_list
{
  /**
   * The cached value of the '{@link #getDesignator() <em>Designator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDesignator()
   * @generated
   * @ordered
   */
  protected designator designator;

  /**
   * The cached value of the '{@link #getDesignatorR() <em>Designator R</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDesignatorR()
   * @generated
   * @ordered
   */
  protected designator_listR designatorR;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected designator_listImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.DESIGNATOR_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public designator getDesignator()
  {
    return designator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDesignator(designator newDesignator, NotificationChain msgs)
  {
    designator oldDesignator = designator;
    designator = newDesignator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DESIGNATOR_LIST__DESIGNATOR, oldDesignator, newDesignator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDesignator(designator newDesignator)
  {
    if (newDesignator != designator)
    {
      NotificationChain msgs = null;
      if (designator != null)
        msgs = ((InternalEObject)designator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DESIGNATOR_LIST__DESIGNATOR, null, msgs);
      if (newDesignator != null)
        msgs = ((InternalEObject)newDesignator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DESIGNATOR_LIST__DESIGNATOR, null, msgs);
      msgs = basicSetDesignator(newDesignator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DESIGNATOR_LIST__DESIGNATOR, newDesignator, newDesignator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public designator_listR getDesignatorR()
  {
    return designatorR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDesignatorR(designator_listR newDesignatorR, NotificationChain msgs)
  {
    designator_listR oldDesignatorR = designatorR;
    designatorR = newDesignatorR;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DESIGNATOR_LIST__DESIGNATOR_R, oldDesignatorR, newDesignatorR);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDesignatorR(designator_listR newDesignatorR)
  {
    if (newDesignatorR != designatorR)
    {
      NotificationChain msgs = null;
      if (designatorR != null)
        msgs = ((InternalEObject)designatorR).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DESIGNATOR_LIST__DESIGNATOR_R, null, msgs);
      if (newDesignatorR != null)
        msgs = ((InternalEObject)newDesignatorR).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DESIGNATOR_LIST__DESIGNATOR_R, null, msgs);
      msgs = basicSetDesignatorR(newDesignatorR, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DESIGNATOR_LIST__DESIGNATOR_R, newDesignatorR, newDesignatorR));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR:
        return basicSetDesignator(null, msgs);
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR_R:
        return basicSetDesignatorR(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR:
        return getDesignator();
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR_R:
        return getDesignatorR();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR:
        setDesignator((designator)newValue);
        return;
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR_R:
        setDesignatorR((designator_listR)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR:
        setDesignator((designator)null);
        return;
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR_R:
        setDesignatorR((designator_listR)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR:
        return designator != null;
      case MyDslPackage.DESIGNATOR_LIST__DESIGNATOR_R:
        return designatorR != null;
    }
    return super.eIsSet(featureID);
  }

} //designator_listImpl
