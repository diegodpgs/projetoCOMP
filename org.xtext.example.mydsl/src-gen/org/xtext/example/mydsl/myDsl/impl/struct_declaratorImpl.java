/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.constant_expression;
import org.xtext.example.mydsl.myDsl.declarator;
import org.xtext.example.mydsl.myDsl.struct_declarator;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>struct declarator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.struct_declaratorImpl#getDeclaratorx <em>Declaratorx</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.struct_declaratorImpl#getConstant_expression1 <em>Constant expression1</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class struct_declaratorImpl extends MinimalEObjectImpl.Container implements struct_declarator
{
  /**
   * The cached value of the '{@link #getDeclaratorx() <em>Declaratorx</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaratorx()
   * @generated
   * @ordered
   */
  protected declarator declaratorx;

  /**
   * The cached value of the '{@link #getConstant_expression1() <em>Constant expression1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstant_expression1()
   * @generated
   * @ordered
   */
  protected constant_expression constant_expression1;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected struct_declaratorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.STRUCT_DECLARATOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declarator getDeclaratorx()
  {
    return declaratorx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclaratorx(declarator newDeclaratorx, NotificationChain msgs)
  {
    declarator oldDeclaratorx = declaratorx;
    declaratorx = newDeclaratorx;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATOR__DECLARATORX, oldDeclaratorx, newDeclaratorx);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclaratorx(declarator newDeclaratorx)
  {
    if (newDeclaratorx != declaratorx)
    {
      NotificationChain msgs = null;
      if (declaratorx != null)
        msgs = ((InternalEObject)declaratorx).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATOR__DECLARATORX, null, msgs);
      if (newDeclaratorx != null)
        msgs = ((InternalEObject)newDeclaratorx).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATOR__DECLARATORX, null, msgs);
      msgs = basicSetDeclaratorx(newDeclaratorx, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATOR__DECLARATORX, newDeclaratorx, newDeclaratorx));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constant_expression getConstant_expression1()
  {
    return constant_expression1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstant_expression1(constant_expression newConstant_expression1, NotificationChain msgs)
  {
    constant_expression oldConstant_expression1 = constant_expression1;
    constant_expression1 = newConstant_expression1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATOR__CONSTANT_EXPRESSION1, oldConstant_expression1, newConstant_expression1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstant_expression1(constant_expression newConstant_expression1)
  {
    if (newConstant_expression1 != constant_expression1)
    {
      NotificationChain msgs = null;
      if (constant_expression1 != null)
        msgs = ((InternalEObject)constant_expression1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATOR__CONSTANT_EXPRESSION1, null, msgs);
      if (newConstant_expression1 != null)
        msgs = ((InternalEObject)newConstant_expression1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATOR__CONSTANT_EXPRESSION1, null, msgs);
      msgs = basicSetConstant_expression1(newConstant_expression1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATOR__CONSTANT_EXPRESSION1, newConstant_expression1, newConstant_expression1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR__DECLARATORX:
        return basicSetDeclaratorx(null, msgs);
      case MyDslPackage.STRUCT_DECLARATOR__CONSTANT_EXPRESSION1:
        return basicSetConstant_expression1(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR__DECLARATORX:
        return getDeclaratorx();
      case MyDslPackage.STRUCT_DECLARATOR__CONSTANT_EXPRESSION1:
        return getConstant_expression1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR__DECLARATORX:
        setDeclaratorx((declarator)newValue);
        return;
      case MyDslPackage.STRUCT_DECLARATOR__CONSTANT_EXPRESSION1:
        setConstant_expression1((constant_expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR__DECLARATORX:
        setDeclaratorx((declarator)null);
        return;
      case MyDslPackage.STRUCT_DECLARATOR__CONSTANT_EXPRESSION1:
        setConstant_expression1((constant_expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATOR__DECLARATORX:
        return declaratorx != null;
      case MyDslPackage.STRUCT_DECLARATOR__CONSTANT_EXPRESSION1:
        return constant_expression1 != null;
    }
    return super.eIsSet(featureID);
  }

} //struct_declaratorImpl
