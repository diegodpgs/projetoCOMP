/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.IDENTIFIER;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.abstract_declarator;
import org.xtext.example.mydsl.myDsl.argument_expression_list;
import org.xtext.example.mydsl.myDsl.block_item;
import org.xtext.example.mydsl.myDsl.constant_expression;
import org.xtext.example.mydsl.myDsl.declaration_specifiers;
import org.xtext.example.mydsl.myDsl.declarator;
import org.xtext.example.mydsl.myDsl.designator;
import org.xtext.example.mydsl.myDsl.direct_declaratorR;
import org.xtext.example.mydsl.myDsl.expression;
import org.xtext.example.mydsl.myDsl.identifier_list;
import org.xtext.example.mydsl.myDsl.identifier_listR;
import org.xtext.example.mydsl.myDsl.jump_statement;
import org.xtext.example.mydsl.myDsl.labeled_statement;
import org.xtext.example.mydsl.myDsl.parameter_declaration;
import org.xtext.example.mydsl.myDsl.postfix_expressionR;
import org.xtext.example.mydsl.myDsl.primary_expression;
import org.xtext.example.mydsl.myDsl.statement;
import org.xtext.example.mydsl.myDsl.struct_declaration_list;
import org.xtext.example.mydsl.myDsl.struct_or_union_specifier;
import org.xtext.example.mydsl.myDsl.type_specifier;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>IDENTIFIER</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getConstant_expression <em>Constant expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getStatement <em>Statement</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getB <em>B</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getDeclaration_specifiers2 <em>Declaration specifiers2</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getDeclarator1 <em>Declarator1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getDeclaration_specifiers1 <em>Declaration specifiers1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getAbstract_declarator <em>Abstract declarator</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getStorage_class_specifier <em>Storage class specifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getR1 <em>R1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getType_qualifier <em>Type qualifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getR2 <em>R2</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getDs <em>Ds</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getStruct_or_union <em>Struct or union</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getStruct_declaration_list <em>Struct declaration list</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getRec <em>Rec</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getArgument_expression_list <em>Argument expression list</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getDr <em>Dr</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getIl <em>Il</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getA <em>A</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.IDENTIFIERImpl#getName <em>Name</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class IDENTIFIERImpl extends direct_declaratorImpl implements IDENTIFIER
{
  /**
   * The cached value of the '{@link #getConstant_expression() <em>Constant expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstant_expression()
   * @generated
   * @ordered
   */
  protected constant_expression constant_expression;

  /**
   * The cached value of the '{@link #getStatement() <em>Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatement()
   * @generated
   * @ordered
   */
  protected statement statement;

  /**
   * The cached value of the '{@link #getB() <em>B</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getB()
   * @generated
   * @ordered
   */
  protected statement b;

  /**
   * The cached value of the '{@link #getDeclaration_specifiers2() <em>Declaration specifiers2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaration_specifiers2()
   * @generated
   * @ordered
   */
  protected declaration_specifiers declaration_specifiers2;

  /**
   * The cached value of the '{@link #getDeclarator1() <em>Declarator1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclarator1()
   * @generated
   * @ordered
   */
  protected declarator declarator1;

  /**
   * The cached value of the '{@link #getDeclaration_specifiers1() <em>Declaration specifiers1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaration_specifiers1()
   * @generated
   * @ordered
   */
  protected declaration_specifiers declaration_specifiers1;

  /**
   * The cached value of the '{@link #getAbstract_declarator() <em>Abstract declarator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstract_declarator()
   * @generated
   * @ordered
   */
  protected abstract_declarator abstract_declarator;

  /**
   * The default value of the '{@link #getStorage_class_specifier() <em>Storage class specifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStorage_class_specifier()
   * @generated
   * @ordered
   */
  protected static final String STORAGE_CLASS_SPECIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStorage_class_specifier() <em>Storage class specifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStorage_class_specifier()
   * @generated
   * @ordered
   */
  protected String storage_class_specifier = STORAGE_CLASS_SPECIFIER_EDEFAULT;

  /**
   * The cached value of the '{@link #getR1() <em>R1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getR1()
   * @generated
   * @ordered
   */
  protected EList<declaration_specifiers> r1;

  /**
   * The default value of the '{@link #getType_qualifier() <em>Type qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType_qualifier()
   * @generated
   * @ordered
   */
  protected static final String TYPE_QUALIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType_qualifier() <em>Type qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType_qualifier()
   * @generated
   * @ordered
   */
  protected String type_qualifier = TYPE_QUALIFIER_EDEFAULT;

  /**
   * The cached value of the '{@link #getR2() <em>R2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getR2()
   * @generated
   * @ordered
   */
  protected EList<declaration_specifiers> r2;

  /**
   * The cached value of the '{@link #getDs() <em>Ds</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDs()
   * @generated
   * @ordered
   */
  protected declaration_specifiers ds;

  /**
   * The default value of the '{@link #getStruct_or_union() <em>Struct or union</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct_or_union()
   * @generated
   * @ordered
   */
  protected static final String STRUCT_OR_UNION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStruct_or_union() <em>Struct or union</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct_or_union()
   * @generated
   * @ordered
   */
  protected String struct_or_union = STRUCT_OR_UNION_EDEFAULT;

  /**
   * The cached value of the '{@link #getStruct_declaration_list() <em>Struct declaration list</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct_declaration_list()
   * @generated
   * @ordered
   */
  protected struct_declaration_list struct_declaration_list;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected IDENTIFIER id;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected expression expression;

  /**
   * The cached value of the '{@link #getRec() <em>Rec</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRec()
   * @generated
   * @ordered
   */
  protected EList<EObject> rec;

  /**
   * The cached value of the '{@link #getArgument_expression_list() <em>Argument expression list</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgument_expression_list()
   * @generated
   * @ordered
   */
  protected argument_expression_list argument_expression_list;

  /**
   * The cached value of the '{@link #getDr() <em>Dr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDr()
   * @generated
   * @ordered
   */
  protected direct_declaratorR dr;

  /**
   * The cached value of the '{@link #getIl() <em>Il</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIl()
   * @generated
   * @ordered
   */
  protected identifier_listR il;

  /**
   * The cached value of the '{@link #getA() <em>A</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getA()
   * @generated
   * @ordered
   */
  protected statement a;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IDENTIFIERImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.IDENTIFIER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constant_expression getConstant_expression()
  {
    return constant_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstant_expression(constant_expression newConstant_expression, NotificationChain msgs)
  {
    constant_expression oldConstant_expression = constant_expression;
    constant_expression = newConstant_expression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION, oldConstant_expression, newConstant_expression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstant_expression(constant_expression newConstant_expression)
  {
    if (newConstant_expression != constant_expression)
    {
      NotificationChain msgs = null;
      if (constant_expression != null)
        msgs = ((InternalEObject)constant_expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION, null, msgs);
      if (newConstant_expression != null)
        msgs = ((InternalEObject)newConstant_expression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION, null, msgs);
      msgs = basicSetConstant_expression(newConstant_expression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION, newConstant_expression, newConstant_expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public statement getStatement()
  {
    return statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStatement(statement newStatement, NotificationChain msgs)
  {
    statement oldStatement = statement;
    statement = newStatement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__STATEMENT, oldStatement, newStatement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStatement(statement newStatement)
  {
    if (newStatement != statement)
    {
      NotificationChain msgs = null;
      if (statement != null)
        msgs = ((InternalEObject)statement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__STATEMENT, null, msgs);
      if (newStatement != null)
        msgs = ((InternalEObject)newStatement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__STATEMENT, null, msgs);
      msgs = basicSetStatement(newStatement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__STATEMENT, newStatement, newStatement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public statement getB()
  {
    return b;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetB(statement newB, NotificationChain msgs)
  {
    statement oldB = b;
    b = newB;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__B, oldB, newB);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setB(statement newB)
  {
    if (newB != b)
    {
      NotificationChain msgs = null;
      if (b != null)
        msgs = ((InternalEObject)b).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__B, null, msgs);
      if (newB != null)
        msgs = ((InternalEObject)newB).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__B, null, msgs);
      msgs = basicSetB(newB, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__B, newB, newB));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration_specifiers getDeclaration_specifiers2()
  {
    return declaration_specifiers2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclaration_specifiers2(declaration_specifiers newDeclaration_specifiers2, NotificationChain msgs)
  {
    declaration_specifiers oldDeclaration_specifiers2 = declaration_specifiers2;
    declaration_specifiers2 = newDeclaration_specifiers2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2, oldDeclaration_specifiers2, newDeclaration_specifiers2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclaration_specifiers2(declaration_specifiers newDeclaration_specifiers2)
  {
    if (newDeclaration_specifiers2 != declaration_specifiers2)
    {
      NotificationChain msgs = null;
      if (declaration_specifiers2 != null)
        msgs = ((InternalEObject)declaration_specifiers2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2, null, msgs);
      if (newDeclaration_specifiers2 != null)
        msgs = ((InternalEObject)newDeclaration_specifiers2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2, null, msgs);
      msgs = basicSetDeclaration_specifiers2(newDeclaration_specifiers2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2, newDeclaration_specifiers2, newDeclaration_specifiers2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declarator getDeclarator1()
  {
    return declarator1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclarator1(declarator newDeclarator1, NotificationChain msgs)
  {
    declarator oldDeclarator1 = declarator1;
    declarator1 = newDeclarator1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DECLARATOR1, oldDeclarator1, newDeclarator1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclarator1(declarator newDeclarator1)
  {
    if (newDeclarator1 != declarator1)
    {
      NotificationChain msgs = null;
      if (declarator1 != null)
        msgs = ((InternalEObject)declarator1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DECLARATOR1, null, msgs);
      if (newDeclarator1 != null)
        msgs = ((InternalEObject)newDeclarator1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DECLARATOR1, null, msgs);
      msgs = basicSetDeclarator1(newDeclarator1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DECLARATOR1, newDeclarator1, newDeclarator1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration_specifiers getDeclaration_specifiers1()
  {
    return declaration_specifiers1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclaration_specifiers1(declaration_specifiers newDeclaration_specifiers1, NotificationChain msgs)
  {
    declaration_specifiers oldDeclaration_specifiers1 = declaration_specifiers1;
    declaration_specifiers1 = newDeclaration_specifiers1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1, oldDeclaration_specifiers1, newDeclaration_specifiers1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclaration_specifiers1(declaration_specifiers newDeclaration_specifiers1)
  {
    if (newDeclaration_specifiers1 != declaration_specifiers1)
    {
      NotificationChain msgs = null;
      if (declaration_specifiers1 != null)
        msgs = ((InternalEObject)declaration_specifiers1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1, null, msgs);
      if (newDeclaration_specifiers1 != null)
        msgs = ((InternalEObject)newDeclaration_specifiers1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1, null, msgs);
      msgs = basicSetDeclaration_specifiers1(newDeclaration_specifiers1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1, newDeclaration_specifiers1, newDeclaration_specifiers1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public abstract_declarator getAbstract_declarator()
  {
    return abstract_declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAbstract_declarator(abstract_declarator newAbstract_declarator, NotificationChain msgs)
  {
    abstract_declarator oldAbstract_declarator = abstract_declarator;
    abstract_declarator = newAbstract_declarator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR, oldAbstract_declarator, newAbstract_declarator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAbstract_declarator(abstract_declarator newAbstract_declarator)
  {
    if (newAbstract_declarator != abstract_declarator)
    {
      NotificationChain msgs = null;
      if (abstract_declarator != null)
        msgs = ((InternalEObject)abstract_declarator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR, null, msgs);
      if (newAbstract_declarator != null)
        msgs = ((InternalEObject)newAbstract_declarator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR, null, msgs);
      msgs = basicSetAbstract_declarator(newAbstract_declarator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR, newAbstract_declarator, newAbstract_declarator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getStorage_class_specifier()
  {
    return storage_class_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStorage_class_specifier(String newStorage_class_specifier)
  {
    String oldStorage_class_specifier = storage_class_specifier;
    storage_class_specifier = newStorage_class_specifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__STORAGE_CLASS_SPECIFIER, oldStorage_class_specifier, storage_class_specifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<declaration_specifiers> getR1()
  {
    if (r1 == null)
    {
      r1 = new EObjectContainmentEList<declaration_specifiers>(declaration_specifiers.class, this, MyDslPackage.IDENTIFIER__R1);
    }
    return r1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getType_qualifier()
  {
    return type_qualifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType_qualifier(String newType_qualifier)
  {
    String oldType_qualifier = type_qualifier;
    type_qualifier = newType_qualifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__TYPE_QUALIFIER, oldType_qualifier, type_qualifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<declaration_specifiers> getR2()
  {
    if (r2 == null)
    {
      r2 = new EObjectContainmentEList<declaration_specifiers>(declaration_specifiers.class, this, MyDslPackage.IDENTIFIER__R2);
    }
    return r2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration_specifiers getDs()
  {
    return ds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDs(declaration_specifiers newDs, NotificationChain msgs)
  {
    declaration_specifiers oldDs = ds;
    ds = newDs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DS, oldDs, newDs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDs(declaration_specifiers newDs)
  {
    if (newDs != ds)
    {
      NotificationChain msgs = null;
      if (ds != null)
        msgs = ((InternalEObject)ds).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DS, null, msgs);
      if (newDs != null)
        msgs = ((InternalEObject)newDs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DS, null, msgs);
      msgs = basicSetDs(newDs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DS, newDs, newDs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getStruct_or_union()
  {
    return struct_or_union;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStruct_or_union(String newStruct_or_union)
  {
    String oldStruct_or_union = struct_or_union;
    struct_or_union = newStruct_or_union;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__STRUCT_OR_UNION, oldStruct_or_union, struct_or_union));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declaration_list getStruct_declaration_list()
  {
    return struct_declaration_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStruct_declaration_list(struct_declaration_list newStruct_declaration_list, NotificationChain msgs)
  {
    struct_declaration_list oldStruct_declaration_list = struct_declaration_list;
    struct_declaration_list = newStruct_declaration_list;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST, oldStruct_declaration_list, newStruct_declaration_list);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStruct_declaration_list(struct_declaration_list newStruct_declaration_list)
  {
    if (newStruct_declaration_list != struct_declaration_list)
    {
      NotificationChain msgs = null;
      if (struct_declaration_list != null)
        msgs = ((InternalEObject)struct_declaration_list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST, null, msgs);
      if (newStruct_declaration_list != null)
        msgs = ((InternalEObject)newStruct_declaration_list).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST, null, msgs);
      msgs = basicSetStruct_declaration_list(newStruct_declaration_list, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST, newStruct_declaration_list, newStruct_declaration_list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IDENTIFIER getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetId(IDENTIFIER newId, NotificationChain msgs)
  {
    IDENTIFIER oldId = id;
    id = newId;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__ID, oldId, newId);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setId(IDENTIFIER newId)
  {
    if (newId != id)
    {
      NotificationChain msgs = null;
      if (id != null)
        msgs = ((InternalEObject)id).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__ID, null, msgs);
      if (newId != null)
        msgs = ((InternalEObject)newId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__ID, null, msgs);
      msgs = basicSetId(newId, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__ID, newId, newId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public expression getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpression(expression newExpression, NotificationChain msgs)
  {
    expression oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__EXPRESSION, oldExpression, newExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpression(expression newExpression)
  {
    if (newExpression != expression)
    {
      NotificationChain msgs = null;
      if (expression != null)
        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__EXPRESSION, null, msgs);
      if (newExpression != null)
        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__EXPRESSION, null, msgs);
      msgs = basicSetExpression(newExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__EXPRESSION, newExpression, newExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<EObject> getRec()
  {
    if (rec == null)
    {
      rec = new EObjectContainmentEList<EObject>(EObject.class, this, MyDslPackage.IDENTIFIER__REC);
    }
    return rec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public argument_expression_list getArgument_expression_list()
  {
    return argument_expression_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArgument_expression_list(argument_expression_list newArgument_expression_list, NotificationChain msgs)
  {
    argument_expression_list oldArgument_expression_list = argument_expression_list;
    argument_expression_list = newArgument_expression_list;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST, oldArgument_expression_list, newArgument_expression_list);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setArgument_expression_list(argument_expression_list newArgument_expression_list)
  {
    if (newArgument_expression_list != argument_expression_list)
    {
      NotificationChain msgs = null;
      if (argument_expression_list != null)
        msgs = ((InternalEObject)argument_expression_list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST, null, msgs);
      if (newArgument_expression_list != null)
        msgs = ((InternalEObject)newArgument_expression_list).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST, null, msgs);
      msgs = basicSetArgument_expression_list(newArgument_expression_list, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST, newArgument_expression_list, newArgument_expression_list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public direct_declaratorR getDr()
  {
    return dr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDr(direct_declaratorR newDr, NotificationChain msgs)
  {
    direct_declaratorR oldDr = dr;
    dr = newDr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DR, oldDr, newDr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDr(direct_declaratorR newDr)
  {
    if (newDr != dr)
    {
      NotificationChain msgs = null;
      if (dr != null)
        msgs = ((InternalEObject)dr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DR, null, msgs);
      if (newDr != null)
        msgs = ((InternalEObject)newDr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__DR, null, msgs);
      msgs = basicSetDr(newDr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__DR, newDr, newDr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public identifier_listR getIl()
  {
    return il;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIl(identifier_listR newIl, NotificationChain msgs)
  {
    identifier_listR oldIl = il;
    il = newIl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__IL, oldIl, newIl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIl(identifier_listR newIl)
  {
    if (newIl != il)
    {
      NotificationChain msgs = null;
      if (il != null)
        msgs = ((InternalEObject)il).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__IL, null, msgs);
      if (newIl != null)
        msgs = ((InternalEObject)newIl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__IL, null, msgs);
      msgs = basicSetIl(newIl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__IL, newIl, newIl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public statement getA()
  {
    return a;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetA(statement newA, NotificationChain msgs)
  {
    statement oldA = a;
    a = newA;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__A, oldA, newA);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setA(statement newA)
  {
    if (newA != a)
    {
      NotificationChain msgs = null;
      if (a != null)
        msgs = ((InternalEObject)a).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__A, null, msgs);
      if (newA != null)
        msgs = ((InternalEObject)newA).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IDENTIFIER__A, null, msgs);
      msgs = basicSetA(newA, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__A, newA, newA));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IDENTIFIER__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION:
        return basicSetConstant_expression(null, msgs);
      case MyDslPackage.IDENTIFIER__STATEMENT:
        return basicSetStatement(null, msgs);
      case MyDslPackage.IDENTIFIER__B:
        return basicSetB(null, msgs);
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2:
        return basicSetDeclaration_specifiers2(null, msgs);
      case MyDslPackage.IDENTIFIER__DECLARATOR1:
        return basicSetDeclarator1(null, msgs);
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1:
        return basicSetDeclaration_specifiers1(null, msgs);
      case MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR:
        return basicSetAbstract_declarator(null, msgs);
      case MyDslPackage.IDENTIFIER__R1:
        return ((InternalEList<?>)getR1()).basicRemove(otherEnd, msgs);
      case MyDslPackage.IDENTIFIER__R2:
        return ((InternalEList<?>)getR2()).basicRemove(otherEnd, msgs);
      case MyDslPackage.IDENTIFIER__DS:
        return basicSetDs(null, msgs);
      case MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST:
        return basicSetStruct_declaration_list(null, msgs);
      case MyDslPackage.IDENTIFIER__ID:
        return basicSetId(null, msgs);
      case MyDslPackage.IDENTIFIER__EXPRESSION:
        return basicSetExpression(null, msgs);
      case MyDslPackage.IDENTIFIER__REC:
        return ((InternalEList<?>)getRec()).basicRemove(otherEnd, msgs);
      case MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST:
        return basicSetArgument_expression_list(null, msgs);
      case MyDslPackage.IDENTIFIER__DR:
        return basicSetDr(null, msgs);
      case MyDslPackage.IDENTIFIER__IL:
        return basicSetIl(null, msgs);
      case MyDslPackage.IDENTIFIER__A:
        return basicSetA(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION:
        return getConstant_expression();
      case MyDslPackage.IDENTIFIER__STATEMENT:
        return getStatement();
      case MyDslPackage.IDENTIFIER__B:
        return getB();
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2:
        return getDeclaration_specifiers2();
      case MyDslPackage.IDENTIFIER__DECLARATOR1:
        return getDeclarator1();
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1:
        return getDeclaration_specifiers1();
      case MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR:
        return getAbstract_declarator();
      case MyDslPackage.IDENTIFIER__STORAGE_CLASS_SPECIFIER:
        return getStorage_class_specifier();
      case MyDslPackage.IDENTIFIER__R1:
        return getR1();
      case MyDslPackage.IDENTIFIER__TYPE_QUALIFIER:
        return getType_qualifier();
      case MyDslPackage.IDENTIFIER__R2:
        return getR2();
      case MyDslPackage.IDENTIFIER__DS:
        return getDs();
      case MyDslPackage.IDENTIFIER__STRUCT_OR_UNION:
        return getStruct_or_union();
      case MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST:
        return getStruct_declaration_list();
      case MyDslPackage.IDENTIFIER__ID:
        return getId();
      case MyDslPackage.IDENTIFIER__EXPRESSION:
        return getExpression();
      case MyDslPackage.IDENTIFIER__REC:
        return getRec();
      case MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST:
        return getArgument_expression_list();
      case MyDslPackage.IDENTIFIER__DR:
        return getDr();
      case MyDslPackage.IDENTIFIER__IL:
        return getIl();
      case MyDslPackage.IDENTIFIER__A:
        return getA();
      case MyDslPackage.IDENTIFIER__NAME:
        return getName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION:
        setConstant_expression((constant_expression)newValue);
        return;
      case MyDslPackage.IDENTIFIER__STATEMENT:
        setStatement((statement)newValue);
        return;
      case MyDslPackage.IDENTIFIER__B:
        setB((statement)newValue);
        return;
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2:
        setDeclaration_specifiers2((declaration_specifiers)newValue);
        return;
      case MyDslPackage.IDENTIFIER__DECLARATOR1:
        setDeclarator1((declarator)newValue);
        return;
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1:
        setDeclaration_specifiers1((declaration_specifiers)newValue);
        return;
      case MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR:
        setAbstract_declarator((abstract_declarator)newValue);
        return;
      case MyDslPackage.IDENTIFIER__STORAGE_CLASS_SPECIFIER:
        setStorage_class_specifier((String)newValue);
        return;
      case MyDslPackage.IDENTIFIER__R1:
        getR1().clear();
        getR1().addAll((Collection<? extends declaration_specifiers>)newValue);
        return;
      case MyDslPackage.IDENTIFIER__TYPE_QUALIFIER:
        setType_qualifier((String)newValue);
        return;
      case MyDslPackage.IDENTIFIER__R2:
        getR2().clear();
        getR2().addAll((Collection<? extends declaration_specifiers>)newValue);
        return;
      case MyDslPackage.IDENTIFIER__DS:
        setDs((declaration_specifiers)newValue);
        return;
      case MyDslPackage.IDENTIFIER__STRUCT_OR_UNION:
        setStruct_or_union((String)newValue);
        return;
      case MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST:
        setStruct_declaration_list((struct_declaration_list)newValue);
        return;
      case MyDslPackage.IDENTIFIER__ID:
        setId((IDENTIFIER)newValue);
        return;
      case MyDslPackage.IDENTIFIER__EXPRESSION:
        setExpression((expression)newValue);
        return;
      case MyDslPackage.IDENTIFIER__REC:
        getRec().clear();
        getRec().addAll((Collection<? extends EObject>)newValue);
        return;
      case MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST:
        setArgument_expression_list((argument_expression_list)newValue);
        return;
      case MyDslPackage.IDENTIFIER__DR:
        setDr((direct_declaratorR)newValue);
        return;
      case MyDslPackage.IDENTIFIER__IL:
        setIl((identifier_listR)newValue);
        return;
      case MyDslPackage.IDENTIFIER__A:
        setA((statement)newValue);
        return;
      case MyDslPackage.IDENTIFIER__NAME:
        setName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION:
        setConstant_expression((constant_expression)null);
        return;
      case MyDslPackage.IDENTIFIER__STATEMENT:
        setStatement((statement)null);
        return;
      case MyDslPackage.IDENTIFIER__B:
        setB((statement)null);
        return;
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2:
        setDeclaration_specifiers2((declaration_specifiers)null);
        return;
      case MyDslPackage.IDENTIFIER__DECLARATOR1:
        setDeclarator1((declarator)null);
        return;
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1:
        setDeclaration_specifiers1((declaration_specifiers)null);
        return;
      case MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR:
        setAbstract_declarator((abstract_declarator)null);
        return;
      case MyDslPackage.IDENTIFIER__STORAGE_CLASS_SPECIFIER:
        setStorage_class_specifier(STORAGE_CLASS_SPECIFIER_EDEFAULT);
        return;
      case MyDslPackage.IDENTIFIER__R1:
        getR1().clear();
        return;
      case MyDslPackage.IDENTIFIER__TYPE_QUALIFIER:
        setType_qualifier(TYPE_QUALIFIER_EDEFAULT);
        return;
      case MyDslPackage.IDENTIFIER__R2:
        getR2().clear();
        return;
      case MyDslPackage.IDENTIFIER__DS:
        setDs((declaration_specifiers)null);
        return;
      case MyDslPackage.IDENTIFIER__STRUCT_OR_UNION:
        setStruct_or_union(STRUCT_OR_UNION_EDEFAULT);
        return;
      case MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST:
        setStruct_declaration_list((struct_declaration_list)null);
        return;
      case MyDslPackage.IDENTIFIER__ID:
        setId((IDENTIFIER)null);
        return;
      case MyDslPackage.IDENTIFIER__EXPRESSION:
        setExpression((expression)null);
        return;
      case MyDslPackage.IDENTIFIER__REC:
        getRec().clear();
        return;
      case MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST:
        setArgument_expression_list((argument_expression_list)null);
        return;
      case MyDslPackage.IDENTIFIER__DR:
        setDr((direct_declaratorR)null);
        return;
      case MyDslPackage.IDENTIFIER__IL:
        setIl((identifier_listR)null);
        return;
      case MyDslPackage.IDENTIFIER__A:
        setA((statement)null);
        return;
      case MyDslPackage.IDENTIFIER__NAME:
        setName(NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION:
        return constant_expression != null;
      case MyDslPackage.IDENTIFIER__STATEMENT:
        return statement != null;
      case MyDslPackage.IDENTIFIER__B:
        return b != null;
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2:
        return declaration_specifiers2 != null;
      case MyDslPackage.IDENTIFIER__DECLARATOR1:
        return declarator1 != null;
      case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1:
        return declaration_specifiers1 != null;
      case MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR:
        return abstract_declarator != null;
      case MyDslPackage.IDENTIFIER__STORAGE_CLASS_SPECIFIER:
        return STORAGE_CLASS_SPECIFIER_EDEFAULT == null ? storage_class_specifier != null : !STORAGE_CLASS_SPECIFIER_EDEFAULT.equals(storage_class_specifier);
      case MyDslPackage.IDENTIFIER__R1:
        return r1 != null && !r1.isEmpty();
      case MyDslPackage.IDENTIFIER__TYPE_QUALIFIER:
        return TYPE_QUALIFIER_EDEFAULT == null ? type_qualifier != null : !TYPE_QUALIFIER_EDEFAULT.equals(type_qualifier);
      case MyDslPackage.IDENTIFIER__R2:
        return r2 != null && !r2.isEmpty();
      case MyDslPackage.IDENTIFIER__DS:
        return ds != null;
      case MyDslPackage.IDENTIFIER__STRUCT_OR_UNION:
        return STRUCT_OR_UNION_EDEFAULT == null ? struct_or_union != null : !STRUCT_OR_UNION_EDEFAULT.equals(struct_or_union);
      case MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST:
        return struct_declaration_list != null;
      case MyDslPackage.IDENTIFIER__ID:
        return id != null;
      case MyDslPackage.IDENTIFIER__EXPRESSION:
        return expression != null;
      case MyDslPackage.IDENTIFIER__REC:
        return rec != null && !rec.isEmpty();
      case MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST:
        return argument_expression_list != null;
      case MyDslPackage.IDENTIFIER__DR:
        return dr != null;
      case MyDslPackage.IDENTIFIER__IL:
        return il != null;
      case MyDslPackage.IDENTIFIER__A:
        return a != null;
      case MyDslPackage.IDENTIFIER__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == identifier_list.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == identifier_listR.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == block_item.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == statement.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == jump_statement.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == labeled_statement.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION: return MyDslPackage.LABELED_STATEMENT__CONSTANT_EXPRESSION;
        case MyDslPackage.IDENTIFIER__STATEMENT: return MyDslPackage.LABELED_STATEMENT__STATEMENT;
        case MyDslPackage.IDENTIFIER__B: return MyDslPackage.LABELED_STATEMENT__B;
        default: return -1;
      }
    }
    if (baseClass == designator.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == parameter_declaration.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2: return MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS2;
        case MyDslPackage.IDENTIFIER__DECLARATOR1: return MyDslPackage.PARAMETER_DECLARATION__DECLARATOR1;
        case MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1: return MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS1;
        case MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR: return MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR;
        default: return -1;
      }
    }
    if (baseClass == declaration_specifiers.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.IDENTIFIER__STORAGE_CLASS_SPECIFIER: return MyDslPackage.DECLARATION_SPECIFIERS__STORAGE_CLASS_SPECIFIER;
        case MyDslPackage.IDENTIFIER__R1: return MyDslPackage.DECLARATION_SPECIFIERS__R1;
        case MyDslPackage.IDENTIFIER__TYPE_QUALIFIER: return MyDslPackage.DECLARATION_SPECIFIERS__TYPE_QUALIFIER;
        case MyDslPackage.IDENTIFIER__R2: return MyDslPackage.DECLARATION_SPECIFIERS__R2;
        default: return -1;
      }
    }
    if (baseClass == type_specifier.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.IDENTIFIER__DS: return MyDslPackage.TYPE_SPECIFIER__DS;
        default: return -1;
      }
    }
    if (baseClass == struct_or_union_specifier.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.IDENTIFIER__STRUCT_OR_UNION: return MyDslPackage.STRUCT_OR_UNION_SPECIFIER__STRUCT_OR_UNION;
        case MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST: return MyDslPackage.STRUCT_OR_UNION_SPECIFIER__STRUCT_DECLARATION_LIST;
        case MyDslPackage.IDENTIFIER__ID: return MyDslPackage.STRUCT_OR_UNION_SPECIFIER__ID;
        default: return -1;
      }
    }
    if (baseClass == postfix_expressionR.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.IDENTIFIER__EXPRESSION: return MyDslPackage.POSTFIX_EXPRESSION_R__EXPRESSION;
        case MyDslPackage.IDENTIFIER__REC: return MyDslPackage.POSTFIX_EXPRESSION_R__REC;
        case MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST: return MyDslPackage.POSTFIX_EXPRESSION_R__ARGUMENT_EXPRESSION_LIST;
        default: return -1;
      }
    }
    if (baseClass == primary_expression.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == identifier_list.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == identifier_listR.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == block_item.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == statement.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == jump_statement.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == labeled_statement.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.LABELED_STATEMENT__CONSTANT_EXPRESSION: return MyDslPackage.IDENTIFIER__CONSTANT_EXPRESSION;
        case MyDslPackage.LABELED_STATEMENT__STATEMENT: return MyDslPackage.IDENTIFIER__STATEMENT;
        case MyDslPackage.LABELED_STATEMENT__B: return MyDslPackage.IDENTIFIER__B;
        default: return -1;
      }
    }
    if (baseClass == designator.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == parameter_declaration.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS2: return MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS2;
        case MyDslPackage.PARAMETER_DECLARATION__DECLARATOR1: return MyDslPackage.IDENTIFIER__DECLARATOR1;
        case MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS1: return MyDslPackage.IDENTIFIER__DECLARATION_SPECIFIERS1;
        case MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR: return MyDslPackage.IDENTIFIER__ABSTRACT_DECLARATOR;
        default: return -1;
      }
    }
    if (baseClass == declaration_specifiers.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.DECLARATION_SPECIFIERS__STORAGE_CLASS_SPECIFIER: return MyDslPackage.IDENTIFIER__STORAGE_CLASS_SPECIFIER;
        case MyDslPackage.DECLARATION_SPECIFIERS__R1: return MyDslPackage.IDENTIFIER__R1;
        case MyDslPackage.DECLARATION_SPECIFIERS__TYPE_QUALIFIER: return MyDslPackage.IDENTIFIER__TYPE_QUALIFIER;
        case MyDslPackage.DECLARATION_SPECIFIERS__R2: return MyDslPackage.IDENTIFIER__R2;
        default: return -1;
      }
    }
    if (baseClass == type_specifier.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.TYPE_SPECIFIER__DS: return MyDslPackage.IDENTIFIER__DS;
        default: return -1;
      }
    }
    if (baseClass == struct_or_union_specifier.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.STRUCT_OR_UNION_SPECIFIER__STRUCT_OR_UNION: return MyDslPackage.IDENTIFIER__STRUCT_OR_UNION;
        case MyDslPackage.STRUCT_OR_UNION_SPECIFIER__STRUCT_DECLARATION_LIST: return MyDslPackage.IDENTIFIER__STRUCT_DECLARATION_LIST;
        case MyDslPackage.STRUCT_OR_UNION_SPECIFIER__ID: return MyDslPackage.IDENTIFIER__ID;
        default: return -1;
      }
    }
    if (baseClass == postfix_expressionR.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.POSTFIX_EXPRESSION_R__EXPRESSION: return MyDslPackage.IDENTIFIER__EXPRESSION;
        case MyDslPackage.POSTFIX_EXPRESSION_R__REC: return MyDslPackage.IDENTIFIER__REC;
        case MyDslPackage.POSTFIX_EXPRESSION_R__ARGUMENT_EXPRESSION_LIST: return MyDslPackage.IDENTIFIER__ARGUMENT_EXPRESSION_LIST;
        default: return -1;
      }
    }
    if (baseClass == primary_expression.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (Storage_class_specifier: ");
    result.append(storage_class_specifier);
    result.append(", Type_qualifier: ");
    result.append(type_qualifier);
    result.append(", Struct_or_union: ");
    result.append(struct_or_union);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //IDENTIFIERImpl
