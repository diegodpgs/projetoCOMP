/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.specifier_qualifier_list;
import org.xtext.example.mydsl.myDsl.static_assert_declaration;
import org.xtext.example.mydsl.myDsl.struct_declaration;
import org.xtext.example.mydsl.myDsl.struct_declarator_list;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>static assert declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.static_assert_declarationImpl#getSpecifier_qualifier_listx <em>Specifier qualifier listx</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.static_assert_declarationImpl#getStruct_declarator_list <em>Struct declarator list</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class static_assert_declarationImpl extends declarationImpl implements static_assert_declaration
{
  /**
   * The cached value of the '{@link #getSpecifier_qualifier_listx() <em>Specifier qualifier listx</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpecifier_qualifier_listx()
   * @generated
   * @ordered
   */
  protected specifier_qualifier_list specifier_qualifier_listx;

  /**
   * The cached value of the '{@link #getStruct_declarator_list() <em>Struct declarator list</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct_declarator_list()
   * @generated
   * @ordered
   */
  protected struct_declarator_list struct_declarator_list;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static_assert_declarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.STATIC_ASSERT_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public specifier_qualifier_list getSpecifier_qualifier_listx()
  {
    return specifier_qualifier_listx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSpecifier_qualifier_listx(specifier_qualifier_list newSpecifier_qualifier_listx, NotificationChain msgs)
  {
    specifier_qualifier_list oldSpecifier_qualifier_listx = specifier_qualifier_listx;
    specifier_qualifier_listx = newSpecifier_qualifier_listx;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX, oldSpecifier_qualifier_listx, newSpecifier_qualifier_listx);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSpecifier_qualifier_listx(specifier_qualifier_list newSpecifier_qualifier_listx)
  {
    if (newSpecifier_qualifier_listx != specifier_qualifier_listx)
    {
      NotificationChain msgs = null;
      if (specifier_qualifier_listx != null)
        msgs = ((InternalEObject)specifier_qualifier_listx).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX, null, msgs);
      if (newSpecifier_qualifier_listx != null)
        msgs = ((InternalEObject)newSpecifier_qualifier_listx).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX, null, msgs);
      msgs = basicSetSpecifier_qualifier_listx(newSpecifier_qualifier_listx, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX, newSpecifier_qualifier_listx, newSpecifier_qualifier_listx));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declarator_list getStruct_declarator_list()
  {
    return struct_declarator_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStruct_declarator_list(struct_declarator_list newStruct_declarator_list, NotificationChain msgs)
  {
    struct_declarator_list oldStruct_declarator_list = struct_declarator_list;
    struct_declarator_list = newStruct_declarator_list;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST, oldStruct_declarator_list, newStruct_declarator_list);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStruct_declarator_list(struct_declarator_list newStruct_declarator_list)
  {
    if (newStruct_declarator_list != struct_declarator_list)
    {
      NotificationChain msgs = null;
      if (struct_declarator_list != null)
        msgs = ((InternalEObject)struct_declarator_list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST, null, msgs);
      if (newStruct_declarator_list != null)
        msgs = ((InternalEObject)newStruct_declarator_list).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST, null, msgs);
      msgs = basicSetStruct_declarator_list(newStruct_declarator_list, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST, newStruct_declarator_list, newStruct_declarator_list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX:
        return basicSetSpecifier_qualifier_listx(null, msgs);
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST:
        return basicSetStruct_declarator_list(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX:
        return getSpecifier_qualifier_listx();
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST:
        return getStruct_declarator_list();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX:
        setSpecifier_qualifier_listx((specifier_qualifier_list)newValue);
        return;
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST:
        setStruct_declarator_list((struct_declarator_list)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX:
        setSpecifier_qualifier_listx((specifier_qualifier_list)null);
        return;
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST:
        setStruct_declarator_list((struct_declarator_list)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX:
        return specifier_qualifier_listx != null;
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST:
        return struct_declarator_list != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == struct_declaration.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX: return MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LISTX;
        case MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST: return MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == struct_declaration.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LISTX: return MyDslPackage.STATIC_ASSERT_DECLARATION__SPECIFIER_QUALIFIER_LISTX;
        case MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST: return MyDslPackage.STATIC_ASSERT_DECLARATION__STRUCT_DECLARATOR_LIST;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

} //static_assert_declarationImpl
