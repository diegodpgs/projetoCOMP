/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage
 * @generated
 */
public interface MyDslFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MyDslFactory eINSTANCE = org.xtext.example.mydsl.myDsl.impl.MyDslFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>translation unit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>translation unit</em>'.
   * @generated
   */
  translation_unit createtranslation_unit();

  /**
   * Returns a new object of class '<em>translation unit R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>translation unit R</em>'.
   * @generated
   */
  translation_unitR createtranslation_unitR();

  /**
   * Returns a new object of class '<em>external declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>external declaration</em>'.
   * @generated
   */
  external_declaration createexternal_declaration();

  /**
   * Returns a new object of class '<em>function definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function definition</em>'.
   * @generated
   */
  function_definition createfunction_definition();

  /**
   * Returns a new object of class '<em>declarator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>declarator</em>'.
   * @generated
   */
  declarator createdeclarator();

  /**
   * Returns a new object of class '<em>type qualifier list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type qualifier list</em>'.
   * @generated
   */
  type_qualifier_list createtype_qualifier_list();

  /**
   * Returns a new object of class '<em>type qualifier list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type qualifier list R</em>'.
   * @generated
   */
  type_qualifier_listR createtype_qualifier_listR();

  /**
   * Returns a new object of class '<em>direct declarator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>direct declarator</em>'.
   * @generated
   */
  direct_declarator createdirect_declarator();

  /**
   * Returns a new object of class '<em>direct declarator R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>direct declarator R</em>'.
   * @generated
   */
  direct_declaratorR createdirect_declaratorR();

  /**
   * Returns a new object of class '<em>parameter type list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>parameter type list</em>'.
   * @generated
   */
  parameter_type_list createparameter_type_list();

  /**
   * Returns a new object of class '<em>identifier list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>identifier list</em>'.
   * @generated
   */
  identifier_list createidentifier_list();

  /**
   * Returns a new object of class '<em>identifier list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>identifier list R</em>'.
   * @generated
   */
  identifier_listR createidentifier_listR();

  /**
   * Returns a new object of class '<em>parameter list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>parameter list</em>'.
   * @generated
   */
  parameter_list createparameter_list();

  /**
   * Returns a new object of class '<em>parameter list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>parameter list R</em>'.
   * @generated
   */
  parameter_listR createparameter_listR();

  /**
   * Returns a new object of class '<em>parameter declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>parameter declaration</em>'.
   * @generated
   */
  parameter_declaration createparameter_declaration();

  /**
   * Returns a new object of class '<em>abstract declarator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>abstract declarator</em>'.
   * @generated
   */
  abstract_declarator createabstract_declarator();

  /**
   * Returns a new object of class '<em>declaration list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>declaration list</em>'.
   * @generated
   */
  declaration_list createdeclaration_list();

  /**
   * Returns a new object of class '<em>declaration list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>declaration list R</em>'.
   * @generated
   */
  declaration_listR createdeclaration_listR();

  /**
   * Returns a new object of class '<em>compound statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>compound statement</em>'.
   * @generated
   */
  compound_statement createcompound_statement();

  /**
   * Returns a new object of class '<em>block item list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>block item list</em>'.
   * @generated
   */
  block_item_list createblock_item_list();

  /**
   * Returns a new object of class '<em>block item list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>block item list R</em>'.
   * @generated
   */
  block_item_listR createblock_item_listR();

  /**
   * Returns a new object of class '<em>block item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>block item</em>'.
   * @generated
   */
  block_item createblock_item();

  /**
   * Returns a new object of class '<em>statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>statement</em>'.
   * @generated
   */
  statement createstatement();

  /**
   * Returns a new object of class '<em>jump statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>jump statement</em>'.
   * @generated
   */
  jump_statement createjump_statement();

  /**
   * Returns a new object of class '<em>labeled statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>labeled statement</em>'.
   * @generated
   */
  labeled_statement createlabeled_statement();

  /**
   * Returns a new object of class '<em>iteration statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>iteration statement</em>'.
   * @generated
   */
  iteration_statement createiteration_statement();

  /**
   * Returns a new object of class '<em>declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>declaration</em>'.
   * @generated
   */
  declaration createdeclaration();

  /**
   * Returns a new object of class '<em>init declarator list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>init declarator list</em>'.
   * @generated
   */
  init_declarator_list createinit_declarator_list();

  /**
   * Returns a new object of class '<em>init declarator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>init declarator</em>'.
   * @generated
   */
  init_declarator createinit_declarator();

  /**
   * Returns a new object of class '<em>init declarator list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>init declarator list R</em>'.
   * @generated
   */
  init_declarator_listR createinit_declarator_listR();

  /**
   * Returns a new object of class '<em>declaration specifiers</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>declaration specifiers</em>'.
   * @generated
   */
  declaration_specifiers createdeclaration_specifiers();

  /**
   * Returns a new object of class '<em>selection statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>selection statement</em>'.
   * @generated
   */
  selection_statement createselection_statement();

  /**
   * Returns a new object of class '<em>expression statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>expression statement</em>'.
   * @generated
   */
  expression_statement createexpression_statement();

  /**
   * Returns a new object of class '<em>expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>expression</em>'.
   * @generated
   */
  expression createexpression();

  /**
   * Returns a new object of class '<em>expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>expression R</em>'.
   * @generated
   */
  expressionR createexpressionR();

  /**
   * Returns a new object of class '<em>conditional expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>conditional expression</em>'.
   * @generated
   */
  conditional_expression createconditional_expression();

  /**
   * Returns a new object of class '<em>logical or expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>logical or expression</em>'.
   * @generated
   */
  logical_or_expression createlogical_or_expression();

  /**
   * Returns a new object of class '<em>logical or expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>logical or expression R</em>'.
   * @generated
   */
  logical_or_expressionR createlogical_or_expressionR();

  /**
   * Returns a new object of class '<em>logical and expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>logical and expression</em>'.
   * @generated
   */
  logical_and_expression createlogical_and_expression();

  /**
   * Returns a new object of class '<em>logical and expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>logical and expression R</em>'.
   * @generated
   */
  logical_and_expressionR createlogical_and_expressionR();

  /**
   * Returns a new object of class '<em>inclusive or expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>inclusive or expression</em>'.
   * @generated
   */
  inclusive_or_expression createinclusive_or_expression();

  /**
   * Returns a new object of class '<em>inclusive or expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>inclusive or expression R</em>'.
   * @generated
   */
  inclusive_or_expressionR createinclusive_or_expressionR();

  /**
   * Returns a new object of class '<em>exclusive or expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>exclusive or expression</em>'.
   * @generated
   */
  exclusive_or_expression createexclusive_or_expression();

  /**
   * Returns a new object of class '<em>exclusive or expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>exclusive or expression R</em>'.
   * @generated
   */
  exclusive_or_expressionR createexclusive_or_expressionR();

  /**
   * Returns a new object of class '<em>and expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>and expression R</em>'.
   * @generated
   */
  and_expressionR createand_expressionR();

  /**
   * Returns a new object of class '<em>and expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>and expression</em>'.
   * @generated
   */
  and_expression createand_expression();

  /**
   * Returns a new object of class '<em>equality expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>equality expression</em>'.
   * @generated
   */
  equality_expression createequality_expression();

  /**
   * Returns a new object of class '<em>equality expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>equality expression R</em>'.
   * @generated
   */
  equality_expressionR createequality_expressionR();

  /**
   * Returns a new object of class '<em>relational expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>relational expression</em>'.
   * @generated
   */
  relational_expression createrelational_expression();

  /**
   * Returns a new object of class '<em>relational expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>relational expression R</em>'.
   * @generated
   */
  relational_expressionR createrelational_expressionR();

  /**
   * Returns a new object of class '<em>shift expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>shift expression</em>'.
   * @generated
   */
  shift_expression createshift_expression();

  /**
   * Returns a new object of class '<em>shift expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>shift expression R</em>'.
   * @generated
   */
  shift_expressionR createshift_expressionR();

  /**
   * Returns a new object of class '<em>additive expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>additive expression</em>'.
   * @generated
   */
  additive_expression createadditive_expression();

  /**
   * Returns a new object of class '<em>additive expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>additive expression R</em>'.
   * @generated
   */
  additive_expressionR createadditive_expressionR();

  /**
   * Returns a new object of class '<em>multiplicative expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>multiplicative expression R</em>'.
   * @generated
   */
  multiplicative_expressionR createmultiplicative_expressionR();

  /**
   * Returns a new object of class '<em>multiplicative expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>multiplicative expression</em>'.
   * @generated
   */
  multiplicative_expression createmultiplicative_expression();

  /**
   * Returns a new object of class '<em>assignment expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>assignment expression</em>'.
   * @generated
   */
  assignment_expression createassignment_expression();

  /**
   * Returns a new object of class '<em>cast expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cast expression</em>'.
   * @generated
   */
  cast_expression createcast_expression();

  /**
   * Returns a new object of class '<em>unary expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unary expression</em>'.
   * @generated
   */
  unary_expression createunary_expression();

  /**
   * Returns a new object of class '<em>postfix expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>postfix expression</em>'.
   * @generated
   */
  postfix_expression createpostfix_expression();

  /**
   * Returns a new object of class '<em>initializer</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>initializer</em>'.
   * @generated
   */
  initializer createinitializer();

  /**
   * Returns a new object of class '<em>initializer list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>initializer list</em>'.
   * @generated
   */
  initializer_list createinitializer_list();

  /**
   * Returns a new object of class '<em>initializer list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>initializer list R</em>'.
   * @generated
   */
  initializer_listR createinitializer_listR();

  /**
   * Returns a new object of class '<em>designation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>designation</em>'.
   * @generated
   */
  designation createdesignation();

  /**
   * Returns a new object of class '<em>designator list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>designator list</em>'.
   * @generated
   */
  designator_list createdesignator_list();

  /**
   * Returns a new object of class '<em>designator list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>designator list R</em>'.
   * @generated
   */
  designator_listR createdesignator_listR();

  /**
   * Returns a new object of class '<em>designator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>designator</em>'.
   * @generated
   */
  designator createdesignator();

  /**
   * Returns a new object of class '<em>constant expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant expression</em>'.
   * @generated
   */
  constant_expression createconstant_expression();

  /**
   * Returns a new object of class '<em>type name</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type name</em>'.
   * @generated
   */
  type_name createtype_name();

  /**
   * Returns a new object of class '<em>specifier qualifier list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>specifier qualifier list</em>'.
   * @generated
   */
  specifier_qualifier_list createspecifier_qualifier_list();

  /**
   * Returns a new object of class '<em>struct declarator list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>struct declarator list</em>'.
   * @generated
   */
  struct_declarator_list createstruct_declarator_list();

  /**
   * Returns a new object of class '<em>struct declaration list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>struct declaration list</em>'.
   * @generated
   */
  struct_declaration_list createstruct_declaration_list();

  /**
   * Returns a new object of class '<em>struct declaration list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>struct declaration list R</em>'.
   * @generated
   */
  struct_declaration_listR createstruct_declaration_listR();

  /**
   * Returns a new object of class '<em>struct declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>struct declaration</em>'.
   * @generated
   */
  struct_declaration createstruct_declaration();

  /**
   * Returns a new object of class '<em>struct declarator list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>struct declarator list R</em>'.
   * @generated
   */
  struct_declarator_listR createstruct_declarator_listR();

  /**
   * Returns a new object of class '<em>struct declarator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>struct declarator</em>'.
   * @generated
   */
  struct_declarator createstruct_declarator();

  /**
   * Returns a new object of class '<em>static assert declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>static assert declaration</em>'.
   * @generated
   */
  static_assert_declaration createstatic_assert_declaration();

  /**
   * Returns a new object of class '<em>struct or union specifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>struct or union specifier</em>'.
   * @generated
   */
  struct_or_union_specifier createstruct_or_union_specifier();

  /**
   * Returns a new object of class '<em>atomic type specifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>atomic type specifier</em>'.
   * @generated
   */
  atomic_type_specifier createatomic_type_specifier();

  /**
   * Returns a new object of class '<em>postfix expression R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>postfix expression R</em>'.
   * @generated
   */
  postfix_expressionR createpostfix_expressionR();

  /**
   * Returns a new object of class '<em>argument expression list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>argument expression list</em>'.
   * @generated
   */
  argument_expression_list createargument_expression_list();

  /**
   * Returns a new object of class '<em>argument expression list R</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>argument expression list R</em>'.
   * @generated
   */
  argument_expression_listR createargument_expression_listR();

  /**
   * Returns a new object of class '<em>primary expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>primary expression</em>'.
   * @generated
   */
  primary_expression createprimary_expression();

  /**
   * Returns a new object of class '<em>pointer</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>pointer</em>'.
   * @generated
   */
  pointer createpointer();

  /**
   * Returns a new object of class '<em>IDENTIFIER</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>IDENTIFIER</em>'.
   * @generated
   */
  IDENTIFIER createIDENTIFIER();

  /**
   * Returns a new object of class '<em>type specifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type specifier</em>'.
   * @generated
   */
  type_specifier createtype_specifier();

  /**
   * Returns a new object of class '<em>String C</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>String C</em>'.
   * @generated
   */
  StringC createStringC();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  MyDslPackage getMyDslPackage();

} //MyDslFactory
